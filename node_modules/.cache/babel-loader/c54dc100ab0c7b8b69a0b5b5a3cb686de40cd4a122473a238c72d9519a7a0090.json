{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\celst\\\\sds\\\\src\\\\components\\\\GrowthSimulation.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, LineElement, PointElement, Tooltip, Legend, CategoryScale, LinearScale, Title } from 'chart.js';\nimport odeRK4 from 'ode-rk4';\nimport '../styles/GrowthSimulation.css'; // Import the updated CSS file\nimport logoSrc from '../assets/images/cslogo.png';\n\n// --- Simulation Logic & ChartJS Registration (NO CHANGES) ---\n// ... (Keep simulation functions and ChartJS.register as before) ...\n// Default Model Parameters\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultParams = {\n  timeStart: 0,\n  timeLength: 100,\n  timeStep: 0.2,\n  'C BD Rate': 1.11,\n  'C Coeff': 0.7,\n  'C Cons. Rate': 76.39,\n  'CO2 Coeff': 0.8,\n  'CO2 Production Rate': 410000,\n  'CO2 Removal Rate': 12.6,\n  'External CO2': 428.23,\n  'External Temp': 24,\n  'Growth Coeff': 5.1,\n  'Initial C:N Ratio': 43.58,\n  'Initial Complex:Simple Ratio': 0.8054,\n  'Initial Dry Substrate Weight': 410.2,\n  'IsMush': 1,\n  'Mushroom Multiplier': 5.17,\n  'N Coeff': 68.4,\n  'N Rate': 13.03,\n  'pH': 6.91,\n  'pH Coeff': 1.4,\n  'Temp Coeff': 1.3,\n  'Temp Production Rate': 405,\n  'Temp Transfer Rate': 1.5,\n  'Effect of CO2 on Mush Growth Data': [[500, 0.9], [800, 1], [1000, 0.8], [1200, 0.25], [1400, 0]],\n  'Effect of CO2 on Myc Growth Data': [[15000, 1], [20000, 0.9], [25000, 0.25], [30000, 0]],\n  'Effect of pH on Mush Growth Data': [[5.5, 0], [6, 0.25], [6.7, 1], [7, 0.6], [7.5, 0]],\n  'Effect of pH on Myc Growth Data': [[5.8, 0], [6, 0.25], [6.7, 1], [7, 0.6], [7.5, 0]],\n  'Effect of Temp on Mush Growth Data': [[10, 0], [15, 5.37], [20, 6.36], [25, 8.63], [30, 6.37], [40, 0]],\n  'Effect of Temp on Myc Growth Data': [[10, 0], [15, 5.37], [20, 6.36], [25, 8.63], [30, 6.37], [35, 5.36], [45, 0]]\n};\nfunction linearInterpolate(data, x) {/* ... */}\nfunction derivatives(dydt, y, t, currentParams) {/* ... */}\nfunction getInitialState(p) {/* ... */}\nfunction runSimulation(inputParams) {/* ... */}\nChartJS.register(LineElement, PointElement, Tooltip, Legend, CategoryScale, LinearScale, Title);\n// --- React Component ---\nconst GrowthSimulation = () => {\n  _s();\n  const navigate = useNavigate();\n  const [simulationResults, setSimulationResults] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [batchName, setBatchName] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [initialCNRatio, setInitialCNRatio] = useState(defaultParams['Initial C:N Ratio']);\n  const [finalSimulatedYield, setFinalSimulatedYield] = useState(null);\n  const [activeChartTab, setActiveChartTab] = useState('yield');\n\n  // --- useEffect Hook (NO CHANGES NEEDED HERE) ---\n  useEffect(() => {\n    let isMounted = true;\n    setIsLoading(true);\n    setError(null);\n    setFinalSimulatedYield(null);\n    setTimeout(() => {\n      if (!isMounted) return;\n      try {\n        const savedTemperature = localStorage.getItem('temperature');\n        const savedPh = localStorage.getItem('ph');\n        const savedSubstrateJson = localStorage.getItem('substrate');\n        const savedDays = localStorage.getItem('simulationDays');\n        const savedBatchName = localStorage.getItem('batchName') || 'N/A';\n        const savedStartDate = localStorage.getItem('startDate') || 'N/A';\n        const savedCNRatio = localStorage.getItem('initialCNRatio') || defaultParams['Initial C:N Ratio'];\n        setBatchName(savedBatchName);\n        setStartDate(savedStartDate);\n        // Set state based on loaded value or default\n        const initialRatioValue = localStorage.getItem('initialCNRatio');\n        setInitialCNRatio(initialRatioValue !== null ? parseFloat(initialRatioValue) : defaultParams['Initial C:N Ratio']);\n        if (!savedTemperature || !savedPh || !savedSubstrateJson || !savedDays) {\n          throw new Error(\"Required simulation parameters not found in localStorage.\");\n        }\n        const substrateData = JSON.parse(savedSubstrateJson);\n        if (typeof substrateData !== 'object' || substrateData === null) {\n          throw new Error(\"Invalid substrate data found in localStorage.\");\n        }\n        const temp = parseFloat(savedTemperature);\n        const phValue = parseFloat(savedPh);\n        const days = parseInt(savedDays, 10);\n        const initialWeight = Object.values(substrateData).reduce((sum, val) => sum + (Number(val) || 0), 0);\n        const simulationDuration = Number.isInteger(days) && days > 0 ? days : defaultParams.timeLength;\n        if (isNaN(temp) || isNaN(phValue) || isNaN(initialWeight)) {\n          throw new Error(\"Invalid numerical parameters loaded from localStorage.\");\n        }\n        const simulationInputs = {\n          'External Temp': temp,\n          'pH': phValue,\n          'Initial Dry Substrate Weight': initialWeight > 0 ? initialWeight : defaultParams['Initial Dry Substrate Weight'],\n          'timeLength': simulationDuration,\n          'Initial C:N Ratio': parseFloat(savedCNRatio) || defaultParams['Initial C:N Ratio']\n        };\n        const results = runSimulation(simulationInputs);\n        if (isMounted) {\n          setSimulationResults(results);\n          if (results && results.length > 0) {\n            var _results;\n            const lastYield = (_results = results[results.length - 1]) === null || _results === void 0 ? void 0 : _results.MushroomYield;\n            if (Number.isFinite(lastYield)) {\n              setFinalSimulatedYield(lastYield);\n            }\n          }\n        }\n      } catch (err) {\n        console.error(\"Error during simulation setup or run:\", err);\n        if (isMounted) setError(err.message || \"Failed to run simulation.\");\n      } finally {\n        if (isMounted) setIsLoading(false);\n      }\n    }, 50);\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n  const handleBackClick = () => {\n    navigate('/condition-setting');\n  };\n\n  // --- Chart Data & Options ---\n  // Adjust colors to potentially use CSS variables or match the theme\n  const getChartConfig = () => {\n    if (!simulationResults || simulationResults.length === 0) {\n      return {\n        data: {\n          datasets: []\n        },\n        options: {}\n      };\n    }\n    const yieldColor = 'green'; // Keep specific colors for chart lines\n    const tempColor = 'red';\n    const textColor = '#333'; // Use CSS variable equivalent: var(--text-color-dark)\n    const gridColor = 'rgba(0, 0, 0, 0.05)'; // Lighter grid\n\n    let datasets = [];\n    const options = {\n      responsive: true,\n      maintainAspectRatio: false,\n      plugins: {\n        legend: {\n          display: true,\n          labels: {\n            color: textColor,\n            font: {\n              family: 'Lexend'\n            }\n          }\n        },\n        tooltip: {\n          enabled: true,\n          bodyFont: {\n            family: 'Lexend'\n          },\n          titleFont: {\n            family: 'Lexend'\n          }\n        },\n        title: {\n          display: true,\n          text: '',\n          color: textColor,\n          font: {\n            size: 16,\n            family: 'Lexend'\n          }\n        }\n      },\n      scales: {\n        x: {\n          type: 'linear',\n          title: {\n            display: true,\n            text: 'Time (Days)',\n            color: textColor,\n            font: {\n              family: 'Lexend'\n            }\n          },\n          ticks: {\n            color: textColor,\n            font: {\n              family: 'Lexend'\n            }\n          },\n          // Removed stepSize for auto ticks\n          grid: {\n            color: gridColor\n          },\n          min: 0\n        },\n        yYield: {\n          type: 'linear',\n          position: 'left',\n          title: {\n            display: true,\n            text: 'Yield (g)',\n            color: yieldColor,\n            font: {\n              family: 'Lexend'\n            }\n          },\n          ticks: {\n            color: yieldColor,\n            font: {\n              family: 'Lexend'\n            }\n          },\n          grid: {\n            drawOnChartArea: false\n          },\n          beginAtZero: true,\n          display: false\n        },\n        yTemp: {\n          type: 'linear',\n          position: 'left',\n          title: {\n            display: true,\n            text: 'Temperature (°C)',\n            color: tempColor,\n            font: {\n              family: 'Lexend'\n            }\n          },\n          ticks: {\n            color: tempColor,\n            font: {\n              family: 'Lexend'\n            }\n          },\n          grid: {\n            drawOnChartArea: false\n          },\n          beginAtZero: false,\n          display: false\n        }\n      }\n    };\n    switch (activeChartTab) {\n      case 'yield':\n        options.plugins.title.text = 'Yield Over Time';\n        options.scales.yYield.display = true;\n        datasets = [{\n          label: 'Mushroom Yield (g)',\n          data: simulationResults.map(p => ({\n            x: p.time,\n            y: Number.isFinite(p.MushroomYield) ? p.MushroomYield : null\n          })),\n          borderColor: yieldColor,\n          backgroundColor: 'rgba(0, 128, 0, 0.1)',\n          yAxisID: 'yYield'\n        }];\n        break;\n      case 'temp':\n        options.plugins.title.text = 'Temperature Over Time';\n        options.scales.yTemp.display = true;\n        datasets = [{\n          label: 'Temperature (°C)',\n          data: simulationResults.map(p => ({\n            x: p.time,\n            y: Number.isFinite(p.Temp) ? p.Temp : null\n          })),\n          borderColor: tempColor,\n          backgroundColor: 'rgba(255, 0, 0, 0.1)',\n          yAxisID: 'yTemp'\n        }];\n        break;\n      default:\n        datasets = [];\n    }\n    return {\n      data: {\n        datasets: datasets.map(ds => ({\n          ...ds,\n          tension: 0.1,\n          pointRadius: 2,\n          spanGaps: true\n        }))\n      },\n      options: options\n    };\n  };\n  const chartConfig = getChartConfig();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"growth-simulation\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"simulation-header\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logobox\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: logoSrc,\n            alt: \"City Sprouts Logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"batch-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"batch-name\",\n          children: [\"Batch: #\", batchName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"start-date\",\n          children: [\"Start Date: \", startDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animation-area content-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Animation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-results-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tabs-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveChartTab('yield'),\n            className: `tab-button ${activeChartTab === 'yield' ? 'tab-button-active' : ''}`,\n            children: \"Yield over Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveChartTab('temp'),\n            className: `tab-button ${activeChartTab === 'temp' ? 'tab-button-active' : ''}`,\n            children: \"Temperature\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-area content-card\",\n          children: [isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"loading-message\",\n            children: \"Loading simulation data...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 39\n          }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-message\",\n            children: [\"Error: \", error]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 35\n          }, this), !isLoading && !error && simulationResults && (chartConfig.data.datasets.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-container\",\n            children: /*#__PURE__*/_jsxDEV(Line, {\n              options: chartConfig.options,\n              data: chartConfig.data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 34\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"no-data-message\",\n            children: \"No data available for this chart.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 35\n          }, this)), !isLoading && !error && !simulationResults && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"no-data-message\",\n            children: \"No simulation results available.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 72\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"results-section content-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"results-heading\",\n            children: [\"Results\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"info-icon\",\n              title: \"Key simulation outputs based on initial conditions\",\n              children: \"i\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"results-items\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"result-label\",\n                children: \"Projected Yield:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"result-value\",\n                children: [isLoading ? '...' : error ? 'Error' : Number.isFinite(finalSimulatedYield) ? `${finalSimulatedYield.toFixed(1)}g` : 'N/A', \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"result-label\",\n                children: \"C:N Ratio:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 33\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"result-value\",\n                children: [isLoading ? '...' : error ? 'Error' : Number.isFinite(initialCNRatio) ? initialCNRatio.toFixed(1) : 'N/A', \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 9\n  }, this);\n};\n_s(GrowthSimulation, \"H76gT0uXCmr1/wrJmUC7IPBpyxo=\", false, function () {\n  return [useNavigate];\n});\n_c = GrowthSimulation;\nexport default GrowthSimulation;\nvar _c;\n$RefreshReg$(_c, \"GrowthSimulation\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Line","Chart","ChartJS","LineElement","PointElement","Tooltip","Legend","CategoryScale","LinearScale","Title","odeRK4","logoSrc","jsxDEV","_jsxDEV","defaultParams","timeStart","timeLength","timeStep","linearInterpolate","data","x","derivatives","dydt","y","t","currentParams","getInitialState","p","runSimulation","inputParams","register","GrowthSimulation","_s","navigate","simulationResults","setSimulationResults","isLoading","setIsLoading","error","setError","batchName","setBatchName","startDate","setStartDate","initialCNRatio","setInitialCNRatio","finalSimulatedYield","setFinalSimulatedYield","activeChartTab","setActiveChartTab","isMounted","setTimeout","savedTemperature","localStorage","getItem","savedPh","savedSubstrateJson","savedDays","savedBatchName","savedStartDate","savedCNRatio","initialRatioValue","parseFloat","Error","substrateData","JSON","parse","temp","phValue","days","parseInt","initialWeight","Object","values","reduce","sum","val","Number","simulationDuration","isInteger","isNaN","simulationInputs","results","length","_results","lastYield","MushroomYield","isFinite","err","console","message","handleBackClick","getChartConfig","datasets","options","yieldColor","tempColor","textColor","gridColor","responsive","maintainAspectRatio","plugins","legend","display","labels","color","font","family","tooltip","enabled","bodyFont","titleFont","title","text","size","scales","type","ticks","grid","min","yYield","position","drawOnChartArea","beginAtZero","yTemp","label","map","time","borderColor","backgroundColor","yAxisID","Temp","ds","tension","pointRadius","spanGaps","chartConfig","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/celst/sds/src/components/GrowthSimulation.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, LineElement, PointElement, Tooltip, Legend, CategoryScale, LinearScale, Title } from 'chart.js';\r\nimport odeRK4 from 'ode-rk4';\r\nimport '../styles/GrowthSimulation.css'; // Import the updated CSS file\r\nimport logoSrc from '../assets/images/cslogo.png';\r\n\r\n// --- Simulation Logic & ChartJS Registration (NO CHANGES) ---\r\n// ... (Keep simulation functions and ChartJS.register as before) ...\r\n// Default Model Parameters\r\nconst defaultParams = {\r\n    timeStart: 0, timeLength: 100, timeStep: 0.2,\r\n    'C BD Rate': 1.11, 'C Coeff': 0.7, 'C Cons. Rate': 76.39, 'CO2 Coeff': 0.8,\r\n    'CO2 Production Rate': 410000, 'CO2 Removal Rate': 12.6, 'External CO2': 428.23,\r\n    'External Temp': 24, 'Growth Coeff': 5.1, 'Initial C:N Ratio': 43.58,\r\n    'Initial Complex:Simple Ratio': 0.8054, 'Initial Dry Substrate Weight': 410.2,\r\n    'IsMush': 1, 'Mushroom Multiplier': 5.17, 'N Coeff': 68.4, 'N Rate': 13.03,\r\n    'pH': 6.91, 'pH Coeff': 1.4, 'Temp Coeff': 1.3, 'Temp Production Rate': 405,\r\n    'Temp Transfer Rate': 1.5,\r\n    'Effect of CO2 on Mush Growth Data': [[500, 0.9], [800, 1], [1000, 0.8], [1200, 0.25], [1400, 0]],\r\n    'Effect of CO2 on Myc Growth Data': [[15000, 1], [20000, 0.9], [25000, 0.25], [30000, 0]],\r\n    'Effect of pH on Mush Growth Data': [[5.5, 0], [6, 0.25], [6.7, 1], [7, 0.6], [7.5, 0]],\r\n    'Effect of pH on Myc Growth Data': [[5.8, 0], [6, 0.25], [6.7, 1], [7, 0.6], [7.5, 0]],\r\n    'Effect of Temp on Mush Growth Data': [[10, 0], [15, 5.37], [20, 6.36], [25, 8.63], [30, 6.37], [40, 0]],\r\n    'Effect of Temp on Myc Growth Data': [[10, 0], [15, 5.37], [20, 6.36], [25, 8.63], [30, 6.37], [35, 5.36], [45, 0]],\r\n};\r\nfunction linearInterpolate(data, x) { /* ... */ }\r\nfunction derivatives(dydt, y, t, currentParams) { /* ... */ }\r\nfunction getInitialState(p) { /* ... */ }\r\nfunction runSimulation(inputParams) { /* ... */ }\r\nChartJS.register(LineElement, PointElement, Tooltip, Legend, CategoryScale, LinearScale, Title);\r\n// --- React Component ---\r\nconst GrowthSimulation = () => {\r\n    const navigate = useNavigate();\r\n    const [simulationResults, setSimulationResults] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [batchName, setBatchName] = useState('');\r\n    const [startDate, setStartDate] = useState('');\r\n    const [initialCNRatio, setInitialCNRatio] = useState(defaultParams['Initial C:N Ratio']);\r\n    const [finalSimulatedYield, setFinalSimulatedYield] = useState(null);\r\n    const [activeChartTab, setActiveChartTab] = useState('yield');\r\n\r\n    // --- useEffect Hook (NO CHANGES NEEDED HERE) ---\r\n    useEffect(() => {\r\n        let isMounted = true;\r\n        setIsLoading(true);\r\n        setError(null);\r\n        setFinalSimulatedYield(null);\r\n\r\n        setTimeout(() => {\r\n            if (!isMounted) return;\r\n            try {\r\n                const savedTemperature = localStorage.getItem('temperature');\r\n                const savedPh = localStorage.getItem('ph');\r\n                const savedSubstrateJson = localStorage.getItem('substrate');\r\n                const savedDays = localStorage.getItem('simulationDays');\r\n                const savedBatchName = localStorage.getItem('batchName') || 'N/A';\r\n                const savedStartDate = localStorage.getItem('startDate') || 'N/A';\r\n                const savedCNRatio = localStorage.getItem('initialCNRatio') || defaultParams['Initial C:N Ratio'];\r\n\r\n                setBatchName(savedBatchName);\r\n                setStartDate(savedStartDate);\r\n                // Set state based on loaded value or default\r\n                const initialRatioValue = localStorage.getItem('initialCNRatio');\r\n                setInitialCNRatio(initialRatioValue !== null ? parseFloat(initialRatioValue) : defaultParams['Initial C:N Ratio']);\r\n\r\n                if (!savedTemperature || !savedPh || !savedSubstrateJson || !savedDays) {\r\n                    throw new Error(\"Required simulation parameters not found in localStorage.\");\r\n                }\r\n\r\n                const substrateData = JSON.parse(savedSubstrateJson);\r\n                if (typeof substrateData !== 'object' || substrateData === null) {\r\n                    throw new Error(\"Invalid substrate data found in localStorage.\");\r\n                }\r\n\r\n                const temp = parseFloat(savedTemperature);\r\n                const phValue = parseFloat(savedPh);\r\n                const days = parseInt(savedDays, 10);\r\n                const initialWeight = Object.values(substrateData).reduce((sum, val) => sum + (Number(val) || 0), 0);\r\n\r\n                const simulationDuration = (Number.isInteger(days) && days > 0) ? days : defaultParams.timeLength;\r\n\r\n                if (isNaN(temp) || isNaN(phValue) || isNaN(initialWeight)) {\r\n                    throw new Error(\"Invalid numerical parameters loaded from localStorage.\");\r\n                }\r\n\r\n                const simulationInputs = {\r\n                    'External Temp': temp,\r\n                    'pH': phValue,\r\n                    'Initial Dry Substrate Weight': initialWeight > 0 ? initialWeight : defaultParams['Initial Dry Substrate Weight'],\r\n                    'timeLength': simulationDuration,\r\n                    'Initial C:N Ratio': parseFloat(savedCNRatio) || defaultParams['Initial C:N Ratio']\r\n                };\r\n\r\n                const results = runSimulation(simulationInputs);\r\n                if (isMounted) {\r\n                    setSimulationResults(results);\r\n                    if (results && results.length > 0) {\r\n                        const lastYield = results[results.length - 1]?.MushroomYield;\r\n                        if (Number.isFinite(lastYield)) {\r\n                            setFinalSimulatedYield(lastYield);\r\n                        }\r\n                    }\r\n                }\r\n\r\n            } catch (err) {\r\n                console.error(\"Error during simulation setup or run:\", err);\r\n                if (isMounted) setError(err.message || \"Failed to run simulation.\");\r\n            } finally {\r\n                if (isMounted) setIsLoading(false);\r\n            }\r\n        }, 50);\r\n\r\n        return () => { isMounted = false; };\r\n    }, []);\r\n\r\n    const handleBackClick = () => { navigate('/condition-setting'); };\r\n\r\n    // --- Chart Data & Options ---\r\n    // Adjust colors to potentially use CSS variables or match the theme\r\n    const getChartConfig = () => {\r\n        if (!simulationResults || simulationResults.length === 0) {\r\n            return { data: { datasets: [] }, options: {} };\r\n        }\r\n\r\n        const yieldColor = 'green'; // Keep specific colors for chart lines\r\n        const tempColor = 'red';\r\n        const textColor = '#333'; // Use CSS variable equivalent: var(--text-color-dark)\r\n        const gridColor = 'rgba(0, 0, 0, 0.05)'; // Lighter grid\r\n\r\n        let datasets = [];\r\n        const options = {\r\n            responsive: true, maintainAspectRatio: false,\r\n            plugins: {\r\n                legend: { display: true, labels: { color: textColor, font: { family: 'Lexend'} } },\r\n                tooltip: { enabled: true, bodyFont: { family: 'Lexend'}, titleFont: { family: 'Lexend' } },\r\n                title: { display: true, text: '', color: textColor, font: { size: 16, family: 'Lexend' } }\r\n            },\r\n            scales: {\r\n                x: {\r\n                    type: 'linear',\r\n                    title: { display: true, text: 'Time (Days)', color: textColor, font: { family: 'Lexend'} },\r\n                    ticks: { color: textColor, font: { family: 'Lexend'} }, // Removed stepSize for auto ticks\r\n                    grid: { color: gridColor },\r\n                    min: 0,\r\n                },\r\n                yYield: { type: 'linear', position: 'left', title: { display: true, text: 'Yield (g)', color: yieldColor, font: { family: 'Lexend'} }, ticks: { color: yieldColor, font: { family: 'Lexend'} }, grid: { drawOnChartArea: false }, beginAtZero: true, display: false },\r\n                yTemp: { type: 'linear', position: 'left', title: { display: true, text: 'Temperature (°C)', color: tempColor, font: { family: 'Lexend'} }, ticks: { color: tempColor, font: { family: 'Lexend'} }, grid: { drawOnChartArea: false }, beginAtZero: false, display: false }\r\n            }\r\n        };\r\n\r\n        switch (activeChartTab) {\r\n             case 'yield':\r\n                 options.plugins.title.text = 'Yield Over Time';\r\n                 options.scales.yYield.display = true;\r\n                 datasets = [{\r\n                     label: 'Mushroom Yield (g)',\r\n                     data: simulationResults.map(p => ({ x: p.time, y: Number.isFinite(p.MushroomYield) ? p.MushroomYield : null })),\r\n                     borderColor: yieldColor, backgroundColor: 'rgba(0, 128, 0, 0.1)',\r\n                     yAxisID: 'yYield',\r\n                 }];\r\n                 break;\r\n             case 'temp':\r\n                  options.plugins.title.text = 'Temperature Over Time';\r\n                  options.scales.yTemp.display = true;\r\n                  datasets = [{\r\n                      label: 'Temperature (°C)',\r\n                      data: simulationResults.map(p => ({ x: p.time, y: Number.isFinite(p.Temp) ? p.Temp : null })),\r\n                      borderColor: tempColor, backgroundColor: 'rgba(255, 0, 0, 0.1)',\r\n                      yAxisID: 'yTemp',\r\n                  }];\r\n                  break;\r\n             default:\r\n                 datasets = [];\r\n         }\r\n\r\n        return {\r\n             data: { datasets: datasets.map(ds => ({ ...ds, tension: 0.1, pointRadius: 2, spanGaps: true })) },\r\n             options: options\r\n        };\r\n    };\r\n\r\n    const chartConfig = getChartConfig();\r\n\r\n    return (\r\n        <div className=\"growth-simulation\">\r\n            <header className=\"simulation-header\"> {/* Group header elements */}\r\n                <div className=\"logobox\">\r\n                    <div className=\"logo\">\r\n                        <img src={logoSrc} alt=\"City Sprouts Logo\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"batch-info\">\r\n                    <span className=\"batch-name\">Batch: #{batchName}</span>\r\n                    <span className=\"start-date\">Start Date: {startDate}</span>\r\n                </div>\r\n            </header>\r\n\r\n            {/* Main Content Grid */}\r\n            <main className=\"main-content-grid\">\r\n                {/* Left Column: Animation Placeholder */}\r\n                <div className=\"animation-area content-card\">\r\n                    <span>Animation</span> {/* Simpler text */}\r\n                </div>\r\n\r\n                {/* Right Column: Tabs, Chart, Results */}\r\n                <div className=\"chart-results-column\">\r\n                    <div className=\"tabs-container\">\r\n                        <button\r\n                            onClick={() => setActiveChartTab('yield')}\r\n                            className={`tab-button ${activeChartTab === 'yield' ? 'tab-button-active' : ''}`}\r\n                        >\r\n                            Yield over Time\r\n                        </button>\r\n                        <button\r\n                            onClick={() => setActiveChartTab('temp')}\r\n                             className={`tab-button ${activeChartTab === 'temp' ? 'tab-button-active' : ''}`}\r\n                        >\r\n                            Temperature\r\n                        </button>\r\n                        {/* <button className=\"tab-button\">pH</button>  Example if pH tab added back */}\r\n                    </div>\r\n\r\n                    {/* Chart Area Card */}\r\n                    <div className=\"chart-area content-card\">\r\n                        {isLoading && <p className=\"loading-message\">Loading simulation data...</p>}\r\n                        {error && <p className=\"error-message\">Error: {error}</p>}\r\n                        {!isLoading && !error && simulationResults && (\r\n                             chartConfig.data.datasets.length > 0 ? (\r\n                                 <div className=\"chart-container\">\r\n                                     <Line options={chartConfig.options} data={chartConfig.data} />\r\n                                 </div>\r\n                             ) : (\r\n                                  <p className=\"no-data-message\">No data available for this chart.</p>\r\n                             )\r\n                        )}\r\n                        {!isLoading && !error && !simulationResults && <p className=\"no-data-message\">No simulation results available.</p>}\r\n                        {/* Warning Removed for cleaner look, can be added back if needed\r\n                        <p className=\"warning-message\">\r\n                            Warning: Simulation logic is based on a scaffold...\r\n                        </p>\r\n                         */}\r\n                    </div>\r\n\r\n                    {/* Results Section Card */}\r\n                    <div className=\"results-section content-card\">\r\n                        <h3 className=\"results-heading\">\r\n                            Results\r\n                            <span className=\"info-icon\" title=\"Key simulation outputs based on initial conditions\">i</span>\r\n                        </h3>\r\n                        <div className=\"results-items\">\r\n                            <div className=\"result-item\">\r\n                                <span className=\"result-label\">Projected Yield:</span>\r\n                                <span className=\"result-value\">\r\n                                    {isLoading ? '...' : error ? 'Error' : Number.isFinite(finalSimulatedYield) ? `${finalSimulatedYield.toFixed(1)}g` : 'N/A'} {/* Adjusted precision */}\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"result-item\">\r\n                                <span className=\"result-label\">C:N Ratio:</span> {/* Shortened label */}\r\n                                <span className=\"result-value\">\r\n                                    {isLoading ? '...' : error ? 'Error' : Number.isFinite(initialCNRatio) ? initialCNRatio.toFixed(1) : 'N/A'} {/* Check if number */}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GrowthSimulation;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}