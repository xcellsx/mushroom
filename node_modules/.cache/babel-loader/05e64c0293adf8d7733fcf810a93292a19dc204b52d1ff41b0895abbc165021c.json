{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\celst\\\\sds\\\\src\\\\components\\\\ConditionSetting.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Pie } from 'react-chartjs-2';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/ConditionSetting.css'; // Ensure this CSS file exists\n\n// Register required components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\nconst ConditionSetting = () => {\n  _s();\n  const navigate = useNavigate();\n\n  // --- State Variables ---\n  const [temperature, setTemperature] = useState(25);\n  const [ph, setPh] = useState(7);\n  const [substrate, setSubstrate] = useState({\n    riceBran: 25,\n    corn: 25,\n    sugarcane: 25,\n    sawdust: 25\n  });\n  const [totalYield, setTotalYield] = useState(0);\n  const [simulationDays, setSimulationDays] = useState(40); // <-- New state for simulation duration\n\n  // --- Labels ---\n  const substrateLabels = {\n    riceBran: 'Rice Bran',\n    corn: 'Corn Cob',\n    sugarcane: 'Sugarcane',\n    sawdust: 'Sawdust'\n  };\n\n  // --- Event Handlers ---\n  const handleStartClick = () => {\n    // Save all parameters to localStorage\n    localStorage.setItem('substrate', JSON.stringify(substrate));\n    localStorage.setItem('temperature', temperature);\n    localStorage.setItem('ph', ph);\n    localStorage.setItem('yield', totalYield); // This is the calculated total substrate weight\n    localStorage.setItem('simulationDays', simulationDays); // <-- Save simulation days\n    console.log('Saved to localStorage:', {\n      substrate,\n      temperature,\n      ph,\n      totalYield,\n      simulationDays\n    }); // Debug log\n    navigate('/growth-simulation'); // Navigate to the Growth Simulation page\n  };\n  const handleBackClick = () => {\n    navigate('/'); // Navigate back to the Landing Page\n  };\n  const handleSubstrateChange = (key, value) => {\n    const numericValue = parseInt(value, 10) || 0;\n    setSubstrate(prev => ({\n      ...prev,\n      [key]: numericValue\n    }));\n  };\n  const handleDaysChange = e => {\n    const value = parseInt(e.target.value, 10);\n    // Basic validation: ensure it's a positive number, adjust max as needed\n    if (!isNaN(value) && value > 0 && value <= 365) {\n      setSimulationDays(value);\n    } else if (e.target.value === '') {\n      setSimulationDays(1); // Or some minimum default if cleared\n    }\n  };\n\n  // --- Effects ---\n  useEffect(() => {\n    // Calculate the total yield (substrate weight) whenever substrate values change\n    const total = Object.values(substrate).reduce((sum, weight) => sum + (Number(weight) || 0), 0);\n    setTotalYield(total);\n  }, [substrate]);\n\n  // --- Chart Configuration ---\n  const pieOptions = {\n    plugins: {\n      legend: {\n        labels: {\n          color: '#FFF6F6',\n          font: {\n            size: 14\n          }\n        }\n      }\n    },\n    maintainAspectRatio: false // Allow chart to resize\n  };\n  const pieData = {\n    labels: Object.values(substrateLabels),\n    datasets: [{\n      data: Object.values(substrate),\n      backgroundColor: ['#FFF6F6', '#7E9777', '#FF914D', '#8B4513'],\n      borderColor: '#333',\n      // Add border for better visibility\n      borderWidth: 1\n    }]\n  };\n\n  // --- JSX ---\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"condition-setting\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"condition-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: handleBackClick,\n        children: \"\\u2190\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Make Your Mushroom Grow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"condition-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sliders\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Conditions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Temperature: \", temperature, \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"20\",\n            max: \"30\",\n            value: temperature,\n            onChange: e => setTemperature(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"pH: \", ph]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"6\",\n            max: \"7\",\n            step: \"0.1\",\n            value: ph,\n            onChange: e => setPh(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"simulationDays\",\n            children: [\"Grow for: \", simulationDays, \" days\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"simulationDays\",\n            type: \"number\",\n            min: \"1\" // Minimum simulation days\n            ,\n            max: \"365\" // Optional: Set a maximum\n            ,\n            step: \"1\",\n            value: simulationDays,\n            onChange: handleDaysChange,\n            style: {\n              width: '80px',\n              marginLeft: '10px',\n              padding: '5px'\n            } // Basic styling\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"substrate-sliders\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Substrate Composition (Total: \", totalYield, \"g):\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"substrate-labels\",\n            children: Object.keys(substrate).map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"substrate-input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `substrate-${key}`,\n                children: [substrateLabels[key], \" (g):\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: `substrate-${key}`,\n                type: \"number\",\n                min: \"0\",\n                value: substrate[key],\n                onChange: e => handleSubstrateChange(key, e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 37\n              }, this)]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pie-chart-container\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Substrate Ratio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pie-chart\",\n            children: totalYield > 0 ? /*#__PURE__*/_jsxDEV(Pie, {\n              data: pieData,\n              options: pieOptions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 34\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: '#ccc',\n                textAlign: 'center'\n              },\n              children: \"Enter substrate values to see chart.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"start-button\",\n          onClick: handleStartClick,\n          children: \"Start Growing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n};\n_s(ConditionSetting, \"ai9i9TKdnmTv3EhLu6BWqhTHWVQ=\", false, function () {\n  return [useNavigate];\n});\n_c = ConditionSetting;\nexport default ConditionSetting;\nvar _c;\n$RefreshReg$(_c, \"ConditionSetting\");","map":{"version":3,"names":["React","useState","useEffect","Pie","Chart","ChartJS","ArcElement","Tooltip","Legend","useNavigate","jsxDEV","_jsxDEV","register","ConditionSetting","_s","navigate","temperature","setTemperature","ph","setPh","substrate","setSubstrate","riceBran","corn","sugarcane","sawdust","totalYield","setTotalYield","simulationDays","setSimulationDays","substrateLabels","handleStartClick","localStorage","setItem","JSON","stringify","console","log","handleBackClick","handleSubstrateChange","key","value","numericValue","parseInt","prev","handleDaysChange","e","target","isNaN","total","Object","values","reduce","sum","weight","Number","pieOptions","plugins","legend","labels","color","font","size","maintainAspectRatio","pieData","datasets","data","backgroundColor","borderColor","borderWidth","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","min","max","onChange","step","htmlFor","id","style","width","marginLeft","padding","keys","map","options","textAlign","_c","$RefreshReg$"],"sources":["C:/Users/celst/sds/src/components/ConditionSetting.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../styles/ConditionSetting.css'; // Ensure this CSS file exists\r\n\r\n// Register required components\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\nconst ConditionSetting = () => {\r\n    const navigate = useNavigate();\r\n\r\n    // --- State Variables ---\r\n    const [temperature, setTemperature] = useState(25);\r\n    const [ph, setPh] = useState(7);\r\n    const [substrate, setSubstrate] = useState({\r\n        riceBran: 25,\r\n        corn: 25,\r\n        sugarcane: 25,\r\n        sawdust: 25,\r\n    });\r\n    const [totalYield, setTotalYield] = useState(0);\r\n    const [simulationDays, setSimulationDays] = useState(40); // <-- New state for simulation duration\r\n\r\n    // --- Labels ---\r\n    const substrateLabels = {\r\n        riceBran: 'Rice Bran',\r\n        corn: 'Corn Cob',\r\n        sugarcane: 'Sugarcane',\r\n        sawdust: 'Sawdust',\r\n    };\r\n\r\n    // --- Event Handlers ---\r\n    const handleStartClick = () => {\r\n        // Save all parameters to localStorage\r\n        localStorage.setItem('substrate', JSON.stringify(substrate));\r\n        localStorage.setItem('temperature', temperature);\r\n        localStorage.setItem('ph', ph);\r\n        localStorage.setItem('yield', totalYield); // This is the calculated total substrate weight\r\n        localStorage.setItem('simulationDays', simulationDays); // <-- Save simulation days\r\n        console.log('Saved to localStorage:', { substrate, temperature, ph, totalYield, simulationDays }); // Debug log\r\n        navigate('/growth-simulation'); // Navigate to the Growth Simulation page\r\n    };\r\n\r\n    const handleBackClick = () => {\r\n        navigate('/'); // Navigate back to the Landing Page\r\n    };\r\n\r\n    const handleSubstrateChange = (key, value) => {\r\n        const numericValue = parseInt(value, 10) || 0;\r\n        setSubstrate((prev) => ({\r\n            ...prev,\r\n            [key]: numericValue,\r\n        }));\r\n    };\r\n\r\n    const handleDaysChange = (e) => {\r\n        const value = parseInt(e.target.value, 10);\r\n        // Basic validation: ensure it's a positive number, adjust max as needed\r\n        if (!isNaN(value) && value > 0 && value <= 365) {\r\n             setSimulationDays(value);\r\n        } else if (e.target.value === '') {\r\n             setSimulationDays(1); // Or some minimum default if cleared\r\n        }\r\n    };\r\n\r\n\r\n    // --- Effects ---\r\n    useEffect(() => {\r\n        // Calculate the total yield (substrate weight) whenever substrate values change\r\n        const total = Object.values(substrate).reduce((sum, weight) => sum + (Number(weight) || 0), 0);\r\n        setTotalYield(total);\r\n    }, [substrate]);\r\n\r\n    // --- Chart Configuration ---\r\n    const pieOptions = {\r\n        plugins: {\r\n            legend: { labels: { color: '#FFF6F6', font: { size: 14 } } },\r\n        },\r\n        maintainAspectRatio: false, // Allow chart to resize\r\n    };\r\n\r\n    const pieData = {\r\n        labels: Object.values(substrateLabels),\r\n        datasets: [\r\n            {\r\n                data: Object.values(substrate),\r\n                backgroundColor: ['#FFF6F6', '#7E9777', '#FF914D', '#8B4513'],\r\n                borderColor: '#333', // Add border for better visibility\r\n                borderWidth: 1,\r\n            },\r\n        ],\r\n    };\r\n\r\n    // --- JSX ---\r\n    return (\r\n        <div className=\"condition-setting\">\r\n            <header className=\"condition-header\">\r\n                <button className=\"back-button\" onClick={handleBackClick}>←</button>\r\n                <h1>Make Your Mushroom Grow</h1>\r\n            </header>\r\n            <main className=\"condition-content\">\r\n                <div className=\"sliders\"> {/* Top section for Temp, pH, Days */}\r\n                    <h3>Conditions:</h3>\r\n                    <div>\r\n                        <label>Temperature: {temperature}°C</label>\r\n                        <input\r\n                            type=\"range\" min=\"20\" max=\"30\" value={temperature}\r\n                            onChange={(e) => setTemperature(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label>pH: {ph}</label>\r\n                        <input\r\n                            type=\"range\" min=\"6\" max=\"7\" step=\"0.1\" value={ph}\r\n                            onChange={(e) => setPh(e.target.value)}\r\n                        />\r\n                    </div>\r\n                     {/* Input for Simulation Days */}\r\n                    <div>\r\n                        <label htmlFor=\"simulationDays\">Grow for: {simulationDays} days</label>\r\n                        <input\r\n                            id=\"simulationDays\"\r\n                            type=\"number\"\r\n                            min=\"1\" // Minimum simulation days\r\n                            max=\"365\" // Optional: Set a maximum\r\n                            step=\"1\"\r\n                            value={simulationDays}\r\n                            onChange={handleDaysChange}\r\n                            style={{ width: '80px', marginLeft: '10px', padding: '5px' }} // Basic styling\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"bottom\"> {/* Bottom section for Substrate and Chart */}\r\n                    <div className=\"substrate-sliders\">\r\n                        <h3>Substrate Composition (Total: {totalYield}g):</h3>\r\n                        <div className=\"substrate-labels\">\r\n                            {Object.keys(substrate).map((key) => (\r\n                                <div key={key} className=\"substrate-input-group\">\r\n                                    <label htmlFor={`substrate-${key}`}>\r\n                                        {substrateLabels[key]} (g):\r\n                                    </label>\r\n                                    <input\r\n                                        id={`substrate-${key}`}\r\n                                        type=\"number\" min=\"0\" value={substrate[key]}\r\n                                        onChange={(e) => handleSubstrateChange(key, e.target.value)}\r\n                                    />\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* <div className=\"yield-display\">\r\n                        <h3>Total Substrate: {totalYield}g</h3>\r\n                    </div> */}\r\n\r\n                    <div className=\"pie-chart-container\"> {/* Container for sizing */}\r\n                         <h3>Substrate Ratio</h3>\r\n                        <div className=\"pie-chart\">\r\n                            {totalYield > 0 ? (\r\n                                 <Pie data={pieData} options={pieOptions} />\r\n                            ) : (\r\n                                <p style={{color: '#ccc', textAlign: 'center'}}>Enter substrate values to see chart.</p>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <button className=\"start-button\" onClick={handleStartClick}>\r\n                        Start Growing\r\n                    </button>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ConditionSetting;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}