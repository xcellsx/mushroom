{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\celst\\\\sds\\\\src\\\\components\\\\GrowthSimulation.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, LineElement, PointElement, Tooltip, Legend, CategoryScale, LinearScale, Title } from 'chart.js';\nimport odeRK4 from 'ode-rk4'; // Import the RK4 library\nimport '../styles/GrowthSimulation.css'; // Can remove if not needed\nimport logoSrc from '../assets/images/cslogo.png'; // Ensure path is correct\n\n// Register required components for Chart.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(LineElement, PointElement, Tooltip, Legend, CategoryScale, LinearScale, Title);\n\n// --- Simulation Logic (Keep outside component) ---\n// (Includes: linearInterpolate, defaultParams, derivatives, getInitialState, runSimulation)\n// (Make sure the 'derivatives' function is fully implemented with your model's logic)\n\n// Helper function for Converters (Linear Interpolation)\nfunction linearInterpolate(data, x) {\n  if (!data || data.length === 0) return 0;\n  if (x <= data[0][0]) return data[0][1];\n  if (x >= data[data.length - 1][0]) return data[data.length - 1][1];\n  let i = 0;\n  while (i < data.length - 1 && x > data[i + 1][0]) i++;\n  const x0 = data[i][0],\n    y0 = data[i][1],\n    x1 = data[i + 1][0],\n    y1 = data[i + 1][1];\n  const divisor = x1 - x0;\n  if (divisor === 0) return y0;\n  const t = (x - x0) / divisor;\n  return y0 + t * (y1 - y0);\n}\n\n// Default Model Parameters\nconst defaultParams = {\n  timeStart: 0,\n  timeLength: 100,\n  timeStep: 0.2,\n  'C BD Rate': 1.11,\n  'C Coeff': 0.7,\n  'C Cons. Rate': 76.39,\n  'CO2 Coeff': 0.8,\n  'CO2 Production Rate': 410000,\n  'CO2 Removal Rate': 12.6,\n  'External CO2': 428.23,\n  'External Temp': 24,\n  'Growth Coeff': 5.1,\n  'Initial C:N Ratio': 43.58,\n  'Initial Complex:Simple Ratio': 0.8054,\n  'Initial Dry Substrate Weight': 410.2,\n  'IsMush': 1,\n  'Mushroom Multiplier': 5.17,\n  'N Coeff': 68.4,\n  'N Rate': 13.03,\n  'pH': 6.91,\n  'pH Coeff': 1.4,\n  'Temp Coeff': 1.3,\n  'Temp Production Rate': 405,\n  'Temp Transfer Rate': 1.5,\n  'Effect of CO2 on Mush Growth Data': [[500, 0.9], [800, 1], [1000, 0.8], [1200, 0.25], [1400, 0]],\n  'Effect of CO2 on Myc Growth Data': [[15000, 1], [20000, 0.9], [25000, 0.25], [30000, 0]],\n  'Effect of pH on Mush Growth Data': [[5.5, 0], [6, 0.25], [6.7, 1], [7, 0.6], [7.5, 0]],\n  'Effect of pH on Myc Growth Data': [[5.8, 0], [6, 0.25], [6.7, 1], [7, 0.6], [7.5, 0]],\n  'Effect of Temp on Mush Growth Data': [[10, 0], [15, 5.37], [20, 6.36], [25, 8.63], [30, 6.37], [40, 0]],\n  'Effect of Temp on Myc Growth Data': [[10, 0], [15, 5.37], [20, 6.36], [25, 8.63], [30, 6.37], [35, 5.36], [45, 0]]\n};\n\n// Derivative Function for RK4 Solver\n// *** THIS FUNCTION IS INCOMPLETE - NEEDS ALL MODEL EQUATIONS FILLED IN ***\nfunction derivatives(dydt, y, t, currentParams) {\n  const [currentCO2, currentComplexC, currentMushroomYield, currentMycelium, currentN, currentSimpleC, currentSpace, currentTemp] = y;\n  const initialDrySubstrateWeight = currentParams['Initial Dry Substrate Weight'] || 1;\n  const cnRatioPlusOne = currentParams['Initial C:N Ratio'] + 1 || 1;\n  const InitC = initialDrySubstrateWeight - initialDrySubstrateWeight / cnRatioPlusOne;\n  const AvailableN = currentN / initialDrySubstrateWeight;\n  const AvailableC = currentSimpleC / initialDrySubstrateWeight;\n  const NEffect = currentParams['N Coeff'] * AvailableN;\n  const CEffect = Math.sqrt(Math.max(0, currentParams['C Coeff'] * AvailableC));\n  const VolumeNormalisation = Math.sqrt(100 / initialDrySubstrateWeight);\n  const Effect_of_CO2_on_Mush_Growth = linearInterpolate(currentParams['Effect of CO2 on Mush Growth Data'], currentCO2);\n  const Effect_of_CO2_on_Myc_Growth = linearInterpolate(currentParams['Effect of CO2 on Myc Growth Data'], currentCO2);\n  const Effect_of_pH_on_Mush_Growth = linearInterpolate(currentParams['Effect of pH on Mush Growth Data'], currentParams['pH']);\n  const Effect_of_pH_on_Myc_Growth = linearInterpolate(currentParams['Effect of pH on Myc Growth Data'], currentParams['pH']);\n  const Effect_of_Temp_on_Mush_Growth = linearInterpolate(currentParams['Effect of Temp on Mush Growth Data'], currentTemp);\n  const Effect_of_Temp_on_Myc_Growth = linearInterpolate(currentParams['Effect of Temp on Myc Growth Data'], currentTemp);\n  const TempEff_ = currentParams['IsMush'] === 0 ? Effect_of_Temp_on_Myc_Growth : Effect_of_Temp_on_Mush_Growth;\n  const TempEffect = currentParams['Temp Coeff'] * TempEff_ / 10;\n  const pHEff_ = currentParams['IsMush'] === 0 ? Effect_of_pH_on_Myc_Growth : Effect_of_pH_on_Mush_Growth;\n  const pHEffect = pHEff_ * currentParams['pH Coeff'];\n  const CO2Eff_ = currentParams['IsMush'] === 0 ? Effect_of_CO2_on_Myc_Growth : Effect_of_CO2_on_Mush_Growth;\n  const CO2Effect = currentParams['CO2 Coeff'] * CO2Eff_;\n  const RawGrowthRate = TempEffect * pHEffect * NEffect * CEffect * CO2Effect;\n  const GrowthOpp = currentSpace * currentMycelium;\n  let GrowthRate = currentParams['IsMush'] === 1 ? RawGrowthRate * currentParams['Growth Coeff'] : RawGrowthRate * GrowthOpp * currentParams['Growth Coeff'];\n  let NormGrowthRate = currentParams['IsMush'] === 1 ? GrowthRate / 100 : GrowthRate;\n  // *** ADD ALL OTHER VARIABLE EQUATIONS FROM YOUR MODEL HERE ***\n  const flow_Breakdown = currentMycelium * currentParams['C BD Rate'] * currentComplexC * RawGrowthRate * VolumeNormalisation;\n  const flow_CCons = NormGrowthRate * currentParams['C Cons. Rate'];\n  const flow_CO2Prod = NormGrowthRate * currentParams['CO2 Production Rate'];\n  const flow_CO2Vent = currentParams['CO2 Removal Rate'] * (currentCO2 - currentParams['External CO2']) * VolumeNormalisation;\n  const flow_Colonisation = currentParams['IsMush'] === 0 ? GrowthRate : 0;\n  const flow_MushroomGrowth = currentParams['IsMush'] === 1 ? GrowthRate * currentParams['Mushroom Multiplier'] : 0;\n  const flow_NCons = NormGrowthRate * currentParams['N Rate'];\n  const flow_TempProd = NormGrowthRate * currentParams['Temp Production Rate'];\n  const flow_TempVent = (currentTemp - currentParams['External Temp']) * currentParams['Temp Transfer Rate'] * VolumeNormalisation;\n  dydt[0] = flow_CO2Prod - flow_CO2Vent;\n  dydt[1] = -flow_Breakdown;\n  dydt[2] = flow_MushroomGrowth;\n  dydt[3] = flow_Colonisation;\n  dydt[4] = -flow_NCons;\n  dydt[5] = flow_Breakdown - flow_CCons;\n  dydt[6] = -flow_Colonisation;\n  dydt[7] = flow_TempProd - flow_TempVent;\n  if (currentCO2 <= 0 && dydt[0] < 0) dydt[0] = 0;\n  if (currentComplexC <= 0 && dydt[1] < 0) dydt[1] = 0;\n  if (currentN <= 0 && dydt[4] < 0) dydt[4] = 0;\n  if (currentSimpleC <= 0 && dydt[5] < 0) dydt[5] = 0;\n  if (currentTemp <= 0 && dydt[7] < 0) dydt[7] = 0;\n}\n\n// Initial State Calculation\nfunction getInitialState(p) {\n  const initialDrySubstrateWeight = Number(p['Initial Dry Substrate Weight']) || 1;\n  const cnRatioPlusOne = (Number(p['Initial C:N Ratio']) || 0) + 1;\n  const complexSimpleRatio = Number(p['Initial Complex:Simple Ratio']) || 0;\n  const Init_C = initialDrySubstrateWeight - initialDrySubstrateWeight / cnRatioPlusOne;\n  return [Number(p['External CO2']) || 0, Init_C * complexSimpleRatio, 0, 0.9, initialDrySubstrateWeight / cnRatioPlusOne, Init_C * (1 - complexSimpleRatio), 0.98, Number(p['External Temp']) || 0];\n}\n\n// Run Simulation Function\nfunction runSimulation(inputParams) {\n  const currentParams = {\n    ...defaultParams,\n    ...inputParams\n  };\n  const y0 = getInitialState(currentParams);\n  const t0 = currentParams.timeStart;\n  const dt = currentParams.timeStep;\n  const timeLength = Math.max(0, currentParams.timeLength);\n  const positiveDt = Math.max(dt, 1e-6);\n  const numSteps = Math.floor(timeLength / positiveDt);\n  const derivativeFuncForSolver = (dydt, y, t) => {\n    try {\n      derivatives(dydt, y, t, currentParams);\n    } catch (e) {\n      console.error(\"Error in derivatives:\", e);\n      dydt.fill(0);\n    }\n  };\n  const integrator = odeRK4(y0, derivativeFuncForSolver, t0, positiveDt);\n  const results = [{\n    time: integrator.t,\n    state: [...integrator.y]\n  }];\n  console.log(`Starting JS simulation for ${timeLength} days...`);\n  if (numSteps <= 0) {\n    console.warn(\"Simulation length/step results in zero steps.\");\n    return [];\n  }\n  for (let i = 0; i < numSteps; i++) {\n    try {\n      integrator.step();\n      if (integrator.y.some(val => !Number.isFinite(val))) {\n        console.error(\"Simulation unstable at t=\", integrator.t);\n      }\n      results.push({\n        time: integrator.t,\n        state: [...integrator.y]\n      });\n    } catch (solverError) {\n      console.error(\"Error during RK4 step:\", solverError);\n      break;\n    }\n  }\n  console.log(\"JS simulation finished.\");\n  return results.map(p => ({\n    time: p.time,\n    CO2: p.state[0],\n    ComplexC: p.state[1],\n    MushroomYield: p.state[2],\n    Mycelium: p.state[3],\n    N: p.state[4],\n    SimpleC: p.state[5],\n    Space: p.state[6],\n    Temp: p.state[7]\n  }));\n}\n\n// --- React Component ---\nconst GrowthSimulation = () => {\n  _s();\n  const navigate = useNavigate();\n  const [simulationResults, setSimulationResults] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [batchName, setBatchName] = useState(''); // State for display\n  const [startDate, setStartDate] = useState(''); // State for display\n  const [initialCNRatio, setInitialCNRatio] = useState(defaultParams['Initial C:N Ratio']); // State for display\n  const [finalSimulatedYield, setFinalSimulatedYield] = useState(null);\n  const [activeChartTab, setActiveChartTab] = useState('yield'); // 'yield', 'temp'\n\n  useEffect(() => {\n    let isMounted = true;\n    setIsLoading(true);\n    setError(null);\n    setFinalSimulatedYield(null);\n    setTimeout(() => {\n      if (!isMounted) return;\n      try {\n        // Load initial parameters from localStorage\n        const savedTemperature = localStorage.getItem('temperature');\n        const savedPh = localStorage.getItem('ph');\n        const savedSubstrateJson = localStorage.getItem('substrate');\n        const savedDays = localStorage.getItem('simulationDays');\n        const savedBatchName = localStorage.getItem('batchName') || 'N/A'; // Load batch name\n        const savedStartDate = localStorage.getItem('startDate') || 'N/A'; // Load start date\n        const savedCNRatio = localStorage.getItem('initialCNRatio') || defaultParams['Initial C:N Ratio'];\n        setBatchName(savedBatchName);\n        setStartDate(savedStartDate);\n        setInitialCNRatio(parseFloat(savedCNRatio));\n        if (!savedTemperature || !savedPh || !savedSubstrateJson || !savedDays) {\n          throw new Error(\"Required simulation parameters not found in localStorage.\");\n        }\n        const substrateData = JSON.parse(savedSubstrateJson);\n        if (typeof substrateData !== 'object' || substrateData === null) {\n          throw new Error(\"Invalid substrate data found in localStorage.\");\n        }\n        const temp = parseFloat(savedTemperature);\n        const phValue = parseFloat(savedPh);\n        const days = parseInt(savedDays, 10);\n        const initialWeight = Object.values(substrateData).reduce((sum, val) => sum + (Number(val) || 0), 0);\n        const simulationDuration = Number.isInteger(days) && days > 0 ? days : defaultParams.timeLength;\n        if (isNaN(temp) || isNaN(phValue) || isNaN(initialWeight)) {\n          throw new Error(\"Invalid numerical parameters loaded from localStorage.\");\n        }\n\n        // Prepare inputs for the simulation function\n        const simulationInputs = {\n          'External Temp': temp,\n          'pH': phValue,\n          'Initial Dry Substrate Weight': initialWeight > 0 ? initialWeight : defaultParams['Initial Dry Substrate Weight'],\n          'timeLength': simulationDuration,\n          'Initial C:N Ratio': parseFloat(savedCNRatio) || defaultParams['Initial C:N Ratio']\n        };\n\n        // Run the simulation\n        const results = runSimulation(simulationInputs);\n        if (isMounted) {\n          setSimulationResults(results);\n          if (results && results.length > 0) {\n            var _results;\n            const lastYield = (_results = results[results.length - 1]) === null || _results === void 0 ? void 0 : _results.MushroomYield;\n            if (Number.isFinite(lastYield)) {\n              setFinalSimulatedYield(lastYield);\n            }\n          }\n        }\n      } catch (err) {\n        console.error(\"Error during simulation setup or run:\", err);\n        if (isMounted) setError(err.message || \"Failed to run simulation.\");\n      } finally {\n        if (isMounted) setIsLoading(false);\n      }\n    }, 50);\n    return () => {\n      isMounted = false;\n    };\n  }, []); // Removed navigate dependency, only load once\n\n  const handleBackClick = () => {\n    navigate('/condition-setting');\n  };\n\n  // --- Chart Data & Options ---\n  const getChartConfig = () => {\n    if (!simulationResults || simulationResults.length === 0) {\n      return {\n        data: {\n          datasets: []\n        },\n        options: {}\n      };\n    }\n    let datasets = [];\n    const options = {\n      responsive: true,\n      maintainAspectRatio: false,\n      plugins: {\n        legend: {\n          display: true,\n          labels: {\n            color: '#6b4f4b'\n          }\n        },\n        tooltip: {\n          enabled: true\n        },\n        title: {\n          display: true,\n          text: '',\n          color: '#6b4f4b',\n          font: {\n            size: 16\n          }\n        }\n      },\n      scales: {\n        x: {\n          type: 'linear',\n          title: {\n            display: true,\n            text: 'Time (Days)',\n            color: '#6b4f4b'\n          },\n          ticks: {\n            stepSize: 5,\n            color: '#6b4f4b'\n          },\n          grid: {\n            color: 'rgba(107, 79, 75, 0.1)'\n          },\n          min: 0\n        },\n        // Define potential Y axes\n        yYield: {\n          type: 'linear',\n          position: 'left',\n          title: {\n            display: true,\n            text: 'Yield (g)',\n            color: 'green'\n          },\n          ticks: {\n            color: 'green',\n            stepSize: 10\n          },\n          grid: {\n            drawOnChartArea: false\n          },\n          beginAtZero: true,\n          display: false\n        },\n        yTemp: {\n          type: 'linear',\n          position: 'left',\n          title: {\n            display: true,\n            text: 'Temperature (°C)',\n            color: 'red'\n          },\n          ticks: {\n            color: 'red',\n            stepSize: 2\n          },\n          grid: {\n            drawOnChartArea: false\n          },\n          beginAtZero: false,\n          display: false\n        }\n        // Removed yPH axis definition\n      }\n    };\n    switch (activeChartTab) {\n      case 'yield':\n        options.plugins.title.text = 'Yield Over Time';\n        options.scales.yYield.display = true; // Show yield axis\n        datasets = [{\n          label: 'Mushroom Yield (g)',\n          data: simulationResults.map(p => ({\n            x: p.time,\n            y: Number.isFinite(p.MushroomYield) ? p.MushroomYield : null\n          })),\n          borderColor: 'green',\n          backgroundColor: 'rgba(0, 128, 0, 0.1)',\n          yAxisID: 'yYield'\n        }];\n        break;\n      case 'temp':\n        options.plugins.title.text = 'Temperature Over Time';\n        options.scales.yTemp.display = true; // Show temp axis\n        datasets = [{\n          label: 'Temperature (°C)',\n          data: simulationResults.map(p => ({\n            x: p.time,\n            y: Number.isFinite(p.Temp) ? p.Temp : null\n          })),\n          borderColor: 'red',\n          backgroundColor: 'rgba(255, 0, 0, 0.1)',\n          yAxisID: 'yTemp'\n        }];\n        break;\n      // Removed 'ph' case\n      default:\n        datasets = [];\n    }\n    return {\n      data: {\n        datasets: datasets.map(ds => ({\n          ...ds,\n          tension: 0.1,\n          pointRadius: 2,\n          spanGaps: true\n        }))\n      },\n      options: options\n    };\n  };\n  const chartConfig = getChartConfig(); // Get current chart data and options\n\n  return (\n    /*#__PURE__*/\n    // Main container with creamy background\n    _jsxDEV(\"div\", {\n      className: \"growth-simulation min-h-screen bg-[#f5f2e9] p-4 md:p-8 text-[#6b4f4b]\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"mb-6 md:mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logobox\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleBackClick,\n            className: \"back-button\",\n            title: \"Back to Home\",\n            children: [\" \", \"\\u2190 \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"logo\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: logoSrc,\n              alt: \"Logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 21\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center text-xl font-bold text-[#8B4513] mb-2\",\n          children: \"CITY SPROUTS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center text-sm text-[#8B4513]\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Batch: #\", batchName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-[#d4b996] hover:bg-[#c8a980] text-[#6b4f4b] font-bold py-1 px-3 rounded-lg shadow transition duration-200\",\n            onClick: handleBackClick,\n            children: \"\\u2190 Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Start Date: \", startDate]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"grid grid-cols-1 md:grid-cols-3 gap-6 md:gap-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"md:col-span-1 bg-white/70 backdrop-blur-sm p-5 rounded-xl shadow-md border border-gray-200 flex items-center justify-center min-h-[40vh] md:min-h-[60vh]\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-400 text-lg\",\n            children: \"Animation Area\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"md:col-span-2 space-y-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-1 border-b border-gray-300\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setActiveChartTab('yield'),\n              className: `py-2 px-4 text-sm font-medium transition duration-200 ${activeChartTab === 'yield' ? 'border-b-2 border-[#8B4513] text-[#8B4513]' : 'text-gray-500 hover:text-[#8B4513]'}`,\n              children: \"Yield over Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setActiveChartTab('temp'),\n              className: `py-2 px-4 text-sm font-medium transition duration-200 ${activeChartTab === 'temp' ? 'border-b-2 border-[#8B4513] text-[#8B4513]' : 'text-gray-500 hover:text-[#8B4513]'}`,\n              children: \"Temperature\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-[#fffefa] p-4 rounded-lg shadow-inner border border-gray-200\",\n            children: [\" \", isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-center p-10\",\n              children: \"Loading and running simulation...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 39\n            }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-center p-10 text-red-600\",\n              children: [\"Error: \", error]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 35\n            }, this), !isLoading && !error && simulationResults && (chartConfig.data.datasets.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-container\",\n              style: {\n                position: 'relative',\n                height: '35vh',\n                width: '100%'\n              },\n              children: /*#__PURE__*/_jsxDEV(Line, {\n                options: chartConfig.options,\n                data: chartConfig.data\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-center p-10 text-gray-500\",\n              children: \"No data available for this chart.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 34\n            }, this)), !isLoading && !error && !simulationResults && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-center p-10\",\n              children: \"No simulation results available.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 72\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-orange-600 italic text-center mt-3 px-4\",\n              children: \"Warning: Simulation logic is based on a scaffold. Ensure all equations in the 'derivatives' function are fully implemented for accurate results.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white/70 backdrop-blur-sm p-5 rounded-xl shadow-md border border-gray-200\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-semibold mb-3 flex items-center\",\n              children: [\"Results\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-2 text-xs text-gray-500 cursor-help\",\n                title: \"Key simulation outputs based on initial conditions\",\n                children: \"(i)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-2 text-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium\",\n                  children: \"Projected Yield:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"bg-gray-200 px-3 py-1 rounded\",\n                  children: isLoading ? '...' : error ? 'Error' : Number.isFinite(finalSimulatedYield) ? `${finalSimulatedYield.toFixed(2)}g` : 'N/A'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium\",\n                  children: \"Initial C:N Ratio:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"bg-gray-200 px-3 py-1 rounded\",\n                  children: isLoading ? '...' : error ? 'Error' : initialCNRatio.toFixed(2)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 354,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 9\n    }, this)\n  );\n};\n_s(GrowthSimulation, \"H76gT0uXCmr1/wrJmUC7IPBpyxo=\", false, function () {\n  return [useNavigate];\n});\n_c = GrowthSimulation;\nexport default GrowthSimulation;\nvar _c;\n$RefreshReg$(_c, \"GrowthSimulation\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Line","Chart","ChartJS","LineElement","PointElement","Tooltip","Legend","CategoryScale","LinearScale","Title","odeRK4","logoSrc","jsxDEV","_jsxDEV","register","linearInterpolate","data","x","length","i","x0","y0","x1","y1","divisor","t","defaultParams","timeStart","timeLength","timeStep","derivatives","dydt","y","currentParams","currentCO2","currentComplexC","currentMushroomYield","currentMycelium","currentN","currentSimpleC","currentSpace","currentTemp","initialDrySubstrateWeight","cnRatioPlusOne","InitC","AvailableN","AvailableC","NEffect","CEffect","Math","sqrt","max","VolumeNormalisation","Effect_of_CO2_on_Mush_Growth","Effect_of_CO2_on_Myc_Growth","Effect_of_pH_on_Mush_Growth","Effect_of_pH_on_Myc_Growth","Effect_of_Temp_on_Mush_Growth","Effect_of_Temp_on_Myc_Growth","TempEff_","TempEffect","pHEff_","pHEffect","CO2Eff_","CO2Effect","RawGrowthRate","GrowthOpp","GrowthRate","NormGrowthRate","flow_Breakdown","flow_CCons","flow_CO2Prod","flow_CO2Vent","flow_Colonisation","flow_MushroomGrowth","flow_NCons","flow_TempProd","flow_TempVent","getInitialState","p","Number","complexSimpleRatio","Init_C","runSimulation","inputParams","t0","dt","positiveDt","numSteps","floor","derivativeFuncForSolver","e","console","error","fill","integrator","results","time","state","log","warn","step","some","val","isFinite","push","solverError","map","CO2","ComplexC","MushroomYield","Mycelium","N","SimpleC","Space","Temp","GrowthSimulation","_s","navigate","simulationResults","setSimulationResults","isLoading","setIsLoading","setError","batchName","setBatchName","startDate","setStartDate","initialCNRatio","setInitialCNRatio","finalSimulatedYield","setFinalSimulatedYield","activeChartTab","setActiveChartTab","isMounted","setTimeout","savedTemperature","localStorage","getItem","savedPh","savedSubstrateJson","savedDays","savedBatchName","savedStartDate","savedCNRatio","parseFloat","Error","substrateData","JSON","parse","temp","phValue","days","parseInt","initialWeight","Object","values","reduce","sum","simulationDuration","isInteger","isNaN","simulationInputs","_results","lastYield","err","message","handleBackClick","getChartConfig","datasets","options","responsive","maintainAspectRatio","plugins","legend","display","labels","color","tooltip","enabled","title","text","font","size","scales","type","ticks","stepSize","grid","min","yYield","position","drawOnChartArea","beginAtZero","yTemp","label","borderColor","backgroundColor","yAxisID","ds","tension","pointRadius","spanGaps","chartConfig","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","style","height","width","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/celst/sds/src/components/GrowthSimulation.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, LineElement, PointElement, Tooltip, Legend, CategoryScale, LinearScale, Title } from 'chart.js';\r\nimport odeRK4 from 'ode-rk4'; // Import the RK4 library\r\nimport '../styles/GrowthSimulation.css'; // Can remove if not needed\r\nimport logoSrc from '../assets/images/cslogo.png'; // Ensure path is correct\r\n\r\n\r\n// Register required components for Chart.js\r\nChartJS.register(LineElement, PointElement, Tooltip, Legend, CategoryScale, LinearScale, Title);\r\n\r\n// --- Simulation Logic (Keep outside component) ---\r\n// (Includes: linearInterpolate, defaultParams, derivatives, getInitialState, runSimulation)\r\n// (Make sure the 'derivatives' function is fully implemented with your model's logic)\r\n\r\n// Helper function for Converters (Linear Interpolation)\r\nfunction linearInterpolate(data, x) {\r\n    if (!data || data.length === 0) return 0;\r\n    if (x <= data[0][0]) return data[0][1];\r\n    if (x >= data[data.length - 1][0]) return data[data.length - 1][1];\r\n    let i = 0;\r\n    while (i < data.length - 1 && x > data[i + 1][0]) i++;\r\n    const x0 = data[i][0], y0 = data[i][1], x1 = data[i + 1][0], y1 = data[i + 1][1];\r\n    const divisor = (x1 - x0);\r\n    if (divisor === 0) return y0;\r\n    const t = (x - x0) / divisor;\r\n    return y0 + t * (y1 - y0);\r\n}\r\n\r\n// Default Model Parameters\r\nconst defaultParams = {\r\n    timeStart: 0, timeLength: 100, timeStep: 0.2,\r\n    'C BD Rate': 1.11, 'C Coeff': 0.7, 'C Cons. Rate': 76.39, 'CO2 Coeff': 0.8,\r\n    'CO2 Production Rate': 410000, 'CO2 Removal Rate': 12.6, 'External CO2': 428.23,\r\n    'External Temp': 24, 'Growth Coeff': 5.1, 'Initial C:N Ratio': 43.58,\r\n    'Initial Complex:Simple Ratio': 0.8054, 'Initial Dry Substrate Weight': 410.2,\r\n    'IsMush': 1, 'Mushroom Multiplier': 5.17, 'N Coeff': 68.4, 'N Rate': 13.03,\r\n    'pH': 6.91, 'pH Coeff': 1.4, 'Temp Coeff': 1.3, 'Temp Production Rate': 405,\r\n    'Temp Transfer Rate': 1.5,\r\n    'Effect of CO2 on Mush Growth Data': [[500, 0.9], [800, 1], [1000, 0.8], [1200, 0.25], [1400, 0]],\r\n    'Effect of CO2 on Myc Growth Data': [[15000, 1], [20000, 0.9], [25000, 0.25], [30000, 0]],\r\n    'Effect of pH on Mush Growth Data': [[5.5, 0], [6, 0.25], [6.7, 1], [7, 0.6], [7.5, 0]],\r\n    'Effect of pH on Myc Growth Data': [[5.8, 0], [6, 0.25], [6.7, 1], [7, 0.6], [7.5, 0]],\r\n    'Effect of Temp on Mush Growth Data': [[10, 0], [15, 5.37], [20, 6.36], [25, 8.63], [30, 6.37], [40, 0]],\r\n    'Effect of Temp on Myc Growth Data': [[10, 0], [15, 5.37], [20, 6.36], [25, 8.63], [30, 6.37], [35, 5.36], [45, 0]],\r\n};\r\n\r\n// Derivative Function for RK4 Solver\r\n// *** THIS FUNCTION IS INCOMPLETE - NEEDS ALL MODEL EQUATIONS FILLED IN ***\r\nfunction derivatives(dydt, y, t, currentParams) {\r\n    const [ currentCO2, currentComplexC, currentMushroomYield, currentMycelium, currentN, currentSimpleC, currentSpace, currentTemp ] = y;\r\n    const initialDrySubstrateWeight = currentParams['Initial Dry Substrate Weight'] || 1;\r\n    const cnRatioPlusOne = (currentParams['Initial C:N Ratio'] + 1) || 1;\r\n    const InitC = initialDrySubstrateWeight - (initialDrySubstrateWeight / cnRatioPlusOne);\r\n    const AvailableN = currentN / initialDrySubstrateWeight;\r\n    const AvailableC = currentSimpleC / initialDrySubstrateWeight;\r\n    const NEffect = currentParams['N Coeff'] * AvailableN;\r\n    const CEffect = Math.sqrt(Math.max(0, currentParams['C Coeff'] * AvailableC));\r\n    const VolumeNormalisation = Math.sqrt(100 / initialDrySubstrateWeight);\r\n    const Effect_of_CO2_on_Mush_Growth = linearInterpolate(currentParams['Effect of CO2 on Mush Growth Data'], currentCO2);\r\n    const Effect_of_CO2_on_Myc_Growth = linearInterpolate(currentParams['Effect of CO2 on Myc Growth Data'], currentCO2);\r\n    const Effect_of_pH_on_Mush_Growth = linearInterpolate(currentParams['Effect of pH on Mush Growth Data'], currentParams['pH']);\r\n    const Effect_of_pH_on_Myc_Growth = linearInterpolate(currentParams['Effect of pH on Myc Growth Data'], currentParams['pH']);\r\n    const Effect_of_Temp_on_Mush_Growth = linearInterpolate(currentParams['Effect of Temp on Mush Growth Data'], currentTemp);\r\n    const Effect_of_Temp_on_Myc_Growth = linearInterpolate(currentParams['Effect of Temp on Myc Growth Data'], currentTemp);\r\n    const TempEff_ = currentParams['IsMush'] === 0 ? Effect_of_Temp_on_Myc_Growth : Effect_of_Temp_on_Mush_Growth;\r\n    const TempEffect = (currentParams['Temp Coeff'] * TempEff_) / 10;\r\n    const pHEff_ = currentParams['IsMush'] === 0 ? Effect_of_pH_on_Myc_Growth : Effect_of_pH_on_Mush_Growth;\r\n    const pHEffect = pHEff_ * currentParams['pH Coeff'];\r\n    const CO2Eff_ = currentParams['IsMush'] === 0 ? Effect_of_CO2_on_Myc_Growth : Effect_of_CO2_on_Mush_Growth;\r\n    const CO2Effect = currentParams['CO2 Coeff'] * CO2Eff_;\r\n    const RawGrowthRate = TempEffect * pHEffect * NEffect * CEffect * CO2Effect;\r\n    const GrowthOpp = currentSpace * currentMycelium;\r\n    let GrowthRate = currentParams['IsMush'] === 1 ? (RawGrowthRate * currentParams['Growth Coeff']) : (RawGrowthRate * GrowthOpp * currentParams['Growth Coeff']);\r\n    let NormGrowthRate = currentParams['IsMush'] === 1 ? (GrowthRate / 100) : GrowthRate;\r\n    // *** ADD ALL OTHER VARIABLE EQUATIONS FROM YOUR MODEL HERE ***\r\n    const flow_Breakdown = currentMycelium * currentParams['C BD Rate'] * currentComplexC * RawGrowthRate * VolumeNormalisation;\r\n    const flow_CCons = NormGrowthRate * currentParams['C Cons. Rate'];\r\n    const flow_CO2Prod = NormGrowthRate * currentParams['CO2 Production Rate'];\r\n    const flow_CO2Vent = currentParams['CO2 Removal Rate'] * (currentCO2 - currentParams['External CO2']) * VolumeNormalisation;\r\n    const flow_Colonisation = currentParams['IsMush'] === 0 ? GrowthRate : 0;\r\n    const flow_MushroomGrowth = currentParams['IsMush'] === 1 ? (GrowthRate * currentParams['Mushroom Multiplier']) : 0;\r\n    const flow_NCons = NormGrowthRate * currentParams['N Rate'];\r\n    const flow_TempProd = NormGrowthRate * currentParams['Temp Production Rate'];\r\n    const flow_TempVent = (currentTemp - currentParams['External Temp']) * currentParams['Temp Transfer Rate'] * VolumeNormalisation;\r\n    dydt[0] = flow_CO2Prod - flow_CO2Vent; dydt[1] = -flow_Breakdown; dydt[2] = flow_MushroomGrowth; dydt[3] = flow_Colonisation;\r\n    dydt[4] = -flow_NCons; dydt[5] = flow_Breakdown - flow_CCons; dydt[6] = -flow_Colonisation; dydt[7] = flow_TempProd - flow_TempVent;\r\n    if (currentCO2 <= 0 && dydt[0] < 0) dydt[0] = 0; if (currentComplexC <= 0 && dydt[1] < 0) dydt[1] = 0; if (currentN <= 0 && dydt[4] < 0) dydt[4] = 0;\r\n    if (currentSimpleC <= 0 && dydt[5] < 0) dydt[5] = 0; if (currentTemp <= 0 && dydt[7] < 0) dydt[7] = 0;\r\n}\r\n\r\n// Initial State Calculation\r\nfunction getInitialState(p) {\r\n    const initialDrySubstrateWeight = Number(p['Initial Dry Substrate Weight']) || 1;\r\n    const cnRatioPlusOne = (Number(p['Initial C:N Ratio']) || 0) + 1;\r\n    const complexSimpleRatio = Number(p['Initial Complex:Simple Ratio']) || 0;\r\n    const Init_C = initialDrySubstrateWeight - (initialDrySubstrateWeight / cnRatioPlusOne);\r\n    return [ Number(p['External CO2']) || 0, Init_C * complexSimpleRatio, 0, 0.9, initialDrySubstrateWeight / cnRatioPlusOne, Init_C * (1 - complexSimpleRatio), 0.98, Number(p['External Temp']) || 0 ];\r\n}\r\n\r\n// Run Simulation Function\r\nfunction runSimulation(inputParams) {\r\n    const currentParams = { ...defaultParams, ...inputParams };\r\n    const y0 = getInitialState(currentParams);\r\n    const t0 = currentParams.timeStart; const dt = currentParams.timeStep; const timeLength = Math.max(0, currentParams.timeLength);\r\n    const positiveDt = Math.max(dt, 1e-6); const numSteps = Math.floor(timeLength / positiveDt);\r\n    const derivativeFuncForSolver = (dydt, y, t) => { try { derivatives(dydt, y, t, currentParams); } catch (e) { console.error(\"Error in derivatives:\", e); dydt.fill(0); } };\r\n    const integrator = odeRK4(y0, derivativeFuncForSolver, t0, positiveDt);\r\n    const results = [{ time: integrator.t, state: [...integrator.y] }];\r\n    console.log(`Starting JS simulation for ${timeLength} days...`);\r\n    if (numSteps <= 0) { console.warn(\"Simulation length/step results in zero steps.\"); return []; }\r\n    for (let i = 0; i < numSteps; i++) {\r\n        try {\r\n            integrator.step();\r\n            if (integrator.y.some(val => !Number.isFinite(val))) { console.error(\"Simulation unstable at t=\", integrator.t); }\r\n            results.push({ time: integrator.t, state: [...integrator.y] });\r\n        } catch (solverError) { console.error(\"Error during RK4 step:\", solverError); break; }\r\n    }\r\n    console.log(\"JS simulation finished.\");\r\n    return results.map(p => ({ time: p.time, CO2: p.state[0], ComplexC: p.state[1], MushroomYield: p.state[2], Mycelium: p.state[3], N: p.state[4], SimpleC: p.state[5], Space: p.state[6], Temp: p.state[7] }));\r\n}\r\n\r\n\r\n// --- React Component ---\r\nconst GrowthSimulation = () => {\r\n    const navigate = useNavigate();\r\n    const [simulationResults, setSimulationResults] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [batchName, setBatchName] = useState(''); // State for display\r\n    const [startDate, setStartDate] = useState(''); // State for display\r\n    const [initialCNRatio, setInitialCNRatio] = useState(defaultParams['Initial C:N Ratio']); // State for display\r\n    const [finalSimulatedYield, setFinalSimulatedYield] = useState(null);\r\n    const [activeChartTab, setActiveChartTab] = useState('yield'); // 'yield', 'temp'\r\n\r\n    useEffect(() => {\r\n        let isMounted = true;\r\n        setIsLoading(true);\r\n        setError(null);\r\n        setFinalSimulatedYield(null);\r\n\r\n        setTimeout(() => {\r\n            if (!isMounted) return;\r\n            try {\r\n                // Load initial parameters from localStorage\r\n                const savedTemperature = localStorage.getItem('temperature');\r\n                const savedPh = localStorage.getItem('ph');\r\n                const savedSubstrateJson = localStorage.getItem('substrate');\r\n                const savedDays = localStorage.getItem('simulationDays');\r\n                const savedBatchName = localStorage.getItem('batchName') || 'N/A'; // Load batch name\r\n                const savedStartDate = localStorage.getItem('startDate') || 'N/A'; // Load start date\r\n                const savedCNRatio = localStorage.getItem('initialCNRatio') || defaultParams['Initial C:N Ratio'];\r\n\r\n                setBatchName(savedBatchName);\r\n                setStartDate(savedStartDate);\r\n                setInitialCNRatio(parseFloat(savedCNRatio));\r\n\r\n\r\n                if (!savedTemperature || !savedPh || !savedSubstrateJson || !savedDays) {\r\n                    throw new Error(\"Required simulation parameters not found in localStorage.\");\r\n                }\r\n\r\n                const substrateData = JSON.parse(savedSubstrateJson);\r\n                if (typeof substrateData !== 'object' || substrateData === null) {\r\n                     throw new Error(\"Invalid substrate data found in localStorage.\");\r\n                }\r\n\r\n                const temp = parseFloat(savedTemperature);\r\n                const phValue = parseFloat(savedPh);\r\n                const days = parseInt(savedDays, 10);\r\n                const initialWeight = Object.values(substrateData).reduce((sum, val) => sum + (Number(val) || 0), 0);\r\n\r\n                const simulationDuration = (Number.isInteger(days) && days > 0) ? days : defaultParams.timeLength;\r\n\r\n                if (isNaN(temp) || isNaN(phValue) || isNaN(initialWeight)) {\r\n                    throw new Error(\"Invalid numerical parameters loaded from localStorage.\");\r\n                }\r\n\r\n                // Prepare inputs for the simulation function\r\n                const simulationInputs = {\r\n                    'External Temp': temp,\r\n                    'pH': phValue,\r\n                    'Initial Dry Substrate Weight': initialWeight > 0 ? initialWeight : defaultParams['Initial Dry Substrate Weight'],\r\n                    'timeLength': simulationDuration,\r\n                    'Initial C:N Ratio': parseFloat(savedCNRatio) || defaultParams['Initial C:N Ratio']\r\n                };\r\n\r\n                // Run the simulation\r\n                const results = runSimulation(simulationInputs);\r\n                if (isMounted) {\r\n                    setSimulationResults(results);\r\n                    if (results && results.length > 0) {\r\n                         const lastYield = results[results.length - 1]?.MushroomYield;\r\n                         if (Number.isFinite(lastYield)) {\r\n                             setFinalSimulatedYield(lastYield);\r\n                         }\r\n                    }\r\n                }\r\n\r\n            } catch (err) {\r\n                console.error(\"Error during simulation setup or run:\", err);\r\n                 if (isMounted) setError(err.message || \"Failed to run simulation.\");\r\n            } finally {\r\n                 if (isMounted) setIsLoading(false);\r\n            }\r\n        }, 50);\r\n\r\n        return () => { isMounted = false; };\r\n    }, []); // Removed navigate dependency, only load once\r\n\r\n    const handleBackClick = () => { navigate('/condition-setting'); };\r\n\r\n    // --- Chart Data & Options ---\r\n    const getChartConfig = () => {\r\n        if (!simulationResults || simulationResults.length === 0) {\r\n            return { data: { datasets: [] }, options: {} };\r\n        }\r\n\r\n        let datasets = [];\r\n        const options = {\r\n            responsive: true, maintainAspectRatio: false,\r\n            plugins: {\r\n                legend: { display: true, labels: { color: '#6b4f4b' } },\r\n                tooltip: { enabled: true },\r\n                title: { display: true, text: '', color: '#6b4f4b', font: { size: 16 } }\r\n            },\r\n            scales: {\r\n                x: {\r\n                    type: 'linear',\r\n                    title: { display: true, text: 'Time (Days)', color: '#6b4f4b' },\r\n                    ticks: { stepSize: 5, color: '#6b4f4b' },\r\n                    grid: { color: 'rgba(107, 79, 75, 0.1)' },\r\n                    min: 0,\r\n                },\r\n                // Define potential Y axes\r\n                yYield: { type: 'linear', position: 'left', title: { display: true, text: 'Yield (g)', color: 'green' }, ticks: { color: 'green', stepSize: 10 }, grid: { drawOnChartArea: false }, beginAtZero: true, display: false },\r\n                yTemp: { type: 'linear', position: 'left', title: { display: true, text: 'Temperature (°C)', color: 'red' }, ticks: { color: 'red', stepSize: 2 }, grid: { drawOnChartArea: false }, beginAtZero: false, display: false }\r\n                // Removed yPH axis definition\r\n            }\r\n        };\r\n\r\n        switch (activeChartTab) {\r\n            case 'yield':\r\n                options.plugins.title.text = 'Yield Over Time';\r\n                options.scales.yYield.display = true; // Show yield axis\r\n                datasets = [{\r\n                    label: 'Mushroom Yield (g)',\r\n                    data: simulationResults.map(p => ({ x: p.time, y: Number.isFinite(p.MushroomYield) ? p.MushroomYield : null })),\r\n                    borderColor: 'green', backgroundColor: 'rgba(0, 128, 0, 0.1)',\r\n                    yAxisID: 'yYield',\r\n                }];\r\n                break;\r\n            case 'temp':\r\n                 options.plugins.title.text = 'Temperature Over Time';\r\n                 options.scales.yTemp.display = true; // Show temp axis\r\n                 datasets = [{\r\n                    label: 'Temperature (°C)',\r\n                    data: simulationResults.map(p => ({ x: p.time, y: Number.isFinite(p.Temp) ? p.Temp : null })),\r\n                    borderColor: 'red', backgroundColor: 'rgba(255, 0, 0, 0.1)',\r\n                    yAxisID: 'yTemp',\r\n                 }];\r\n                break;\r\n            // Removed 'ph' case\r\n            default:\r\n                datasets = [];\r\n        }\r\n\r\n        return {\r\n             data: { datasets: datasets.map(ds => ({ ...ds, tension: 0.1, pointRadius: 2, spanGaps: true })) },\r\n             options: options\r\n        };\r\n    };\r\n\r\n    const chartConfig = getChartConfig(); // Get current chart data and options\r\n\r\n    return (\r\n        // Main container with creamy background\r\n        <div className=\"growth-simulation min-h-screen bg-[#f5f2e9] p-4 md:p-8 text-[#6b4f4b]\">\r\n            {/* Header */}\r\n            <header className=\"mb-6 md:mb-8\">\r\n                 {/* Logo Placeholder */}\r\n                 <div className=\"logobox\"> {/* Consider adding a back button here or near logo */}\r\n                 <button onClick={handleBackClick} className=\"back-button\" title=\"Back to Home\"> {/* Simple Back Button Example */}\r\n                    &larr; {/* Left arrow */}\r\n                </button>\r\n                <div className=\"logo\">\r\n                    <img src={logoSrc} alt=\"Logo\" /> {/* Adjusted class usage */}\r\n                </div>\r\n            </div>\r\n                 <div className=\"text-center text-xl font-bold text-[#8B4513] mb-2\">CITY SPROUTS</div>\r\n                 <div className=\"flex justify-between items-center text-sm text-[#8B4513]\">\r\n                     <span>Batch: #{batchName}</span>\r\n                     {/* Back Button - Moved near top */}\r\n                     <button\r\n                        className=\"bg-[#d4b996] hover:bg-[#c8a980] text-[#6b4f4b] font-bold py-1 px-3 rounded-lg shadow transition duration-200\"\r\n                        onClick={handleBackClick}\r\n                     >← Back</button>\r\n                     <span>Start Date: {startDate}</span>\r\n                 </div>\r\n            </header>\r\n\r\n            {/* Main Content Grid */}\r\n            <main className=\"grid grid-cols-1 md:grid-cols-3 gap-6 md:gap-8\">\r\n                {/* Left Column: Animation Placeholder */}\r\n                <div className=\"md:col-span-1 bg-white/70 backdrop-blur-sm p-5 rounded-xl shadow-md border border-gray-200 flex items-center justify-center min-h-[40vh] md:min-h-[60vh]\">\r\n                    <span className=\"text-gray-400 text-lg\">Animation Area</span>\r\n                </div>\r\n\r\n                {/* Right Column: Tabs, Chart, Results */}\r\n                <div className=\"md:col-span-2 space-y-6\">\r\n                    {/* Tabs */}\r\n                    <div className=\"flex space-x-1 border-b border-gray-300\">\r\n                        <button onClick={() => setActiveChartTab('yield')} className={`py-2 px-4 text-sm font-medium transition duration-200 ${activeChartTab === 'yield' ? 'border-b-2 border-[#8B4513] text-[#8B4513]' : 'text-gray-500 hover:text-[#8B4513]'}`}>Yield over Time</button>\r\n                        <button onClick={() => setActiveChartTab('temp')} className={`py-2 px-4 text-sm font-medium transition duration-200 ${activeChartTab === 'temp' ? 'border-b-2 border-[#8B4513] text-[#8B4513]' : 'text-gray-500 hover:text-[#8B4513]'}`}>Temperature</button>\r\n                        {/* Removed pH tab button */}\r\n                    </div>\r\n\r\n                    {/* Chart Area */}\r\n                    <div className=\"bg-[#fffefa] p-4 rounded-lg shadow-inner border border-gray-200\"> {/* Lighter yellow chart background */}\r\n                        {isLoading && <p className=\"text-center p-10\">Loading and running simulation...</p>}\r\n                        {error && <p className=\"text-center p-10 text-red-600\">Error: {error}</p>}\r\n                        {!isLoading && !error && simulationResults && (\r\n                             chartConfig.data.datasets.length > 0 ? (\r\n                                <div className=\"chart-container\" style={{ position: 'relative', height: '35vh', width: '100%' }}>\r\n                                    <Line options={chartConfig.options} data={chartConfig.data} />\r\n                                </div>\r\n                            ) : (\r\n                                 <p className=\"text-center p-10 text-gray-500\">No data available for this chart.</p>\r\n                            )\r\n                        )}\r\n                        {!isLoading && !error && !simulationResults && <p className=\"text-center p-10\">No simulation results available.</p>}\r\n                        {/* Warning */}\r\n                        <p className=\"text-xs text-orange-600 italic text-center mt-3 px-4\">\r\n                            Warning: Simulation logic is based on a scaffold. Ensure all equations in the 'derivatives' function are fully implemented for accurate results.\r\n                        </p>\r\n                    </div>\r\n\r\n                    {/* Results Section */}\r\n                    <div className=\"bg-white/70 backdrop-blur-sm p-5 rounded-xl shadow-md border border-gray-200\">\r\n                        <h3 className=\"text-lg font-semibold mb-3 flex items-center\">\r\n                            Results\r\n                            <span className=\"ml-2 text-xs text-gray-500 cursor-help\" title=\"Key simulation outputs based on initial conditions\">(i)</span>\r\n                        </h3>\r\n                        <div className=\"space-y-2 text-sm\">\r\n                            <div className=\"flex justify-between\">\r\n                                <span className=\"font-medium\">Projected Yield:</span>\r\n                                <span className=\"bg-gray-200 px-3 py-1 rounded\">\r\n                                    {isLoading ? '...' : error ? 'Error' : Number.isFinite(finalSimulatedYield) ? `${finalSimulatedYield.toFixed(2)}g` : 'N/A'}\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"flex justify-between\">\r\n                                <span className=\"font-medium\">Initial C:N Ratio:</span>\r\n                                <span className=\"bg-gray-200 px-3 py-1 rounded\">\r\n                                    {isLoading ? '...' : error ? 'Error' : initialCNRatio.toFixed(2)}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GrowthSimulation;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}