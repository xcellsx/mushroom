{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\celst\\\\sds\\\\src\\\\components\\\\ConditionSetting.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n// Removed Pie chart imports as it's no longer used\n// import { Pie } from 'react-chartjs-2';\n// import { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/ConditionSetting.css'; // Ensure this CSS is updated if needed\nimport logoSrc from '../assets/images/cslogo.png';\n\n// Register required chart components (if any other charts are used)\n// ChartJS.register(ArcElement, Tooltip, Legend); // Keep if needed elsewhere, remove if not\n\n// Define CONSISTENT keys for localStorage\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LOCAL_STORAGE_KEYS = {\n  TEMPERATURE: 'sim_temperature',\n  PH: 'sim_ph',\n  TOTAL_SUBSTRATE_WEIGHT: 'sim_total_substrate_weight',\n  // Changed from SUBSTRATE object\n  SIMULATION_DAYS: 'sim_duration',\n  // Renamed for clarity\n  BATCH_NAME: 'sim_batch_name',\n  START_DATE: 'sim_start_date'\n};\n\n// Default values\nconst DEFAULTS = {\n  TEMPERATURE: 25,\n  PH: 6.9,\n  // Adjusted default closer to original model\n  TOTAL_SUBSTRATE_WEIGHT: 410,\n  // Default total weight\n  SIMULATION_DAYS: 40,\n  BATCH_NAME: '',\n  START_DATE: ''\n};\nconst ConditionSetting = () => {\n  _s();\n  const navigate = useNavigate();\n\n  // --- State Variables ---\n  const [temperature, setTemperature] = useState(() => {\n    const saved = localStorage.getItem(LOCAL_STORAGE_KEYS.TEMPERATURE);\n    return saved !== null ? parseInt(saved, 10) : DEFAULTS.TEMPERATURE;\n  });\n  const [ph, setPh] = useState(() => {\n    const saved = localStorage.getItem(LOCAL_STORAGE_KEYS.PH);\n    return saved !== null ? parseFloat(saved) : DEFAULTS.PH;\n  });\n\n  // State for Total Substrate Weight directly\n  const [totalSubstrateWeight, setTotalSubstrateWeight] = useState(() => {\n    const saved = localStorage.getItem(LOCAL_STORAGE_KEYS.TOTAL_SUBSTRATE_WEIGHT);\n    return saved !== null ? parseInt(saved, 10) : DEFAULTS.TOTAL_SUBSTRATE_WEIGHT;\n  });\n  const [simulationDays, setSimulationDays] = useState(() => {\n    const saved = localStorage.getItem(LOCAL_STORAGE_KEYS.SIMULATION_DAYS);\n    return saved !== null ? parseInt(saved, 10) : DEFAULTS.SIMULATION_DAYS;\n  });\n  const [batchName, setBatchName] = useState(() => {\n    const saved = localStorage.getItem(LOCAL_STORAGE_KEYS.BATCH_NAME);\n    return saved !== null ? saved : DEFAULTS.BATCH_NAME;\n  });\n  const [startDate, setStartDate] = useState(() => {\n    const saved = localStorage.getItem(LOCAL_STORAGE_KEYS.START_DATE);\n    return saved !== null ? saved : DEFAULTS.START_DATE;\n  });\n\n  // --- Effects to save state to localStorage ---\n  useEffect(() => {\n    if (temperature !== '' && !isNaN(temperature)) {\n      localStorage.setItem(LOCAL_STORAGE_KEYS.TEMPERATURE, temperature.toString());\n    }\n  }, [temperature]);\n  useEffect(() => {\n    if (ph !== '' && !isNaN(ph)) {\n      localStorage.setItem(LOCAL_STORAGE_KEYS.PH, ph.toString());\n    }\n  }, [ph]);\n  useEffect(() => {\n    // Save total substrate weight\n    if (totalSubstrateWeight !== '' && !isNaN(totalSubstrateWeight) && totalSubstrateWeight >= 0) {\n      localStorage.setItem(LOCAL_STORAGE_KEYS.TOTAL_SUBSTRATE_WEIGHT, totalSubstrateWeight.toString());\n    }\n  }, [totalSubstrateWeight]);\n  useEffect(() => {\n    if (simulationDays !== '' && !isNaN(simulationDays)) {\n      localStorage.setItem(LOCAL_STORAGE_KEYS.SIMULATION_DAYS, simulationDays.toString());\n    }\n  }, [simulationDays]);\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEYS.BATCH_NAME, batchName);\n  }, [batchName]);\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEYS.START_DATE, startDate);\n  }, [startDate]);\n\n  // --- Event Handlers ---\n  const handleStartClick = () => {\n    console.log('Saving simulation inputs:', {\n      temperature,\n      ph,\n      totalSubstrateWeight,\n      simulationDays,\n      batchName,\n      startDate\n    });\n    navigate('/growth-simulation');\n  };\n  const handleBackClick = () => {\n    navigate('/'); // Navigate back to the Landing Page\n  };\n\n  // Generic handler for number inputs\n  const handleNumberChange = (setter, min, max, value, allowFloat = false) => {\n    if (value === '') {\n      setter('');\n      return;\n    }\n    const numericValue = allowFloat ? parseFloat(value) : parseInt(value, 10);\n    if (isNaN(numericValue)) {\n      return; // Ignore if not a number\n    }\n    const clampedValue = Math.max(min, Math.min(max, numericValue));\n    setter(clampedValue);\n  };\n\n  // Specific handler for total substrate weight\n  const handleWeightChange = e => {\n    const value = e.target.value;\n    const min = 0;\n    // No explicit max needed, but can add one\n\n    if (value === '') {\n      setTotalSubstrateWeight(''); // Allow empty input temporarily\n      return;\n    }\n    const numericValue = parseInt(value, 10);\n    if (isNaN(numericValue)) {\n      return; // Ignore non-numeric input\n    }\n\n    // Clamp value (only min needed here)\n    setTotalSubstrateWeight(Math.max(min, numericValue));\n  };\n  const handleDaysChange = e => {\n    const value = e.target.value;\n    const min = 1;\n    const max = 365; // Example max\n    handleNumberChange(setSimulationDays, min, max, value, false);\n  };\n\n  // --- JSX ---\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"condition-setting\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logobox\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBackClick,\n        className: \"back-button\",\n        title: \"Back to Home\",\n        children: \"\\u2190\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logoSrc,\n          alt: \"Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"condition-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Set Your Growing Conditions!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"condition-main-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-column\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Environmental Conditions\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"info-icon\",\n              title: \"Set temperature (20-40\\xB0C) and pH (6.0-7.5) for growth\",\n              children: \"(i)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"temperature\",\n              children: \"Temperature (\\xB0C):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 30\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"temperature\",\n              type: \"number\",\n              min: \"20\",\n              max: \"40\",\n              step: \"1\" // Wider range based on model data\n              ,\n              value: temperature,\n              onChange: e => handleNumberChange(setTemperature, 20, 40, e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"ph\",\n              children: \"pH:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"ph\",\n              type: \"number\",\n              min: \"5.5\",\n              max: \"7.5\",\n              step: \"0.1\" // Wider range based on model data\n              ,\n              value: ph,\n              onChange: e => handleNumberChange(setPh, 5.5, 7.5, e.target.value, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Substrate Details\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"info-icon\",\n              title: \"Enter the total dry weight of your substrate\",\n              children: \"(i)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"totalSubstrateWeight\",\n              children: \"Total Dry Weight (g):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 30\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"totalSubstrateWeight\",\n              type: \"number\",\n              min: \"0\",\n              value: totalSubstrateWeight,\n              onChange: handleWeightChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-display\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Initial C:N Ratio (Fixed):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"0.96\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Other Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"additional-inputs\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"batchName\",\n                children: \"Batch Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"batchName\",\n                type: \"text\",\n                value: batchName,\n                onChange: e => setBatchName(e.target.value),\n                placeholder: \"e.g., Spring Batch 1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"startDate\",\n                children: \"Start Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"startDate\",\n                type: \"date\",\n                value: startDate,\n                onChange: e => setStartDate(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group span-cols-2\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"simulationDays\",\n                children: \"Cultivation Duration (Days):\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"simulationDays\",\n                type: \"number\",\n                min: \"1\",\n                max: \"365\",\n                step: \"1\",\n                value: simulationDays,\n                onChange: handleDaysChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"footer-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"start1-button\",\n        onClick: handleStartClick,\n        children: \"Start Growing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 9\n  }, this);\n};\n_s(ConditionSetting, \"ClWyuZoU3CYeyryGZlMz24ME6aE=\", false, function () {\n  return [useNavigate];\n});\n_c = ConditionSetting;\nexport default ConditionSetting;\nvar _c;\n$RefreshReg$(_c, \"ConditionSetting\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","logoSrc","jsxDEV","_jsxDEV","LOCAL_STORAGE_KEYS","TEMPERATURE","PH","TOTAL_SUBSTRATE_WEIGHT","SIMULATION_DAYS","BATCH_NAME","START_DATE","DEFAULTS","ConditionSetting","_s","navigate","temperature","setTemperature","saved","localStorage","getItem","parseInt","ph","setPh","parseFloat","totalSubstrateWeight","setTotalSubstrateWeight","simulationDays","setSimulationDays","batchName","setBatchName","startDate","setStartDate","isNaN","setItem","toString","handleStartClick","console","log","handleBackClick","handleNumberChange","setter","min","max","value","allowFloat","numericValue","clampedValue","Math","handleWeightChange","e","target","handleDaysChange","className","children","onClick","title","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","htmlFor","id","type","step","onChange","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/celst/sds/src/components/ConditionSetting.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n// Removed Pie chart imports as it's no longer used\r\n// import { Pie } from 'react-chartjs-2';\r\n// import { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../styles/ConditionSetting.css'; // Ensure this CSS is updated if needed\r\nimport logoSrc from '../assets/images/cslogo.png';\r\n\r\n// Register required chart components (if any other charts are used)\r\n// ChartJS.register(ArcElement, Tooltip, Legend); // Keep if needed elsewhere, remove if not\r\n\r\n// Define CONSISTENT keys for localStorage\r\nconst LOCAL_STORAGE_KEYS = {\r\n    TEMPERATURE: 'sim_temperature',\r\n    PH: 'sim_ph',\r\n    TOTAL_SUBSTRATE_WEIGHT: 'sim_total_substrate_weight', // Changed from SUBSTRATE object\r\n    SIMULATION_DAYS: 'sim_duration', // Renamed for clarity\r\n    BATCH_NAME: 'sim_batch_name',\r\n    START_DATE: 'sim_start_date',\r\n};\r\n\r\n// Default values\r\nconst DEFAULTS = {\r\n    TEMPERATURE: 25,\r\n    PH: 6.9, // Adjusted default closer to original model\r\n    TOTAL_SUBSTRATE_WEIGHT: 410, // Default total weight\r\n    SIMULATION_DAYS: 40,\r\n    BATCH_NAME: '',\r\n    START_DATE: '',\r\n};\r\n\r\n\r\nconst ConditionSetting = () => {\r\n    const navigate = useNavigate();\r\n\r\n    // --- State Variables ---\r\n    const [temperature, setTemperature] = useState(() => {\r\n        const saved = localStorage.getItem(LOCAL_STORAGE_KEYS.TEMPERATURE);\r\n        return saved !== null ? parseInt(saved, 10) : DEFAULTS.TEMPERATURE;\r\n    });\r\n\r\n    const [ph, setPh] = useState(() => {\r\n        const saved = localStorage.getItem(LOCAL_STORAGE_KEYS.PH);\r\n        return saved !== null ? parseFloat(saved) : DEFAULTS.PH;\r\n    });\r\n\r\n    // State for Total Substrate Weight directly\r\n    const [totalSubstrateWeight, setTotalSubstrateWeight] = useState(() => {\r\n        const saved = localStorage.getItem(LOCAL_STORAGE_KEYS.TOTAL_SUBSTRATE_WEIGHT);\r\n        return saved !== null ? parseInt(saved, 10) : DEFAULTS.TOTAL_SUBSTRATE_WEIGHT;\r\n    });\r\n\r\n    const [simulationDays, setSimulationDays] = useState(() => {\r\n        const saved = localStorage.getItem(LOCAL_STORAGE_KEYS.SIMULATION_DAYS);\r\n        return saved !== null ? parseInt(saved, 10) : DEFAULTS.SIMULATION_DAYS;\r\n    });\r\n\r\n    const [batchName, setBatchName] = useState(() => {\r\n        const saved = localStorage.getItem(LOCAL_STORAGE_KEYS.BATCH_NAME);\r\n        return saved !== null ? saved : DEFAULTS.BATCH_NAME;\r\n    });\r\n\r\n    const [startDate, setStartDate] = useState(() => {\r\n        const saved = localStorage.getItem(LOCAL_STORAGE_KEYS.START_DATE);\r\n        return saved !== null ? saved : DEFAULTS.START_DATE;\r\n    });\r\n\r\n    // --- Effects to save state to localStorage ---\r\n    useEffect(() => {\r\n        if (temperature !== '' && !isNaN(temperature)) {\r\n            localStorage.setItem(LOCAL_STORAGE_KEYS.TEMPERATURE, temperature.toString());\r\n        }\r\n    }, [temperature]);\r\n\r\n    useEffect(() => {\r\n        if (ph !== '' && !isNaN(ph)) {\r\n            localStorage.setItem(LOCAL_STORAGE_KEYS.PH, ph.toString());\r\n        }\r\n    }, [ph]);\r\n\r\n    useEffect(() => {\r\n        // Save total substrate weight\r\n        if (totalSubstrateWeight !== '' && !isNaN(totalSubstrateWeight) && totalSubstrateWeight >= 0) {\r\n            localStorage.setItem(LOCAL_STORAGE_KEYS.TOTAL_SUBSTRATE_WEIGHT, totalSubstrateWeight.toString());\r\n        }\r\n    }, [totalSubstrateWeight]);\r\n\r\n    useEffect(() => {\r\n        if (simulationDays !== '' && !isNaN(simulationDays)) {\r\n            localStorage.setItem(LOCAL_STORAGE_KEYS.SIMULATION_DAYS, simulationDays.toString());\r\n        }\r\n    }, [simulationDays]);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(LOCAL_STORAGE_KEYS.BATCH_NAME, batchName);\r\n    }, [batchName]);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(LOCAL_STORAGE_KEYS.START_DATE, startDate);\r\n    }, [startDate]);\r\n\r\n\r\n    // --- Event Handlers ---\r\n    const handleStartClick = () => {\r\n        console.log('Saving simulation inputs:', {\r\n            temperature,\r\n            ph,\r\n            totalSubstrateWeight,\r\n            simulationDays,\r\n            batchName,\r\n            startDate\r\n        });\r\n        navigate('/growth-simulation');\r\n    };\r\n\r\n    const handleBackClick = () => {\r\n        navigate('/'); // Navigate back to the Landing Page\r\n    };\r\n\r\n    // Generic handler for number inputs\r\n    const handleNumberChange = (setter, min, max, value, allowFloat = false) => {\r\n        if (value === '') {\r\n             setter('');\r\n             return;\r\n        }\r\n        const numericValue = allowFloat ? parseFloat(value) : parseInt(value, 10);\r\n        if (isNaN(numericValue)) {\r\n             return; // Ignore if not a number\r\n        }\r\n        const clampedValue = Math.max(min, Math.min(max, numericValue));\r\n        setter(clampedValue);\r\n    };\r\n\r\n     // Specific handler for total substrate weight\r\n     const handleWeightChange = (e) => {\r\n        const value = e.target.value;\r\n        const min = 0;\r\n        // No explicit max needed, but can add one\r\n\r\n        if (value === '') {\r\n            setTotalSubstrateWeight(''); // Allow empty input temporarily\r\n            return;\r\n         }\r\n\r\n         const numericValue = parseInt(value, 10);\r\n\r\n         if (isNaN(numericValue)) {\r\n             return; // Ignore non-numeric input\r\n         }\r\n\r\n         // Clamp value (only min needed here)\r\n         setTotalSubstrateWeight(Math.max(min, numericValue));\r\n     };\r\n\r\n\r\n    const handleDaysChange = (e) => {\r\n         const value = e.target.value;\r\n         const min = 1;\r\n         const max = 365; // Example max\r\n         handleNumberChange(setSimulationDays, min, max, value, false);\r\n    };\r\n\r\n    // --- JSX ---\r\n    return (\r\n        <div className=\"condition-setting\">\r\n            <div className=\"logobox\">\r\n                <button onClick={handleBackClick} className=\"back-button\" title=\"Back to Home\">\r\n                    &larr;\r\n                </button>\r\n                <div className=\"logo\">\r\n                    <img src={logoSrc} alt=\"Logo\" />\r\n                </div>\r\n            </div>\r\n\r\n            <header className=\"condition-header\">\r\n                <h1>Set Your Growing Conditions!</h1>\r\n            </header>\r\n\r\n            <main className=\"condition-main-content\">\r\n                {/* Inputs Column */}\r\n                <div className=\"settings-column\"> {/* Use a single column or adjust CSS */}\r\n\r\n                    {/* Environmental Conditions */}\r\n                    <div className=\"input-card\">\r\n                        <h3>\r\n                            Environmental Conditions\r\n                            <span className=\"info-icon\" title=\"Set temperature (20-40°C) and pH (6.0-7.5) for growth\">(i)</span>\r\n                        </h3>\r\n                        <div className=\"input-group\">\r\n                             <label htmlFor=\"temperature\">Temperature (°C):</label>\r\n                             <input\r\n                                 id=\"temperature\" type=\"number\" min=\"20\" max=\"40\" step=\"1\" // Wider range based on model data\r\n                                 value={temperature}\r\n                                 onChange={(e) => handleNumberChange(setTemperature, 20, 40, e.target.value)}\r\n                             />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label htmlFor=\"ph\">pH:</label>\r\n                            <input\r\n                                id=\"ph\" type=\"number\" min=\"5.5\" max=\"7.5\" step=\"0.1\" // Wider range based on model data\r\n                                value={ph}\r\n                                onChange={(e) => handleNumberChange(setPh, 5.5, 7.5, e.target.value, true)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Substrate Input */}\r\n                    <div className=\"input-card\">\r\n                        <h3>\r\n                            Substrate Details\r\n                            <span className=\"info-icon\" title=\"Enter the total dry weight of your substrate\">(i)</span>\r\n                        </h3>\r\n                        <div className=\"input-group\">\r\n                             <label htmlFor=\"totalSubstrateWeight\">Total Dry Weight (g):</label>\r\n                             <input\r\n                                 id=\"totalSubstrateWeight\" type=\"number\" min=\"0\"\r\n                                 value={totalSubstrateWeight}\r\n                                 onChange={handleWeightChange}\r\n                             />\r\n                        </div>\r\n                         {/* Display the fixed C:N Ratio */}\r\n                         <div className=\"info-display\">\r\n                            <span>Initial C:N Ratio (Fixed):</span>\r\n                            <span>0.96</span>\r\n                         </div>\r\n                    </div>\r\n\r\n                     {/* Other Details */}\r\n                     <div className=\"input-card\">\r\n                        <h3>Other Details</h3>\r\n                        <div className=\"additional-inputs\"> {/* Use grid layout in CSS if needed */}\r\n                            <div className=\"input-group\">\r\n                                <label htmlFor=\"batchName\">Batch Name:</label>\r\n                                <input\r\n                                    id=\"batchName\" type=\"text\" value={batchName}\r\n                                    onChange={(e) => setBatchName(e.target.value)}\r\n                                    placeholder=\"e.g., Spring Batch 1\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"input-group\">\r\n                                <label htmlFor=\"startDate\">Start Date:</label>\r\n                                <input\r\n                                    id=\"startDate\" type=\"date\" value={startDate}\r\n                                    onChange={(e) => setStartDate(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"input-group span-cols-2\"> {/* Adjust class if needed */}\r\n                                <label htmlFor=\"simulationDays\">Cultivation Duration (Days):</label>\r\n                                <input\r\n                                    id=\"simulationDays\" type=\"number\" min=\"1\" max=\"365\" step=\"1\"\r\n                                    value={simulationDays}\r\n                                    onChange={handleDaysChange}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                 {/* Removed the second column which previously held the Pie chart */}\r\n\r\n            </main>\r\n\r\n            <footer className=\"footer-container\">\r\n                <button className=\"start1-button\" onClick={handleStartClick}>\r\n                    Start Growing\r\n                </button>\r\n            </footer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ConditionSetting;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}