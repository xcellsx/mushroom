{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\celst\\\\sds\\\\src\\\\components\\\\ConditionSetting.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Pie } from 'react-chartjs-2';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { useNavigate } from 'react-router-dom';\n// Removed the specific CSS import, assuming Tailwind is used globally or setup elsewhere\n// import '../styles/ConditionSetting.css';\n\n// Register required components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\nconst ConditionSetting = () => {\n  _s();\n  const navigate = useNavigate();\n\n  // --- State Variables ---\n  const [temperature, setTemperature] = useState(25);\n  const [ph, setPh] = useState(7.0); // Use float for step\n  const [substrate, setSubstrate] = useState({\n    riceBran: 25,\n    corn: 25,\n    sugarcane: 25,\n    sawdust: 25\n  });\n  const [totalSubstrate, setTotalSubstrate] = useState(100); // Renamed from totalYield for clarity\n  const [simulationDays, setSimulationDays] = useState(40);\n  const [batchName, setBatchName] = useState(''); // New state\n  const [startDate, setStartDate] = useState(''); // New state\n\n  // --- Labels ---\n  const substrateLabels = {\n    riceBran: 'Rice Bran',\n    corn: 'Corn Cob',\n    sugarcane: 'Sugarcane',\n    sawdust: 'Sawdust'\n  };\n\n  // --- Event Handlers ---\n  const handleStartClick = () => {\n    // Save relevant parameters to localStorage\n    // Saving only simulation inputs, not batch name/date unless needed later\n    localStorage.setItem('substrate', JSON.stringify(substrate));\n    localStorage.setItem('temperature', temperature);\n    localStorage.setItem('ph', ph);\n    localStorage.setItem('yield', totalSubstrate); // Save total substrate weight as 'yield' for compatibility\n    localStorage.setItem('simulationDays', simulationDays);\n    console.log('Saved to localStorage:', {\n      substrate,\n      temperature,\n      ph,\n      totalSubstrate,\n      simulationDays\n    });\n    navigate('/growth-simulation');\n  };\n  const handleBackClick = () => {\n    navigate('/'); // Navigate back to the Landing Page\n  };\n\n  // Generic handler for number inputs (like Temp, pH)\n  const handleNumberChange = (setter, min, max, value, allowFloat = false) => {\n    const numericValue = allowFloat ? parseFloat(value) : parseInt(value, 10);\n    // Allow clearing the input, maybe default to min later if needed\n    if (value === '') {\n      setter(''); // Or setter(min) if empty shouldn't be allowed\n      return;\n    }\n    if (isNaN(numericValue)) {\n      // Don't change state if input is not a number\n      return;\n    }\n    // Clamp value between min and max\n    const clampedValue = Math.max(min, Math.min(max, numericValue));\n    setter(clampedValue);\n\n    // This older logic could also be used if clamping isn't desired:\n    // if (isNaN(numericValue)) {\n    //    setter(allowFloat ? min : Math.round(min)); // Or set to empty/previous valid state\n    // } else if (numericValue >= min && numericValue <= max) {\n    //     setter(numericValue);\n    // } else if (numericValue < min) {\n    //     setter(min);\n    // } else {\n    //     setter(max);\n    // }\n  };\n  const handleSubstrateChange = (key, value) => {\n    const numericValue = parseInt(value, 10);\n    if (value === '') {\n      setSubstrate(prev => ({\n        ...prev,\n        [key]: ''\n      })); // Allow empty input temporarily\n    } else if (isNaN(numericValue) || numericValue < 0) {\n      // If not a number or negative, keep the previous valid state or set to 0\n      setSubstrate(prev => ({\n        ...prev,\n        [key]: prev[key] === '' ? 0 : prev[key]\n      })); // Revert or set 0 if was empty\n    } else {\n      setSubstrate(prev => ({\n        ...prev,\n        [key]: numericValue\n      }));\n    }\n  };\n\n  // *** ADDED MISSING FUNCTION DEFINITION ***\n  const handleDaysChange = e => {\n    const value = e.target.value;\n    if (value === '') {\n      setSimulationDays(''); // Allow empty input temporarily\n      return;\n    }\n    const numericValue = parseInt(value, 10);\n    // Basic validation: ensure it's a positive number, adjust max as needed\n    const min = 1;\n    const max = 365; // Example max\n    if (!isNaN(numericValue) && numericValue >= min && numericValue <= max) {\n      setSimulationDays(numericValue);\n    } else if (!isNaN(numericValue) && numericValue < min) {\n      setSimulationDays(min); // Clamp to min\n    } else if (!isNaN(numericValue) && numericValue > max) {\n      setSimulationDays(max); // Clamp to max\n    }\n  };\n\n  // --- Effects ---\n  useEffect(() => {\n    // Calculate the total substrate weight\n    const total = Object.values(substrate).reduce((sum, weight) => sum + (Number(weight) || 0), 0);\n    setTotalSubstrate(total);\n  }, [substrate]);\n\n  // --- Chart Configuration ---\n  const pieOptions = {\n    responsive: true,\n    // Make chart responsive\n    maintainAspectRatio: false,\n    // Allow aspect ratio changes\n    plugins: {\n      legend: {\n        position: 'bottom',\n        // Position legend below chart\n        labels: {\n          color: '#6b4f4b',\n          // Dark brown text for legend (adjust color)\n          font: {\n            size: 12\n          },\n          boxWidth: 15,\n          // Size of color box\n          padding: 15 // Padding around legend items\n        }\n      }\n    }\n  };\n  const pieData = {\n    labels: Object.values(substrateLabels),\n    datasets: [{\n      // Ensure data values are numbers for the chart\n      data: totalSubstrate > 0 ? Object.values(substrate).map(v => Number(v) || 0) : [1],\n      backgroundColor: totalSubstrate > 0 ? ['#e1c699', '#7E9777', '#FF914D', '#8B4513'] // Example colors (adjust)\n      : ['#d3d3d3'],\n      // Grey color if no data\n      borderColor: '#f5f2e9',\n      // Match background or a subtle border\n      borderWidth: totalSubstrate > 0 ? 2 : 0\n    }]\n  };\n\n  // --- JSX ---\n  return (\n    /*#__PURE__*/\n    // Main container with creamy background\n    _jsxDEV(\"div\", {\n      className: \"condition-setting\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"condition-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-[#d4b996] hover:bg-[#c8a980] text-[#6b4f4b] font-bold py-2 px-4 rounded-lg shadow transition duration-200\",\n          onClick: handleBackClick,\n          children: \"\\u2190 Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl md:text-4xl font-bold text-center text-[#8B4513]\",\n          children: [\" \", \"Set Your Growing Conditions!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-16\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 18\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"flex flex-col md:flex-row gap-6 md:gap-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full md:w-1/3 space-y-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white/70 backdrop-blur-sm p-5 rounded-xl shadow-md border border-gray-200\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-semibold mb-4 flex items-center\",\n              children: [\"Environmental Conditions\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-2 text-xs text-gray-500 cursor-help\",\n                title: \"Set temperature (20-30\\xB0C) and pH (6.0-7.0) for growth\",\n                children: \"(i)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center justify-between\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"temperature\",\n                  className: \"block text-sm font-medium mr-2\",\n                  children: \"Temperature (\\xB0C):\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"temperature\",\n                  type: \"number\",\n                  min: \"20\",\n                  max: \"30\",\n                  step: \"1\",\n                  value: temperature,\n                  onChange: e => handleNumberChange(setTemperature, 20, 30, e.target.value),\n                  className: \"w-20 p-2 border border-gray-300 rounded-md shadow-sm focus:ring-[#c8a980] focus:border-[#c8a980] text-sm\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center justify-between\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"ph\",\n                  className: \"block text-sm font-medium mr-2\",\n                  children: \"pH:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"ph\",\n                  type: \"number\",\n                  min: \"6.0\",\n                  max: \"7.0\",\n                  step: \"0.1\",\n                  value: ph,\n                  onChange: e => handleNumberChange(setPh, 6.0, 7.0, e.target.value, true),\n                  className: \"w-20 p-2 border border-gray-300 rounded-md shadow-sm focus:ring-[#c8a980] focus:border-[#c8a980] text-sm\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white/70 backdrop-blur-sm p-5 rounded-xl shadow-md border border-gray-200\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-semibold mb-4 flex items-center\",\n              children: [\"Substrate Composition\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-2 text-xs text-gray-500 cursor-help\",\n                title: \"Enter weight in grams for each component\",\n                children: \"(i)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 26\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-3\",\n              children: [Object.keys(substrate).map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center justify-between\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: `substrate-${key}`,\n                  className: \"block text-sm font-medium mr-2\",\n                  children: [substrateLabels[key], \" (g):\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: `substrate-${key}`,\n                  type: \"number\",\n                  min: \"0\",\n                  value: substrate[key],\n                  onChange: e => handleSubstrateChange(key, e.target.value),\n                  className: \"w-20 p-2 border border-gray-300 rounded-md shadow-sm focus:ring-[#c8a980] focus:border-[#c8a980] text-sm\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 37\n                }, this)]\n              }, key, true, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 33\n              }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-right font-semibold pt-2 border-t border-gray-200 mt-3\",\n                children: [\"Total: \", totalSubstrate, \"g\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 30\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full md:w-2/3 space-y-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white/70 backdrop-blur-sm p-5 rounded-xl shadow-md border border-gray-200\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-semibold mb-4 text-center\",\n              children: \"Your Substrate Composition\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-full h-56 md:h-64 mx-auto mb-4\",\n              children: [\" \", totalSubstrate > 0 ? /*#__PURE__*/_jsxDEV(Pie, {\n                data: pieData,\n                options: pieOptions\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 33\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center justify-center h-full text-gray-500\",\n                children: \"Enter substrate values to see chart.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-1 sm:grid-cols-2 gap-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"batchName\",\n                  className: \"block text-sm font-medium mb-1\",\n                  children: \"Batch Name:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"batchName\",\n                  type: \"text\",\n                  value: batchName,\n                  onChange: e => setBatchName(e.target.value),\n                  placeholder: \"e.g., Spring Batch 1\",\n                  className: \"w-full p-2 border border-gray-300 rounded-md shadow-sm focus:ring-[#c8a980] focus:border-[#c8a980] text-sm\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 30\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"startDate\",\n                  className: \"block text-sm font-medium mb-1\",\n                  children: \"Start Date:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"startDate\",\n                  type: \"date\" // Use date type for better UX\n                  ,\n                  value: startDate,\n                  onChange: e => setStartDate(e.target.value),\n                  className: \"w-full p-2 border border-gray-300 rounded-md shadow-sm focus:ring-[#c8a980] focus:border-[#c8a980] text-sm\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 30\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sm:col-span-2\",\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"simulationDays\",\n                  className: \"block text-sm font-medium mb-1\",\n                  children: \"Cultivation Duration (Days):\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"simulationDays\",\n                  type: \"number\",\n                  min: \"1\",\n                  max: \"365\",\n                  step: \"1\",\n                  value: simulationDays,\n                  onChange: handleDaysChange // Use the now defined handler\n                  ,\n                  className: \"w-full p-2 border border-gray-300 rounded-md shadow-sm focus:ring-[#c8a980] focus:border-[#c8a980] text-sm\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 30\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"mt-8 text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-[#8B4513] hover:bg-[#7a3c10] text-white font-bold py-3 px-8 rounded-lg shadow-md transition duration-200 text-lg\",\n          onClick: handleStartClick,\n          children: \"Start Growing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this)\n  );\n};\n_s(ConditionSetting, \"/iPa20h2gmHtPqoYofy2nSf9w/c=\", false, function () {\n  return [useNavigate];\n});\n_c = ConditionSetting;\nexport default ConditionSetting;\nvar _c;\n$RefreshReg$(_c, \"ConditionSetting\");","map":{"version":3,"names":["React","useState","useEffect","Pie","Chart","ChartJS","ArcElement","Tooltip","Legend","useNavigate","jsxDEV","_jsxDEV","register","ConditionSetting","_s","navigate","temperature","setTemperature","ph","setPh","substrate","setSubstrate","riceBran","corn","sugarcane","sawdust","totalSubstrate","setTotalSubstrate","simulationDays","setSimulationDays","batchName","setBatchName","startDate","setStartDate","substrateLabels","handleStartClick","localStorage","setItem","JSON","stringify","console","log","handleBackClick","handleNumberChange","setter","min","max","value","allowFloat","numericValue","parseFloat","parseInt","isNaN","clampedValue","Math","handleSubstrateChange","key","prev","handleDaysChange","e","target","total","Object","values","reduce","sum","weight","Number","pieOptions","responsive","maintainAspectRatio","plugins","legend","position","labels","color","font","size","boxWidth","padding","pieData","datasets","data","map","v","backgroundColor","borderColor","borderWidth","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","title","htmlFor","id","type","step","onChange","keys","options","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/celst/sds/src/components/ConditionSetting.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\r\nimport { useNavigate } from 'react-router-dom';\r\n// Removed the specific CSS import, assuming Tailwind is used globally or setup elsewhere\r\n// import '../styles/ConditionSetting.css';\r\n\r\n// Register required components\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\nconst ConditionSetting = () => {\r\n    const navigate = useNavigate();\r\n\r\n    // --- State Variables ---\r\n    const [temperature, setTemperature] = useState(25);\r\n    const [ph, setPh] = useState(7.0); // Use float for step\r\n    const [substrate, setSubstrate] = useState({\r\n        riceBran: 25,\r\n        corn: 25,\r\n        sugarcane: 25,\r\n        sawdust: 25,\r\n    });\r\n    const [totalSubstrate, setTotalSubstrate] = useState(100); // Renamed from totalYield for clarity\r\n    const [simulationDays, setSimulationDays] = useState(40);\r\n    const [batchName, setBatchName] = useState(''); // New state\r\n    const [startDate, setStartDate] = useState(''); // New state\r\n\r\n    // --- Labels ---\r\n    const substrateLabels = {\r\n        riceBran: 'Rice Bran',\r\n        corn: 'Corn Cob',\r\n        sugarcane: 'Sugarcane',\r\n        sawdust: 'Sawdust',\r\n    };\r\n\r\n    // --- Event Handlers ---\r\n    const handleStartClick = () => {\r\n        // Save relevant parameters to localStorage\r\n        // Saving only simulation inputs, not batch name/date unless needed later\r\n        localStorage.setItem('substrate', JSON.stringify(substrate));\r\n        localStorage.setItem('temperature', temperature);\r\n        localStorage.setItem('ph', ph);\r\n        localStorage.setItem('yield', totalSubstrate); // Save total substrate weight as 'yield' for compatibility\r\n        localStorage.setItem('simulationDays', simulationDays);\r\n        console.log('Saved to localStorage:', { substrate, temperature, ph, totalSubstrate, simulationDays });\r\n        navigate('/growth-simulation');\r\n    };\r\n\r\n    const handleBackClick = () => {\r\n        navigate('/'); // Navigate back to the Landing Page\r\n    };\r\n\r\n    // Generic handler for number inputs (like Temp, pH)\r\n    const handleNumberChange = (setter, min, max, value, allowFloat = false) => {\r\n         const numericValue = allowFloat ? parseFloat(value) : parseInt(value, 10);\r\n         // Allow clearing the input, maybe default to min later if needed\r\n         if (value === '') {\r\n             setter(''); // Or setter(min) if empty shouldn't be allowed\r\n             return;\r\n         }\r\n         if (isNaN(numericValue)) {\r\n            // Don't change state if input is not a number\r\n            return;\r\n         }\r\n         // Clamp value between min and max\r\n         const clampedValue = Math.max(min, Math.min(max, numericValue));\r\n         setter(clampedValue);\r\n\r\n         // This older logic could also be used if clamping isn't desired:\r\n         // if (isNaN(numericValue)) {\r\n         //    setter(allowFloat ? min : Math.round(min)); // Or set to empty/previous valid state\r\n         // } else if (numericValue >= min && numericValue <= max) {\r\n         //     setter(numericValue);\r\n         // } else if (numericValue < min) {\r\n         //     setter(min);\r\n         // } else {\r\n         //     setter(max);\r\n         // }\r\n    };\r\n\r\n     const handleSubstrateChange = (key, value) => {\r\n        const numericValue = parseInt(value, 10);\r\n         if (value === '') {\r\n             setSubstrate((prev) => ({ ...prev, [key]: '' })); // Allow empty input temporarily\r\n         } else if (isNaN(numericValue) || numericValue < 0) {\r\n            // If not a number or negative, keep the previous valid state or set to 0\r\n             setSubstrate((prev) => ({ ...prev, [key]: prev[key] === '' ? 0 : prev[key] })); // Revert or set 0 if was empty\r\n         } else {\r\n             setSubstrate((prev) => ({ ...prev, [key]: numericValue }));\r\n         }\r\n    };\r\n\r\n    // *** ADDED MISSING FUNCTION DEFINITION ***\r\n    const handleDaysChange = (e) => {\r\n        const value = e.target.value;\r\n         if (value === '') {\r\n             setSimulationDays(''); // Allow empty input temporarily\r\n             return;\r\n         }\r\n        const numericValue = parseInt(value, 10);\r\n        // Basic validation: ensure it's a positive number, adjust max as needed\r\n        const min = 1;\r\n        const max = 365; // Example max\r\n        if (!isNaN(numericValue) && numericValue >= min && numericValue <= max) {\r\n             setSimulationDays(numericValue);\r\n        } else if (!isNaN(numericValue) && numericValue < min) {\r\n             setSimulationDays(min); // Clamp to min\r\n        } else if (!isNaN(numericValue) && numericValue > max) {\r\n             setSimulationDays(max); // Clamp to max\r\n        }\r\n    };\r\n\r\n\r\n    // --- Effects ---\r\n    useEffect(() => {\r\n        // Calculate the total substrate weight\r\n        const total = Object.values(substrate).reduce((sum, weight) => sum + (Number(weight) || 0), 0);\r\n        setTotalSubstrate(total);\r\n    }, [substrate]);\r\n\r\n    // --- Chart Configuration ---\r\n    const pieOptions = {\r\n        responsive: true, // Make chart responsive\r\n        maintainAspectRatio: false, // Allow aspect ratio changes\r\n        plugins: {\r\n            legend: {\r\n                position: 'bottom', // Position legend below chart\r\n                labels: {\r\n                    color: '#6b4f4b', // Dark brown text for legend (adjust color)\r\n                    font: { size: 12 },\r\n                    boxWidth: 15, // Size of color box\r\n                    padding: 15 // Padding around legend items\r\n                }\r\n            },\r\n        },\r\n    };\r\n\r\n    const pieData = {\r\n        labels: Object.values(substrateLabels),\r\n        datasets: [\r\n            {\r\n                // Ensure data values are numbers for the chart\r\n                data: totalSubstrate > 0 ? Object.values(substrate).map(v => Number(v) || 0) : [1],\r\n                backgroundColor: totalSubstrate > 0\r\n                    ? ['#e1c699', '#7E9777', '#FF914D', '#8B4513'] // Example colors (adjust)\r\n                    : ['#d3d3d3'], // Grey color if no data\r\n                borderColor: '#f5f2e9', // Match background or a subtle border\r\n                borderWidth: totalSubstrate > 0 ? 2 : 0,\r\n            },\r\n        ],\r\n    };\r\n\r\n    // --- JSX ---\r\n    return (\r\n        // Main container with creamy background\r\n        <div className=\"condition-setting\">\r\n            <header className=\"condition-header\">\r\n                {/* Styled Back Button */}\r\n                <button\r\n                    className=\"bg-[#d4b996] hover:bg-[#c8a980] text-[#6b4f4b] font-bold py-2 px-4 rounded-lg shadow transition duration-200\"\r\n                    onClick={handleBackClick}\r\n                >\r\n                    ← Back\r\n                </button>\r\n                {/* Title - centered (implicitly by justify-between and no other center element) */}\r\n                <h1 className=\"text-2xl md:text-4xl font-bold text-center text-[#8B4513]\"> {/* Darker brown for title */}\r\n                    Set Your Growing Conditions!\r\n                </h1>\r\n                {/* Invisible spacer to balance the back button */}\r\n                 <div className=\"w-16\"></div> {/* Adjust width to match button approx */}\r\n            </header>\r\n\r\n            {/* Main content area - flex layout for columns */}\r\n            <main className=\"flex flex-col md:flex-row gap-6 md:gap-10\">\r\n\r\n                {/* Left Column: Conditions & Substrate Inputs */}\r\n                <div className=\"w-full md:w-1/3 space-y-6\">\r\n                    {/* Environmental Conditions Card */}\r\n                    <div className=\"bg-white/70 backdrop-blur-sm p-5 rounded-xl shadow-md border border-gray-200\">\r\n                        <h3 className=\"text-lg font-semibold mb-4 flex items-center\">\r\n                            Environmental Conditions\r\n                            <span className=\"ml-2 text-xs text-gray-500 cursor-help\" title=\"Set temperature (20-30°C) and pH (6.0-7.0) for growth\">(i)</span>\r\n                        </h3>\r\n                        <div className=\"space-y-3\">\r\n                            {/* Temperature Input */}\r\n                            <div className=\"flex items-center justify-between\">\r\n                                <label htmlFor=\"temperature\" className=\"block text-sm font-medium mr-2\">Temperature (°C):</label>\r\n                                <input\r\n                                    id=\"temperature\"\r\n                                    type=\"number\"\r\n                                    min=\"20\" max=\"30\" step=\"1\"\r\n                                    value={temperature}\r\n                                    onChange={(e) => handleNumberChange(setTemperature, 20, 30, e.target.value)}\r\n                                    className=\"w-20 p-2 border border-gray-300 rounded-md shadow-sm focus:ring-[#c8a980] focus:border-[#c8a980] text-sm\"\r\n                                />\r\n                            </div>\r\n                             {/* pH Input */}\r\n                            <div className=\"flex items-center justify-between\">\r\n                                <label htmlFor=\"ph\" className=\"block text-sm font-medium mr-2\">pH:</label>\r\n                                <input\r\n                                    id=\"ph\"\r\n                                    type=\"number\"\r\n                                    min=\"6.0\" max=\"7.0\" step=\"0.1\"\r\n                                    value={ph}\r\n                                    onChange={(e) => handleNumberChange(setPh, 6.0, 7.0, e.target.value, true)}\r\n                                    className=\"w-20 p-2 border border-gray-300 rounded-md shadow-sm focus:ring-[#c8a980] focus:border-[#c8a980] text-sm\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Substrate Composition Card */}\r\n                    <div className=\"bg-white/70 backdrop-blur-sm p-5 rounded-xl shadow-md border border-gray-200\">\r\n                         <h3 className=\"text-lg font-semibold mb-4 flex items-center\">\r\n                            Substrate Composition\r\n                            <span className=\"ml-2 text-xs text-gray-500 cursor-help\" title=\"Enter weight in grams for each component\">(i)</span>\r\n                         </h3>\r\n                        <div className=\"space-y-3\">\r\n                            {Object.keys(substrate).map((key) => (\r\n                                <div key={key} className=\"flex items-center justify-between\">\r\n                                    <label htmlFor={`substrate-${key}`} className=\"block text-sm font-medium mr-2\">\r\n                                        {substrateLabels[key]} (g):\r\n                                    </label>\r\n                                    <input\r\n                                        id={`substrate-${key}`}\r\n                                        type=\"number\" min=\"0\" value={substrate[key]}\r\n                                        onChange={(e) => handleSubstrateChange(key, e.target.value)}\r\n                                        className=\"w-20 p-2 border border-gray-300 rounded-md shadow-sm focus:ring-[#c8a980] focus:border-[#c8a980] text-sm\"\r\n                                    />\r\n                                </div>\r\n                            ))}\r\n                             {/* Display Total Substrate */}\r\n                             <div className=\"text-right font-semibold pt-2 border-t border-gray-200 mt-3\">\r\n                                Total: {totalSubstrate}g\r\n                             </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Right Column: Chart & Other Inputs */}\r\n                <div className=\"w-full md:w-2/3 space-y-6\">\r\n                     {/* Chart and Other Details Card */}\r\n                     <div className=\"bg-white/70 backdrop-blur-sm p-5 rounded-xl shadow-md border border-gray-200\">\r\n                        <h3 className=\"text-lg font-semibold mb-4 text-center\">Your Substrate Composition</h3>\r\n                        {/* Chart Container */}\r\n                        <div className=\"w-full h-56 md:h-64 mx-auto mb-4\"> {/* Fixed height container */}\r\n                             {totalSubstrate > 0 ? (\r\n                                <Pie data={pieData} options={pieOptions} />\r\n                            ) : (\r\n                                <div className=\"flex items-center justify-center h-full text-gray-500\">\r\n                                    Enter substrate values to see chart.\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n\r\n                        {/* Additional Inputs */}\r\n                        <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\r\n                             <div>\r\n                                <label htmlFor=\"batchName\" className=\"block text-sm font-medium mb-1\">Batch Name:</label>\r\n                                <input\r\n                                    id=\"batchName\"\r\n                                    type=\"text\"\r\n                                    value={batchName}\r\n                                    onChange={(e) => setBatchName(e.target.value)}\r\n                                    placeholder=\"e.g., Spring Batch 1\"\r\n                                    className=\"w-full p-2 border border-gray-300 rounded-md shadow-sm focus:ring-[#c8a980] focus:border-[#c8a980] text-sm\"\r\n                                />\r\n                            </div>\r\n                             <div>\r\n                                <label htmlFor=\"startDate\" className=\"block text-sm font-medium mb-1\">Start Date:</label>\r\n                                <input\r\n                                    id=\"startDate\"\r\n                                    type=\"date\" // Use date type for better UX\r\n                                    value={startDate}\r\n                                    onChange={(e) => setStartDate(e.target.value)}\r\n                                    className=\"w-full p-2 border border-gray-300 rounded-md shadow-sm focus:ring-[#c8a980] focus:border-[#c8a980] text-sm\"\r\n                                />\r\n                            </div>\r\n                             <div className=\"sm:col-span-2\"> {/* Span across two columns on small screens */}\r\n                                <label htmlFor=\"simulationDays\" className=\"block text-sm font-medium mb-1\">Cultivation Duration (Days):</label>\r\n                                <input\r\n                                    id=\"simulationDays\"\r\n                                    type=\"number\"\r\n                                    min=\"1\" max=\"365\" step=\"1\"\r\n                                    value={simulationDays}\r\n                                    onChange={handleDaysChange} // Use the now defined handler\r\n                                     className=\"w-full p-2 border border-gray-300 rounded-md shadow-sm focus:ring-[#c8a980] focus:border-[#c8a980] text-sm\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n\r\n             {/* Start Growing Button - Centered at bottom */}\r\n            <footer className=\"mt-8 text-center\">\r\n                 <button\r\n                    className=\"bg-[#8B4513] hover:bg-[#7a3c10] text-white font-bold py-3 px-8 rounded-lg shadow-md transition duration-200 text-lg\"\r\n                    onClick={handleStartClick}\r\n                >\r\n                    Start Growing\r\n                </button>\r\n            </footer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ConditionSetting;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}