{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\celst\\\\sds\\\\src\\\\components\\\\GrowthSimulation.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, LineElement, PointElement, Tooltip, Legend, CategoryScale, LinearScale, Title } from 'chart.js';\nimport odeRK4 from 'ode-rk4';\nimport '../styles/GrowthSimulation.css'; // Import the CSS file\nimport logoSrc from '../assets/images/cslogo.png';\n\n// --- Simulation Logic & ChartJS Registration ---\n// Default Model Parameters\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultParams = {\n  timeStart: 0,\n  timeLength: 100,\n  timeStep: 0.2,\n  'C BD Rate': 1.11,\n  'C Coeff': 0.7,\n  'C Cons. Rate': 76.39,\n  'CO2 Coeff': 0.8,\n  'CO2 Production Rate': 410000,\n  'CO2 Removal Rate': 12.6,\n  'External CO2': 428.23,\n  'External Temp': 24,\n  'Growth Coeff': 5.1,\n  // 'Initial C:N Ratio': 43.58, // Overridden by FIXED_CN_RATIO\n  'Initial Complex:Simple Ratio': 0.8054,\n  'Initial Dry Substrate Weight': 410.2,\n  'IsMush': 1,\n  'Mushroom Multiplier': 5.17,\n  'N Coeff': 68.4,\n  'N Rate': 13.03,\n  'pH': 6.91,\n  'pH Coeff': 1.4,\n  'Temp Coeff': 1.3,\n  'Temp Production Rate': 405,\n  'Temp Transfer Rate': 1.5,\n  'Effect of CO2 on Mush Growth Data': [[500, 0.9], [800, 1], [1000, 0.8], [1200, 0.25], [1400, 0]],\n  'Effect of CO2 on Myc Growth Data': [[15000, 1], [20000, 0.9], [25000, 0.25], [30000, 0]],\n  'Effect of pH on Mush Growth Data': [[5.5, 0], [6, 0.25], [6.7, 1], [7, 0.6], [7.5, 0]],\n  'Effect of pH on Myc Growth Data': [[5.8, 0], [6, 0.25], [6.7, 1], [7, 0.6], [7.5, 0]],\n  'Effect of Temp on Mush Growth Data': [[10, 0], [15, 5.37], [20, 6.36], [25, 8.63], [30, 6.37], [40, 0]],\n  'Effect of Temp on Myc Growth Data': [[10, 0], [15, 5.37], [20, 6.36], [25, 8.63], [30, 6.37], [35, 5.36], [45, 0]]\n};\nconst FIXED_CN_RATIO = 0.96;\n\n// --- Simulation Functions (linearInterpolate, derivatives, getInitialState, runSimulation) ---\n// Assume these functions are correctly defined here as in the previous step\nfunction linearInterpolate(data, x) {/* ... */}\nfunction derivatives(dydt, y, t, currentParams) {/* ... */}\nfunction getInitialState(p) {/* ... */}\nfunction runSimulation(inputParams) {/* ... */}\n// --- (End of Simulation Functions) ---\n\n// Register ChartJS components\nChartJS.register(LineElement, PointElement, Tooltip, Legend, CategoryScale, LinearScale, Title);\n\n// --- React Component ---\nconst GrowthSimulation = () => {\n  _s();\n  const navigate = useNavigate();\n  const [simulationResults, setSimulationResults] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [batchName, setBatchName] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [finalSimulatedYield, setFinalSimulatedYield] = useState(null);\n  // Add 'mycelium' to possible active tabs, default to 'yield'\n  const [activeChartTab, setActiveChartTab] = useState('yield'); // 'yield', 'temp', 'mycelium'\n\n  // Consistent localStorage keys\n  const LOCAL_STORAGE_KEYS = {\n    TEMPERATURE: 'sim_temperature',\n    PH: 'sim_ph',\n    SUBSTRATE: 'sim_substrate',\n    SIMULATION_DAYS: 'sim_duration',\n    BATCH_NAME: 'sim_batch_name',\n    START_DATE: 'sim_start_date'\n  };\n  useEffect(() => {\n    let isMounted = true;\n    setIsLoading(true);\n    setError(null);\n    setFinalSimulatedYield(null);\n    setTimeout(() => {\n      if (!isMounted) return;\n      try {\n        // Load parameters (Batch Name and Start Date are correctly loaded here)\n        const savedTemperature = localStorage.getItem(LOCAL_STORAGE_KEYS.TEMPERATURE);\n        const savedPh = localStorage.getItem(LOCAL_STORAGE_KEYS.PH);\n        const savedSubstrateJson = localStorage.getItem(LOCAL_STORAGE_KEYS.SUBSTRATE);\n        const savedDays = localStorage.getItem(LOCAL_STORAGE_KEYS.SIMULATION_DAYS);\n        const savedBatchName = localStorage.getItem(LOCAL_STORAGE_KEYS.BATCH_NAME) || 'N/A'; // Correctly reads batch name\n        const savedStartDate = localStorage.getItem(LOCAL_STORAGE_KEYS.START_DATE) || 'N/A'; // Correctly reads start date\n\n        setBatchName(savedBatchName); // State is set\n        setStartDate(savedStartDate); // State is set\n\n        // --- Parameter validation and simulation run (same as before) ---\n        if (savedTemperature === null || savedPh === null || savedSubstrateJson === null || savedDays === null) {\n          const missing = [/* ... error message construction ... */].filter(Boolean).join(', ');\n          throw new Error(`Missing required simulation parameters: ${missing}. Please set them in Condition Settings.`);\n        }\n        const temp = parseFloat(savedTemperature);\n        const phValue = parseFloat(savedPh);\n        const days = parseInt(savedDays, 10);\n        let substrateData = null;\n        let initialWeight = 0;\n        try {\n          substrateData = JSON.parse(savedSubstrateJson);\n          if (typeof substrateData !== 'object' || substrateData === null) throw new Error(\"Invalid substrate format.\");\n          initialWeight = Object.values(substrateData).reduce((sum, val) => sum + (Number(val) || 0), 0);\n        } catch (parseError) {\n          /* ... error handling ... */throw parseError;\n        }\n        if (isNaN(temp) || isNaN(phValue) || isNaN(initialWeight) || isNaN(days)) throw new Error(\"Invalid numerical parameters.\");\n        const simulationDuration = days > 0 ? days : defaultParams.timeLength;\n        const simulationInputs = {\n          'External Temp': temp,\n          'pH': phValue,\n          'Initial Dry Substrate Weight': initialWeight > 0 ? initialWeight : defaultParams['Initial Dry Substrate Weight'],\n          'timeLength': simulationDuration\n        };\n        const results = runSimulation(simulationInputs);\n        // --- (End of parameter validation and simulation run) ---\n\n        if (isMounted) {\n          setSimulationResults(results);\n          if (results && results.length > 0) {\n            const lastResult = results[results.length - 1];\n            if (lastResult && Number.isFinite(lastResult.MushroomYield)) {\n              setFinalSimulatedYield(lastResult.MushroomYield);\n            }\n            console.log(\"Simulation ended at t=\", lastResult.time, \" Final State:\", lastResult);\n          } else {\n            console.log(\"Simulation produced no results.\");\n          }\n        }\n      } catch (err) {\n        console.error(\"Error during simulation setup or run:\", err);\n        if (isMounted) setError(err.message || \"Failed to run simulation.\");\n      } finally {\n        if (isMounted) setIsLoading(false);\n      }\n    }, 50);\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n  const handleBackClick = () => {\n    navigate('/condition-setting');\n  };\n\n  // --- Chart Data & Options ---\n  const getChartConfig = () => {\n    if (!simulationResults || simulationResults.length === 0) {\n      return {\n        data: {\n          datasets: []\n        },\n        options: {}\n      };\n    }\n    const yieldColor = '#2E7D32';\n    const tempColor = '#C62828';\n    const myceliumColor = '#1976D2'; // Blue for Mycelium\n    const textColor = '#333';\n    const gridColor = 'rgba(0, 0, 0, 0.08)';\n    let datasets = [];\n    const options = {\n      responsive: true,\n      maintainAspectRatio: false,\n      plugins: {\n        /* ... legend, tooltip, title config ... */\n        legend: {\n          display: true,\n          labels: {\n            color: textColor,\n            font: {\n              family: 'Lexend'\n            }\n          }\n        },\n        tooltip: {\n          enabled: true,\n          bodyFont: {\n            family: 'Lexend'\n          },\n          titleFont: {\n            family: 'Lexend'\n          }\n        },\n        title: {\n          display: true,\n          text: '',\n          color: textColor,\n          font: {\n            size: 16,\n            family: 'Lexend'\n          }\n        }\n      },\n      scales: {\n        x: {\n          /* ... x-axis config ... */\n          type: 'linear',\n          title: {\n            display: true,\n            text: 'Time (Days)',\n            color: textColor,\n            font: {\n              family: 'Lexend'\n            }\n          },\n          ticks: {\n            color: textColor,\n            font: {\n              family: 'Lexend'\n            }\n          },\n          grid: {\n            color: gridColor\n          },\n          min: 0\n        },\n        // Define ALL potential Y axes\n        yYield: {\n          type: 'linear',\n          position: 'left',\n          title: {\n            display: true,\n            text: 'Yield (g)',\n            color: yieldColor,\n            font: {\n              family: 'Lexend'\n            }\n          },\n          ticks: {\n            color: yieldColor,\n            font: {\n              family: 'Lexend'\n            }\n          },\n          grid: {\n            drawOnChartArea: false\n          },\n          beginAtZero: true,\n          display: false\n        },\n        // Initially hidden\n        yTemp: {\n          type: 'linear',\n          position: 'left',\n          title: {\n            display: true,\n            text: 'Temperature (Â°C)',\n            color: tempColor,\n            font: {\n              family: 'Lexend'\n            }\n          },\n          ticks: {\n            color: tempColor,\n            font: {\n              family: 'Lexend'\n            }\n          },\n          grid: {\n            drawOnChartArea: false\n          },\n          beginAtZero: false,\n          display: false\n        },\n        // Initially hidden\n        yMycelium: {\n          type: 'linear',\n          position: 'left',\n          title: {\n            display: true,\n            text: 'Mycelium Density',\n            color: myceliumColor,\n            font: {\n              family: 'Lexend'\n            }\n          },\n          ticks: {\n            color: myceliumColor,\n            font: {\n              family: 'Lexend'\n            }\n          },\n          grid: {\n            drawOnChartArea: false\n          },\n          beginAtZero: true,\n          suggestedMax: 1,\n          display: false\n        } // Initially hidden\n      }\n    };\n\n    // Reset display for all axes before setting the active one\n    options.scales.yYield.display = false;\n    options.scales.yTemp.display = false;\n    options.scales.yMycelium.display = false;\n    switch (activeChartTab) {\n      case 'yield':\n        options.plugins.title.text = 'Yield Over Time';\n        options.scales.yYield.display = true; // Show this axis\n        datasets = [{\n          label: 'Mushroom Yield (g)',\n          data: simulationResults.map(p => ({\n            x: p.time,\n            y: Number.isFinite(p.MushroomYield) ? p.MushroomYield : null\n          })),\n          borderColor: yieldColor,\n          backgroundColor: 'rgba(46, 125, 50, 0.1)',\n          yAxisID: 'yYield'\n        }];\n        break;\n      case 'temp':\n        options.plugins.title.text = 'Temperature Over Time';\n        options.scales.yTemp.display = true; // Show this axis\n        datasets = [{\n          label: 'Temperature (Â°C)',\n          data: simulationResults.map(p => ({\n            x: p.time,\n            y: Number.isFinite(p.Temp) ? p.Temp : null\n          })),\n          borderColor: tempColor,\n          backgroundColor: 'rgba(198, 40, 40, 0.1)',\n          yAxisID: 'yTemp'\n        }];\n        break;\n      // *** ADD CASE FOR MYCELIUM ***\n      case 'mycelium':\n        options.plugins.title.text = 'Mycelium Growth Over Time';\n        options.scales.yMycelium.display = true; // Show this axis\n        datasets = [{\n          label: 'Mycelium Density',\n          // Or 'Mycelium Growth'\n          data: simulationResults.map(p => ({\n            x: p.time,\n            y: Number.isFinite(p.Mycelium) ? p.Mycelium : null\n          })),\n          borderColor: myceliumColor,\n          backgroundColor: 'rgba(25, 118, 210, 0.1)',\n          yAxisID: 'yMycelium'\n        }];\n        break;\n      default:\n        datasets = [];\n    }\n    return {\n      data: {\n        datasets: datasets.map(ds => ({\n          ...ds,\n          tension: 0.1,\n          pointRadius: 2,\n          spanGaps: true\n        }))\n      },\n      options: options\n    };\n  };\n  const chartConfig = getChartConfig();\n\n  // --- JSX ---\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"growth-simulation\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"simulation-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logobox\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleBackClick,\n          className: \"back-button\",\n          title: \"Back to Settings\",\n          children: \"\\u2190\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: logoSrc,\n            alt: \"City Sprouts Logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"batch-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"batch-name\",\n          children: [\"Batch: #\", batchName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"start-date\",\n          children: [\"Start Date: \", startDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animation-area content-card\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Animation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-results-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tabs-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveChartTab('yield'),\n            className: `tab-button ${activeChartTab === 'yield' ? 'tab-button-active' : ''}`,\n            children: \" Yield over Time \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveChartTab('temp'),\n            className: `tab-button ${activeChartTab === 'temp' ? 'tab-button-active' : ''}`,\n            children: \" Temperature \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveChartTab('mycelium'),\n            className: `tab-button ${activeChartTab === 'mycelium' ? 'tab-button-active' : ''}`,\n            children: \" Mycelium \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-area content-card\",\n          children: [isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"loading-message\",\n            children: \"Loading simulation data...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 41\n          }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-message\",\n            children: [\"Error: \", error]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 37\n          }, this), !isLoading && !error && simulationResults && (chartConfig.data.datasets.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-container\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(Line, {\n              options: chartConfig.options,\n              data: chartConfig.data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 70\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 36\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"no-data-message\",\n            children: \"No data available for this chart.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 38\n          }, this)), !isLoading && !error && !simulationResults && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"no-data-message\",\n            children: \"No simulation results available.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 74\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"results-section content-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"results-heading\",\n            children: [\" Results \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"info-icon\",\n              title: \"Key simulation outputs based on initial conditions\",\n              children: \"i\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 68\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"results-items\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"result-label\",\n                children: \"Projected Yield:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 34\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"result-value\",\n                children: isLoading ? '...' : error ? 'Error' : Number.isFinite(finalSimulatedYield) ? `${finalSimulatedYield.toFixed(1)}g` : 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 34\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 30\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"result-label\",\n                children: \"Initial C:N Ratio:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 34\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"result-value\",\n                children: FIXED_CN_RATIO.toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 34\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 10\n  }, this);\n};\n_s(GrowthSimulation, \"WujbTxsfSuLk8SGaJb8thjtor8I=\", false, function () {\n  return [useNavigate];\n});\n_c = GrowthSimulation;\nexport default GrowthSimulation;\n\n// Make sure simulation functions (linearInterpolate, derivatives, getInitialState, runSimulation)\n// are defined correctly *outside* the GrowthSimulation component, as shown in the previous correction.\n// I've omitted them here for brevity but they must be present in your file.\nvar _c;\n$RefreshReg$(_c, \"GrowthSimulation\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Line","Chart","ChartJS","LineElement","PointElement","Tooltip","Legend","CategoryScale","LinearScale","Title","odeRK4","logoSrc","jsxDEV","_jsxDEV","defaultParams","timeStart","timeLength","timeStep","FIXED_CN_RATIO","linearInterpolate","data","x","derivatives","dydt","y","t","currentParams","getInitialState","p","runSimulation","inputParams","register","GrowthSimulation","_s","navigate","simulationResults","setSimulationResults","isLoading","setIsLoading","error","setError","batchName","setBatchName","startDate","setStartDate","finalSimulatedYield","setFinalSimulatedYield","activeChartTab","setActiveChartTab","LOCAL_STORAGE_KEYS","TEMPERATURE","PH","SUBSTRATE","SIMULATION_DAYS","BATCH_NAME","START_DATE","isMounted","setTimeout","savedTemperature","localStorage","getItem","savedPh","savedSubstrateJson","savedDays","savedBatchName","savedStartDate","missing","filter","Boolean","join","Error","temp","parseFloat","phValue","days","parseInt","substrateData","initialWeight","JSON","parse","Object","values","reduce","sum","val","Number","parseError","isNaN","simulationDuration","simulationInputs","results","length","lastResult","isFinite","MushroomYield","console","log","time","err","message","handleBackClick","getChartConfig","datasets","options","yieldColor","tempColor","myceliumColor","textColor","gridColor","responsive","maintainAspectRatio","plugins","legend","display","labels","color","font","family","tooltip","enabled","bodyFont","titleFont","title","text","size","scales","type","ticks","grid","min","yYield","position","drawOnChartArea","beginAtZero","yTemp","yMycelium","suggestedMax","label","map","borderColor","backgroundColor","yAxisID","Temp","Mycelium","ds","tension","pointRadius","spanGaps","chartConfig","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/celst/sds/src/components/GrowthSimulation.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, LineElement, PointElement, Tooltip, Legend, CategoryScale, LinearScale, Title } from 'chart.js';\r\nimport odeRK4 from 'ode-rk4';\r\nimport '../styles/GrowthSimulation.css'; // Import the CSS file\r\nimport logoSrc from '../assets/images/cslogo.png';\r\n\r\n// --- Simulation Logic & ChartJS Registration ---\r\n// Default Model Parameters\r\nconst defaultParams = {\r\n    timeStart: 0, timeLength: 100, timeStep: 0.2,\r\n    'C BD Rate': 1.11, 'C Coeff': 0.7, 'C Cons. Rate': 76.39, 'CO2 Coeff': 0.8,\r\n    'CO2 Production Rate': 410000, 'CO2 Removal Rate': 12.6, 'External CO2': 428.23,\r\n    'External Temp': 24, 'Growth Coeff': 5.1,\r\n    // 'Initial C:N Ratio': 43.58, // Overridden by FIXED_CN_RATIO\r\n    'Initial Complex:Simple Ratio': 0.8054,\r\n    'Initial Dry Substrate Weight': 410.2,\r\n    'IsMush': 1, 'Mushroom Multiplier': 5.17, 'N Coeff': 68.4, 'N Rate': 13.03,\r\n    'pH': 6.91,\r\n    'pH Coeff': 1.4, 'Temp Coeff': 1.3, 'Temp Production Rate': 405,\r\n    'Temp Transfer Rate': 1.5,\r\n    'Effect of CO2 on Mush Growth Data': [[500, 0.9], [800, 1], [1000, 0.8], [1200, 0.25], [1400, 0]],\r\n    'Effect of CO2 on Myc Growth Data': [[15000, 1], [20000, 0.9], [25000, 0.25], [30000, 0]],\r\n    'Effect of pH on Mush Growth Data': [[5.5, 0], [6, 0.25], [6.7, 1], [7, 0.6], [7.5, 0]],\r\n    'Effect of pH on Myc Growth Data': [[5.8, 0], [6, 0.25], [6.7, 1], [7, 0.6], [7.5, 0]],\r\n    'Effect of Temp on Mush Growth Data': [[10, 0], [15, 5.37], [20, 6.36], [25, 8.63], [30, 6.37], [40, 0]],\r\n    'Effect of Temp on Myc Growth Data': [[10, 0], [15, 5.37], [20, 6.36], [25, 8.63], [30, 6.37], [35, 5.36], [45, 0]],\r\n};\r\n\r\nconst FIXED_CN_RATIO = 0.96;\r\n\r\n// --- Simulation Functions (linearInterpolate, derivatives, getInitialState, runSimulation) ---\r\n// Assume these functions are correctly defined here as in the previous step\r\nfunction linearInterpolate(data, x) { /* ... */ }\r\nfunction derivatives(dydt, y, t, currentParams) { /* ... */ }\r\nfunction getInitialState(p) { /* ... */ }\r\nfunction runSimulation(inputParams) { /* ... */ }\r\n// --- (End of Simulation Functions) ---\r\n\r\n\r\n// Register ChartJS components\r\nChartJS.register(LineElement, PointElement, Tooltip, Legend, CategoryScale, LinearScale, Title);\r\n\r\n// --- React Component ---\r\nconst GrowthSimulation = () => {\r\n    const navigate = useNavigate();\r\n    const [simulationResults, setSimulationResults] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [batchName, setBatchName] = useState('');\r\n    const [startDate, setStartDate] = useState('');\r\n    const [finalSimulatedYield, setFinalSimulatedYield] = useState(null);\r\n    // Add 'mycelium' to possible active tabs, default to 'yield'\r\n    const [activeChartTab, setActiveChartTab] = useState('yield'); // 'yield', 'temp', 'mycelium'\r\n\r\n    // Consistent localStorage keys\r\n    const LOCAL_STORAGE_KEYS = {\r\n        TEMPERATURE: 'sim_temperature',\r\n        PH: 'sim_ph',\r\n        SUBSTRATE: 'sim_substrate',\r\n        SIMULATION_DAYS: 'sim_duration',\r\n        BATCH_NAME: 'sim_batch_name',\r\n        START_DATE: 'sim_start_date',\r\n    };\r\n\r\n    useEffect(() => {\r\n        let isMounted = true;\r\n        setIsLoading(true);\r\n        setError(null);\r\n        setFinalSimulatedYield(null);\r\n\r\n        setTimeout(() => {\r\n            if (!isMounted) return;\r\n            try {\r\n                // Load parameters (Batch Name and Start Date are correctly loaded here)\r\n                const savedTemperature = localStorage.getItem(LOCAL_STORAGE_KEYS.TEMPERATURE);\r\n                const savedPh = localStorage.getItem(LOCAL_STORAGE_KEYS.PH);\r\n                const savedSubstrateJson = localStorage.getItem(LOCAL_STORAGE_KEYS.SUBSTRATE);\r\n                const savedDays = localStorage.getItem(LOCAL_STORAGE_KEYS.SIMULATION_DAYS);\r\n                const savedBatchName = localStorage.getItem(LOCAL_STORAGE_KEYS.BATCH_NAME) || 'N/A'; // Correctly reads batch name\r\n                const savedStartDate = localStorage.getItem(LOCAL_STORAGE_KEYS.START_DATE) || 'N/A'; // Correctly reads start date\r\n\r\n                setBatchName(savedBatchName); // State is set\r\n                setStartDate(savedStartDate); // State is set\r\n\r\n                // --- Parameter validation and simulation run (same as before) ---\r\n                if (savedTemperature === null || savedPh === null || savedSubstrateJson === null || savedDays === null) {\r\n                    const missing = [ /* ... error message construction ... */ ].filter(Boolean).join(', ');\r\n                    throw new Error(`Missing required simulation parameters: ${missing}. Please set them in Condition Settings.`);\r\n                }\r\n                const temp = parseFloat(savedTemperature);\r\n                const phValue = parseFloat(savedPh);\r\n                const days = parseInt(savedDays, 10);\r\n                let substrateData = null;\r\n                let initialWeight = 0;\r\n                try {\r\n                    substrateData = JSON.parse(savedSubstrateJson);\r\n                    if (typeof substrateData !== 'object' || substrateData === null) throw new Error(\"Invalid substrate format.\");\r\n                    initialWeight = Object.values(substrateData).reduce((sum, val) => sum + (Number(val) || 0), 0);\r\n                } catch (parseError) { /* ... error handling ... */ throw parseError; }\r\n                if (isNaN(temp) || isNaN(phValue) || isNaN(initialWeight) || isNaN(days)) throw new Error(\"Invalid numerical parameters.\");\r\n                const simulationDuration = (days > 0) ? days : defaultParams.timeLength;\r\n                const simulationInputs = {\r\n                    'External Temp': temp,\r\n                    'pH': phValue,\r\n                    'Initial Dry Substrate Weight': initialWeight > 0 ? initialWeight : defaultParams['Initial Dry Substrate Weight'],\r\n                    'timeLength': simulationDuration,\r\n                };\r\n                const results = runSimulation(simulationInputs);\r\n                // --- (End of parameter validation and simulation run) ---\r\n\r\n\r\n                if (isMounted) {\r\n                     setSimulationResults(results);\r\n                     if (results && results.length > 0) {\r\n                         const lastResult = results[results.length - 1];\r\n                          if (lastResult && Number.isFinite(lastResult.MushroomYield)) {\r\n                              setFinalSimulatedYield(lastResult.MushroomYield);\r\n                          }\r\n                          console.log(\"Simulation ended at t=\", lastResult.time, \" Final State:\", lastResult);\r\n                     } else {\r\n                          console.log(\"Simulation produced no results.\");\r\n                     }\r\n                 }\r\n\r\n            } catch (err) {\r\n                console.error(\"Error during simulation setup or run:\", err);\r\n                if (isMounted) setError(err.message || \"Failed to run simulation.\");\r\n            } finally {\r\n                if (isMounted) setIsLoading(false);\r\n            }\r\n        }, 50);\r\n\r\n        return () => { isMounted = false; };\r\n    }, []);\r\n\r\n    const handleBackClick = () => { navigate('/condition-setting'); };\r\n\r\n    // --- Chart Data & Options ---\r\n    const getChartConfig = () => {\r\n        if (!simulationResults || simulationResults.length === 0) {\r\n            return { data: { datasets: [] }, options: {} };\r\n        }\r\n\r\n        const yieldColor = '#2E7D32';\r\n        const tempColor = '#C62828';\r\n        const myceliumColor = '#1976D2'; // Blue for Mycelium\r\n        const textColor = '#333';\r\n        const gridColor = 'rgba(0, 0, 0, 0.08)';\r\n\r\n        let datasets = [];\r\n        const options = {\r\n            responsive: true, maintainAspectRatio: false,\r\n            plugins: { /* ... legend, tooltip, title config ... */\r\n                legend: { display: true, labels: { color: textColor, font: { family: 'Lexend'} } },\r\n                tooltip: { enabled: true, bodyFont: { family: 'Lexend'}, titleFont: { family: 'Lexend' } },\r\n                title: { display: true, text: '', color: textColor, font: { size: 16, family: 'Lexend' } }\r\n             },\r\n            scales: {\r\n                x: { /* ... x-axis config ... */\r\n                    type: 'linear', title: { display: true, text: 'Time (Days)', color: textColor, font: { family: 'Lexend'} },\r\n                    ticks: { color: textColor, font: { family: 'Lexend'} }, grid: { color: gridColor }, min: 0,\r\n                 },\r\n                // Define ALL potential Y axes\r\n                yYield: { type: 'linear', position: 'left', title: { display: true, text: 'Yield (g)', color: yieldColor, font: { family: 'Lexend'} }, ticks: { color: yieldColor, font: { family: 'Lexend'} }, grid: { drawOnChartArea: false }, beginAtZero: true, display: false }, // Initially hidden\r\n                yTemp: { type: 'linear', position: 'left', title: { display: true, text: 'Temperature (Â°C)', color: tempColor, font: { family: 'Lexend'} }, ticks: { color: tempColor, font: { family: 'Lexend'} }, grid: { drawOnChartArea: false }, beginAtZero: false, display: false }, // Initially hidden\r\n                yMycelium: { type: 'linear', position: 'left', title: { display: true, text: 'Mycelium Density', color: myceliumColor, font: { family: 'Lexend'} }, ticks: { color: myceliumColor, font: { family: 'Lexend'} }, grid: { drawOnChartArea: false }, beginAtZero: true, suggestedMax: 1, display: false } // Initially hidden\r\n            }\r\n        };\r\n\r\n        // Reset display for all axes before setting the active one\r\n        options.scales.yYield.display = false;\r\n        options.scales.yTemp.display = false;\r\n        options.scales.yMycelium.display = false;\r\n\r\n\r\n        switch (activeChartTab) {\r\n            case 'yield':\r\n                options.plugins.title.text = 'Yield Over Time';\r\n                options.scales.yYield.display = true; // Show this axis\r\n                datasets = [{\r\n                    label: 'Mushroom Yield (g)',\r\n                    data: simulationResults.map(p => ({ x: p.time, y: Number.isFinite(p.MushroomYield) ? p.MushroomYield : null })),\r\n                    borderColor: yieldColor, backgroundColor: 'rgba(46, 125, 50, 0.1)',\r\n                    yAxisID: 'yYield',\r\n                }];\r\n                break;\r\n            case 'temp':\r\n                 options.plugins.title.text = 'Temperature Over Time';\r\n                 options.scales.yTemp.display = true; // Show this axis\r\n                 datasets = [{\r\n                     label: 'Temperature (Â°C)',\r\n                     data: simulationResults.map(p => ({ x: p.time, y: Number.isFinite(p.Temp) ? p.Temp : null })),\r\n                     borderColor: tempColor, backgroundColor: 'rgba(198, 40, 40, 0.1)',\r\n                     yAxisID: 'yTemp',\r\n                 }];\r\n                 break;\r\n            // *** ADD CASE FOR MYCELIUM ***\r\n            case 'mycelium':\r\n                 options.plugins.title.text = 'Mycelium Growth Over Time';\r\n                 options.scales.yMycelium.display = true; // Show this axis\r\n                 datasets = [{\r\n                     label: 'Mycelium Density', // Or 'Mycelium Growth'\r\n                     data: simulationResults.map(p => ({ x: p.time, y: Number.isFinite(p.Mycelium) ? p.Mycelium : null })),\r\n                     borderColor: myceliumColor, backgroundColor: 'rgba(25, 118, 210, 0.1)',\r\n                     yAxisID: 'yMycelium',\r\n                 }];\r\n                 break;\r\n            default:\r\n                datasets = [];\r\n        }\r\n\r\n        return {\r\n             data: { datasets: datasets.map(ds => ({ ...ds, tension: 0.1, pointRadius: 2, spanGaps: true })) },\r\n             options: options\r\n        };\r\n    };\r\n\r\n    const chartConfig = getChartConfig();\r\n\r\n    // --- JSX ---\r\n    return (\r\n         <div className=\"growth-simulation\">\r\n             <header className=\"simulation-header\">\r\n                 <div className=\"logobox\">\r\n                      <button onClick={handleBackClick} className=\"back-button\" title=\"Back to Settings\">\r\n                          &larr;\r\n                      </button>\r\n                     <div className=\"logo\">\r\n                         <img src={logoSrc} alt=\"City Sprouts Logo\" />\r\n                     </div>\r\n                 </div>\r\n                 {/* These values are correctly set from localStorage via useEffect */}\r\n                 <div className=\"batch-info\">\r\n                     <span className=\"batch-name\">Batch: #{batchName}</span>\r\n                     <span className=\"start-date\">Start Date: {startDate}</span>\r\n                 </div>\r\n             </header>\r\n\r\n             <main className=\"main-content-grid\">\r\n                 <div className=\"animation-area content-card\">\r\n                     <span>Animation</span>\r\n                 </div>\r\n\r\n                 <div className=\"chart-results-column\">\r\n                     <div className=\"tabs-container\">\r\n                         <button\r\n                             onClick={() => setActiveChartTab('yield')}\r\n                             className={`tab-button ${activeChartTab === 'yield' ? 'tab-button-active' : ''}`}\r\n                         > Yield over Time </button>\r\n                         <button\r\n                             onClick={() => setActiveChartTab('temp')}\r\n                              className={`tab-button ${activeChartTab === 'temp' ? 'tab-button-active' : ''}`}\r\n                         > Temperature </button>\r\n                         {/* *** ADD MYCELIUM TAB BUTTON *** */}\r\n                         <button\r\n                             onClick={() => setActiveChartTab('mycelium')}\r\n                              className={`tab-button ${activeChartTab === 'mycelium' ? 'tab-button-active' : ''}`}\r\n                         > Mycelium </button>\r\n                     </div>\r\n\r\n                     <div className=\"chart-area content-card\">\r\n                          {/* Loading/Error/Chart Display Logic (no changes needed here) */}\r\n                          {isLoading && <p className=\"loading-message\">Loading simulation data...</p>}\r\n                          {error && <p className=\"error-message\">Error: {error}</p>}\r\n                          {!isLoading && !error && simulationResults && (\r\n                               chartConfig.data.datasets.length > 0 ? (\r\n                                   <div className=\"chart-container\"> <Line options={chartConfig.options} data={chartConfig.data} /> </div>\r\n                               ) : ( <p className=\"no-data-message\">No data available for this chart.</p> )\r\n                          )}\r\n                          {!isLoading && !error && !simulationResults && <p className=\"no-data-message\">No simulation results available.</p>}\r\n                     </div>\r\n\r\n                     <div className=\"results-section content-card\">\r\n                          {/* Results Display Logic (no changes needed here) */}\r\n                          <h3 className=\"results-heading\"> Results <span className=\"info-icon\" title=\"Key simulation outputs based on initial conditions\">i</span> </h3>\r\n                         <div className=\"results-items\">\r\n                             <div className=\"result-item\">\r\n                                 <span className=\"result-label\">Projected Yield:</span>\r\n                                 <span className=\"result-value\">\r\n                                     {isLoading ? '...' : error ? 'Error' : Number.isFinite(finalSimulatedYield) ? `${finalSimulatedYield.toFixed(1)}g` : 'N/A'}\r\n                                 </span>\r\n                             </div>\r\n                             <div className=\"result-item\">\r\n                                 <span className=\"result-label\">Initial C:N Ratio:</span>\r\n                                 <span className=\"result-value\">\r\n                                     {FIXED_CN_RATIO.toFixed(2)}\r\n                                 </span>\r\n                             </div>\r\n                         </div>\r\n                     </div>\r\n                 </div>\r\n             </main>\r\n         </div>\r\n     );\r\n};\r\n\r\nexport default GrowthSimulation;\r\n\r\n// Make sure simulation functions (linearInterpolate, derivatives, getInitialState, runSimulation)\r\n// are defined correctly *outside* the GrowthSimulation component, as shown in the previous correction.\r\n// I've omitted them here for brevity but they must be present in your file."],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}