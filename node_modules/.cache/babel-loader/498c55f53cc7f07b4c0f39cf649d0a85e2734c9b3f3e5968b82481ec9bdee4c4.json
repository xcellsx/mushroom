{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\celst\\\\sds\\\\src\\\\components\\\\GrowthSimulation.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, LineElement, PointElement, Tooltip, Legend, CategoryScale, LinearScale, Title } from 'chart.js';\nimport odeRK4 from 'ode-rk4';\nimport '../styles/GrowthSimulation.css'; // Import the CSS file\nimport logoSrc from '../assets/images/cslogo.png';\n\n// --- Simulation Logic (Keep outside component - NO CHANGES NEEDED HERE) ---\n// ... (linearInterpolate, defaultParams, derivatives, getInitialState, runSimulation) ...\n// (Same as before)\n\n// Register required components for Chart.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(LineElement, PointElement, Tooltip, Legend, CategoryScale, LinearScale, Title);\n\n// --- React Component ---\nconst GrowthSimulation = () => {\n  _s();\n  const navigate = useNavigate();\n  const [simulationResults, setSimulationResults] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [batchName, setBatchName] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [initialCNRatio, setInitialCNRatio] = useState(defaultParams['Initial C:N Ratio']);\n  const [finalSimulatedYield, setFinalSimulatedYield] = useState(null);\n  const [activeChartTab, setActiveChartTab] = useState('yield'); // 'yield', 'temp'\n\n  useEffect(() => {\n    // --- useEffect Logic (NO CHANGES NEEDED HERE) ---\n    // ... (Same loading and simulation logic as before) ...\n    let isMounted = true;\n    setIsLoading(true);\n    setError(null);\n    setFinalSimulatedYield(null);\n    setTimeout(() => {\n      if (!isMounted) return;\n      try {\n        const savedTemperature = localStorage.getItem('temperature');\n        const savedPh = localStorage.getItem('ph');\n        const savedSubstrateJson = localStorage.getItem('substrate');\n        const savedDays = localStorage.getItem('simulationDays');\n        const savedBatchName = localStorage.getItem('batchName') || 'N/A';\n        const savedStartDate = localStorage.getItem('startDate') || 'N/A';\n        const savedCNRatio = localStorage.getItem('initialCNRatio') || defaultParams['Initial C:N Ratio'];\n        setBatchName(savedBatchName);\n        setStartDate(savedStartDate);\n        setInitialCNRatio(parseFloat(savedCNRatio));\n        if (!savedTemperature || !savedPh || !savedSubstrateJson || !savedDays) {\n          throw new Error(\"Required simulation parameters not found in localStorage.\");\n        }\n        const substrateData = JSON.parse(savedSubstrateJson);\n        if (typeof substrateData !== 'object' || substrateData === null) {\n          throw new Error(\"Invalid substrate data found in localStorage.\");\n        }\n        const temp = parseFloat(savedTemperature);\n        const phValue = parseFloat(savedPh);\n        const days = parseInt(savedDays, 10);\n        const initialWeight = Object.values(substrateData).reduce((sum, val) => sum + (Number(val) || 0), 0);\n        const simulationDuration = Number.isInteger(days) && days > 0 ? days : defaultParams.timeLength;\n        if (isNaN(temp) || isNaN(phValue) || isNaN(initialWeight)) {\n          throw new Error(\"Invalid numerical parameters loaded from localStorage.\");\n        }\n        const simulationInputs = {\n          'External Temp': temp,\n          'pH': phValue,\n          'Initial Dry Substrate Weight': initialWeight > 0 ? initialWeight : defaultParams['Initial Dry Substrate Weight'],\n          'timeLength': simulationDuration,\n          'Initial C:N Ratio': parseFloat(savedCNRatio) || defaultParams['Initial C:N Ratio']\n        };\n        const results = runSimulation(simulationInputs);\n        if (isMounted) {\n          setSimulationResults(results);\n          if (results && results.length > 0) {\n            var _results;\n            const lastYield = (_results = results[results.length - 1]) === null || _results === void 0 ? void 0 : _results.MushroomYield;\n            if (Number.isFinite(lastYield)) {\n              setFinalSimulatedYield(lastYield);\n            }\n          }\n        }\n      } catch (err) {\n        console.error(\"Error during simulation setup or run:\", err);\n        if (isMounted) setError(err.message || \"Failed to run simulation.\");\n      } finally {\n        if (isMounted) setIsLoading(false);\n      }\n    }, 50);\n    return () => {\n      isMounted = false;\n    };\n  }, []); // Dependency array is empty, runs once on mount\n\n  const handleBackClick = () => {\n    navigate('/condition-setting');\n  };\n\n  // --- Chart Data & Options ---\n  // Minor adjustment: Use CSS variables conceptually if possible, or hardcode colors\n  const getChartConfig = () => {\n    if (!simulationResults || simulationResults.length === 0) {\n      return {\n        data: {\n          datasets: []\n        },\n        options: {}\n      };\n    }\n\n    // Define colors (could also try to read CSS vars if needed, but hardcoding is simpler here)\n    const yieldColor = 'green'; // Matches CSS --chart-yield\n    const tempColor = 'red'; // Matches CSS --chart-temp\n    const textColor = '#452c0e'; // Matches CSS --brown (or --brand-brown if preferred)\n    const gridColor = 'rgba(107, 79, 75, 0.1)'; // Example grid color\n\n    let datasets = [];\n    const options = {\n      responsive: true,\n      maintainAspectRatio: false,\n      plugins: {\n        legend: {\n          display: true,\n          labels: {\n            color: textColor\n          }\n        },\n        // Use textColor\n        tooltip: {\n          enabled: true /* mode: 'index', intersect: false */\n        },\n        title: {\n          display: true,\n          text: '',\n          color: textColor,\n          font: {\n            size: 16\n          }\n        } // Use textColor\n      },\n      scales: {\n        x: {\n          type: 'linear',\n          title: {\n            display: true,\n            text: 'Time (Days)',\n            color: textColor\n          },\n          // Use textColor\n          ticks: {\n            stepSize: 5,\n            color: textColor\n          },\n          // Use textColor\n          grid: {\n            color: gridColor\n          },\n          // Use gridColor\n          min: 0\n        },\n        // Define potential Y axes\n        yYield: {\n          type: 'linear',\n          position: 'left',\n          title: {\n            display: true,\n            text: 'Yield (g)',\n            color: yieldColor\n          },\n          ticks: {\n            color: yieldColor,\n            stepSize: 10\n          },\n          grid: {\n            drawOnChartArea: false\n          },\n          beginAtZero: true,\n          display: false\n        },\n        yTemp: {\n          type: 'linear',\n          position: 'left',\n          title: {\n            display: true,\n            text: 'Temperature (°C)',\n            color: tempColor\n          },\n          ticks: {\n            color: tempColor,\n            stepSize: 2\n          },\n          grid: {\n            drawOnChartArea: false\n          },\n          beginAtZero: false,\n          display: false\n        }\n      }\n    };\n    switch (activeChartTab) {\n      case 'yield':\n        options.plugins.title.text = 'Yield Over Time';\n        options.scales.yYield.display = true;\n        datasets = [{\n          label: 'Mushroom Yield (g)',\n          data: simulationResults.map(p => ({\n            x: p.time,\n            y: Number.isFinite(p.MushroomYield) ? p.MushroomYield : null\n          })),\n          borderColor: yieldColor,\n          backgroundColor: 'rgba(0, 128, 0, 0.1)',\n          // Corresponding light color\n          yAxisID: 'yYield'\n        }];\n        break;\n      case 'temp':\n        options.plugins.title.text = 'Temperature Over Time';\n        options.scales.yTemp.display = true;\n        datasets = [{\n          label: 'Temperature (°C)',\n          data: simulationResults.map(p => ({\n            x: p.time,\n            y: Number.isFinite(p.Temp) ? p.Temp : null\n          })),\n          borderColor: tempColor,\n          backgroundColor: 'rgba(255, 0, 0, 0.1)',\n          // Corresponding light color\n          yAxisID: 'yTemp'\n        }];\n        break;\n      default:\n        datasets = [];\n    }\n    return {\n      data: {\n        datasets: datasets.map(ds => ({\n          ...ds,\n          tension: 0.1,\n          pointRadius: 2,\n          spanGaps: true\n        }))\n      },\n      options: options\n    };\n  };\n  const chartConfig = getChartConfig();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"growth-simulation\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logobox\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logoSrc,\n          alt: \"Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"batch-info\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Batch: #\", batchName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Start Date: \", startDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content-grid\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animation-area content-card\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"animation-placeholder-text\",\n          children: \"Animation Area\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-results-column\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tabs-container\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveChartTab('yield'),\n            className: `tab-button ${activeChartTab === 'yield' ? 'tab-button-active' : ''}` // Conditional active class\n            ,\n            children: \"Yield over Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveChartTab('temp'),\n            className: `tab-button ${activeChartTab === 'temp' ? 'tab-button-active' : ''}` // Conditional active class\n            ,\n            children: \"Temperature\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-area\",\n          children: [\" \", isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"loading-message\",\n            children: \"Loading and running simulation...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 39\n          }, this), \" \", error && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-message\",\n            children: [\"Error: \", error]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 35\n          }, this), \" \", !isLoading && !error && simulationResults && (chartConfig.data.datasets.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-container\",\n            style: {\n              position: 'relative',\n              height: '35vh',\n              width: '100%'\n            },\n            children: /*#__PURE__*/_jsxDEV(Line, {\n              options: chartConfig.options,\n              data: chartConfig.data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 34\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"no-data-message\",\n            children: \"No data available for this chart.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 35\n          }, this) // Replaced Tailwind\n          ), !isLoading && !error && !simulationResults && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"no-data-message\",\n            children: \"No simulation results available.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 72\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"warning-message\",\n            children: [\" \", \"Warning: Simulation logic is based on a scaffold. Ensure all equations in the 'derivatives' function are fully implemented for accurate results.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"results-section content-card\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"results-heading\",\n            children: [\" \", \"Results\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"info-icon\",\n              title: \"Key simulation outputs based on initial conditions\",\n              children: \"(i)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 29\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"results-items\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-item\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"result-label\",\n                children: \"Projected Yield:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 33\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"result-value\",\n                children: [\" \", isLoading ? '...' : error ? 'Error' : Number.isFinite(finalSimulatedYield) ? `${finalSimulatedYield.toFixed(2)}g` : 'N/A']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-item\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"result-label\",\n                children: \"Initial C:N Ratio:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 33\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"result-value\",\n                children: [\" \", isLoading ? '...' : error ? 'Error' : initialCNRatio.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 9\n  }, this);\n};\n_s(GrowthSimulation, \"H76gT0uXCmr1/wrJmUC7IPBpyxo=\", false, function () {\n  return [useNavigate];\n});\n_c = GrowthSimulation;\nexport default GrowthSimulation;\nvar _c;\n$RefreshReg$(_c, \"GrowthSimulation\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Line","Chart","ChartJS","LineElement","PointElement","Tooltip","Legend","CategoryScale","LinearScale","Title","odeRK4","logoSrc","jsxDEV","_jsxDEV","register","GrowthSimulation","_s","navigate","simulationResults","setSimulationResults","isLoading","setIsLoading","error","setError","batchName","setBatchName","startDate","setStartDate","initialCNRatio","setInitialCNRatio","defaultParams","finalSimulatedYield","setFinalSimulatedYield","activeChartTab","setActiveChartTab","isMounted","setTimeout","savedTemperature","localStorage","getItem","savedPh","savedSubstrateJson","savedDays","savedBatchName","savedStartDate","savedCNRatio","parseFloat","Error","substrateData","JSON","parse","temp","phValue","days","parseInt","initialWeight","Object","values","reduce","sum","val","Number","simulationDuration","isInteger","timeLength","isNaN","simulationInputs","results","runSimulation","length","_results","lastYield","MushroomYield","isFinite","err","console","message","handleBackClick","getChartConfig","data","datasets","options","yieldColor","tempColor","textColor","gridColor","responsive","maintainAspectRatio","plugins","legend","display","labels","color","tooltip","enabled","title","text","font","size","scales","x","type","ticks","stepSize","grid","min","yYield","position","drawOnChartArea","beginAtZero","yTemp","label","map","p","time","y","borderColor","backgroundColor","yAxisID","Temp","ds","tension","pointRadius","spanGaps","chartConfig","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","height","width","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/celst/sds/src/components/GrowthSimulation.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, LineElement, PointElement, Tooltip, Legend, CategoryScale, LinearScale, Title } from 'chart.js';\r\nimport odeRK4 from 'ode-rk4';\r\nimport '../styles/GrowthSimulation.css'; // Import the CSS file\r\nimport logoSrc from '../assets/images/cslogo.png';\r\n\r\n// --- Simulation Logic (Keep outside component - NO CHANGES NEEDED HERE) ---\r\n// ... (linearInterpolate, defaultParams, derivatives, getInitialState, runSimulation) ...\r\n// (Same as before)\r\n\r\n// Register required components for Chart.js\r\nChartJS.register(LineElement, PointElement, Tooltip, Legend, CategoryScale, LinearScale, Title);\r\n\r\n// --- React Component ---\r\nconst GrowthSimulation = () => {\r\n    const navigate = useNavigate();\r\n    const [simulationResults, setSimulationResults] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [batchName, setBatchName] = useState('');\r\n    const [startDate, setStartDate] = useState('');\r\n    const [initialCNRatio, setInitialCNRatio] = useState(defaultParams['Initial C:N Ratio']);\r\n    const [finalSimulatedYield, setFinalSimulatedYield] = useState(null);\r\n    const [activeChartTab, setActiveChartTab] = useState('yield'); // 'yield', 'temp'\r\n\r\n    useEffect(() => {\r\n        // --- useEffect Logic (NO CHANGES NEEDED HERE) ---\r\n        // ... (Same loading and simulation logic as before) ...\r\n        let isMounted = true;\r\n        setIsLoading(true);\r\n        setError(null);\r\n        setFinalSimulatedYield(null);\r\n\r\n        setTimeout(() => {\r\n            if (!isMounted) return;\r\n            try {\r\n                const savedTemperature = localStorage.getItem('temperature');\r\n                const savedPh = localStorage.getItem('ph');\r\n                const savedSubstrateJson = localStorage.getItem('substrate');\r\n                const savedDays = localStorage.getItem('simulationDays');\r\n                const savedBatchName = localStorage.getItem('batchName') || 'N/A';\r\n                const savedStartDate = localStorage.getItem('startDate') || 'N/A';\r\n                const savedCNRatio = localStorage.getItem('initialCNRatio') || defaultParams['Initial C:N Ratio'];\r\n\r\n                setBatchName(savedBatchName);\r\n                setStartDate(savedStartDate);\r\n                setInitialCNRatio(parseFloat(savedCNRatio));\r\n\r\n                if (!savedTemperature || !savedPh || !savedSubstrateJson || !savedDays) {\r\n                    throw new Error(\"Required simulation parameters not found in localStorage.\");\r\n                }\r\n\r\n                const substrateData = JSON.parse(savedSubstrateJson);\r\n                if (typeof substrateData !== 'object' || substrateData === null) {\r\n                       throw new Error(\"Invalid substrate data found in localStorage.\");\r\n                }\r\n\r\n                const temp = parseFloat(savedTemperature);\r\n                const phValue = parseFloat(savedPh);\r\n                const days = parseInt(savedDays, 10);\r\n                const initialWeight = Object.values(substrateData).reduce((sum, val) => sum + (Number(val) || 0), 0);\r\n\r\n                const simulationDuration = (Number.isInteger(days) && days > 0) ? days : defaultParams.timeLength;\r\n\r\n                if (isNaN(temp) || isNaN(phValue) || isNaN(initialWeight)) {\r\n                    throw new Error(\"Invalid numerical parameters loaded from localStorage.\");\r\n                }\r\n\r\n                const simulationInputs = {\r\n                    'External Temp': temp,\r\n                    'pH': phValue,\r\n                    'Initial Dry Substrate Weight': initialWeight > 0 ? initialWeight : defaultParams['Initial Dry Substrate Weight'],\r\n                    'timeLength': simulationDuration,\r\n                    'Initial C:N Ratio': parseFloat(savedCNRatio) || defaultParams['Initial C:N Ratio']\r\n                };\r\n\r\n                const results = runSimulation(simulationInputs);\r\n                if (isMounted) {\r\n                    setSimulationResults(results);\r\n                    if (results && results.length > 0) {\r\n                           const lastYield = results[results.length - 1]?.MushroomYield;\r\n                           if (Number.isFinite(lastYield)) {\r\n                                setFinalSimulatedYield(lastYield);\r\n                           }\r\n                    }\r\n                }\r\n\r\n            } catch (err) {\r\n                console.error(\"Error during simulation setup or run:\", err);\r\n                 if (isMounted) setError(err.message || \"Failed to run simulation.\");\r\n            } finally {\r\n                 if (isMounted) setIsLoading(false);\r\n            }\r\n        }, 50);\r\n\r\n        return () => { isMounted = false; };\r\n    }, []); // Dependency array is empty, runs once on mount\r\n\r\n    const handleBackClick = () => { navigate('/condition-setting'); };\r\n\r\n    // --- Chart Data & Options ---\r\n    // Minor adjustment: Use CSS variables conceptually if possible, or hardcode colors\r\n    const getChartConfig = () => {\r\n        if (!simulationResults || simulationResults.length === 0) {\r\n            return { data: { datasets: [] }, options: {} };\r\n        }\r\n\r\n        // Define colors (could also try to read CSS vars if needed, but hardcoding is simpler here)\r\n        const yieldColor = 'green'; // Matches CSS --chart-yield\r\n        const tempColor = 'red'; // Matches CSS --chart-temp\r\n        const textColor = '#452c0e'; // Matches CSS --brown (or --brand-brown if preferred)\r\n        const gridColor = 'rgba(107, 79, 75, 0.1)'; // Example grid color\r\n\r\n        let datasets = [];\r\n        const options = {\r\n            responsive: true, maintainAspectRatio: false,\r\n            plugins: {\r\n                legend: { display: true, labels: { color: textColor } }, // Use textColor\r\n                tooltip: { enabled: true /* mode: 'index', intersect: false */ },\r\n                title: { display: true, text: '', color: textColor, font: { size: 16 } } // Use textColor\r\n            },\r\n            scales: {\r\n                x: {\r\n                    type: 'linear',\r\n                    title: { display: true, text: 'Time (Days)', color: textColor }, // Use textColor\r\n                    ticks: { stepSize: 5, color: textColor }, // Use textColor\r\n                    grid: { color: gridColor }, // Use gridColor\r\n                    min: 0,\r\n                },\r\n                // Define potential Y axes\r\n                yYield: { type: 'linear', position: 'left', title: { display: true, text: 'Yield (g)', color: yieldColor }, ticks: { color: yieldColor, stepSize: 10 }, grid: { drawOnChartArea: false }, beginAtZero: true, display: false },\r\n                yTemp: { type: 'linear', position: 'left', title: { display: true, text: 'Temperature (°C)', color: tempColor }, ticks: { color: tempColor, stepSize: 2 }, grid: { drawOnChartArea: false }, beginAtZero: false, display: false }\r\n            }\r\n        };\r\n\r\n        switch (activeChartTab) {\r\n            case 'yield':\r\n                options.plugins.title.text = 'Yield Over Time';\r\n                options.scales.yYield.display = true;\r\n                datasets = [{\r\n                    label: 'Mushroom Yield (g)',\r\n                    data: simulationResults.map(p => ({ x: p.time, y: Number.isFinite(p.MushroomYield) ? p.MushroomYield : null })),\r\n                    borderColor: yieldColor, backgroundColor: 'rgba(0, 128, 0, 0.1)', // Corresponding light color\r\n                    yAxisID: 'yYield',\r\n                }];\r\n                break;\r\n            case 'temp':\r\n                 options.plugins.title.text = 'Temperature Over Time';\r\n                 options.scales.yTemp.display = true;\r\n                 datasets = [{\r\n                     label: 'Temperature (°C)',\r\n                     data: simulationResults.map(p => ({ x: p.time, y: Number.isFinite(p.Temp) ? p.Temp : null })),\r\n                     borderColor: tempColor, backgroundColor: 'rgba(255, 0, 0, 0.1)', // Corresponding light color\r\n                     yAxisID: 'yTemp',\r\n                 }];\r\n                 break;\r\n            default:\r\n                datasets = [];\r\n        }\r\n\r\n        return {\r\n             data: { datasets: datasets.map(ds => ({ ...ds, tension: 0.1, pointRadius: 2, spanGaps: true })) },\r\n             options: options\r\n        };\r\n    };\r\n\r\n    const chartConfig = getChartConfig();\r\n\r\n    return (\r\n        <div className=\"growth-simulation\"> {/* Base container class */}\r\n            <div className=\"logobox\">\r\n                <div className=\"logo\">\r\n                    <img src={logoSrc} alt=\"Logo\" />\r\n                </div>\r\n                {/* Optional: Add Back Button Here if needed */}\r\n                {/* <button onClick={handleBackClick} className=\"back-button-style\">Back</button> */}\r\n            </div>\r\n            <div className=\"batch-info\"> {/* Replaced Tailwind classes */}\r\n                <span>Batch: #{batchName}</span>\r\n                <span>Start Date: {startDate}</span>\r\n            </div>\r\n\r\n            {/* Main Content Grid */}\r\n            <main className=\"main-content-grid\"> {/* Replaced Tailwind classes */}\r\n                {/* Left Column: Animation Placeholder */}\r\n                <div className=\"animation-area content-card\"> {/* Replaced Tailwind classes + common card class */}\r\n                    <span className=\"animation-placeholder-text\">Animation Area</span> {/* Replaced Tailwind classes */}\r\n                </div>\r\n\r\n                {/* Right Column: Tabs, Chart, Results */}\r\n                <div className=\"chart-results-column\"> {/* Replaced Tailwind classes */}\r\n                    {/* Tabs */}\r\n                    <div className=\"tabs-container\"> {/* Replaced Tailwind classes */}\r\n                        <button\r\n                            onClick={() => setActiveChartTab('yield')}\r\n                            className={`tab-button ${activeChartTab === 'yield' ? 'tab-button-active' : ''}`} // Conditional active class\r\n                        >\r\n                            Yield over Time\r\n                        </button>\r\n                        <button\r\n                            onClick={() => setActiveChartTab('temp')}\r\n                             className={`tab-button ${activeChartTab === 'temp' ? 'tab-button-active' : ''}`} // Conditional active class\r\n                        >\r\n                            Temperature\r\n                        </button>\r\n                        {/* Removed pH tab button */}\r\n                    </div>\r\n\r\n                    {/* Chart Area */}\r\n                    <div className=\"chart-area\"> {/* Replaced Tailwind classes */}\r\n                        {isLoading && <p className=\"loading-message\">Loading and running simulation...</p>} {/* Replaced Tailwind classes */}\r\n                        {error && <p className=\"error-message\">Error: {error}</p>} {/* Replaced Tailwind classes */}\r\n                        {!isLoading && !error && simulationResults && (\r\n                             chartConfig.data.datasets.length > 0 ? (\r\n                                 <div className=\"chart-container\" style={{ position: 'relative', height: '35vh', width: '100%' }}>\r\n                                     {/* Keep inline style for chart wrapper size/position */}\r\n                                     <Line options={chartConfig.options} data={chartConfig.data} />\r\n                                 </div>\r\n                             ) : (\r\n                                  <p className=\"no-data-message\">No data available for this chart.</p> // Replaced Tailwind\r\n                             )\r\n                        )}\r\n                        {!isLoading && !error && !simulationResults && <p className=\"no-data-message\">No simulation results available.</p>} {/* Replaced Tailwind */}\r\n                        {/* Warning */}\r\n                        <p className=\"warning-message\"> {/* Replaced Tailwind classes */}\r\n                            Warning: Simulation logic is based on a scaffold. Ensure all equations in the 'derivatives' function are fully implemented for accurate results.\r\n                        </p>\r\n                    </div>\r\n\r\n                    {/* Results Section */}\r\n                    <div className=\"results-section content-card\"> {/* Replaced Tailwind classes + common card class */}\r\n                        <h3 className=\"results-heading\"> {/* Replaced Tailwind classes */}\r\n                            Results\r\n                            <span className=\"info-icon\" title=\"Key simulation outputs based on initial conditions\">(i)</span> {/* Replaced Tailwind classes */}\r\n                        </h3>\r\n                        <div className=\"results-items\"> {/* Replaced Tailwind classes */}\r\n                            <div className=\"result-item\"> {/* Replaced Tailwind classes */}\r\n                                <span className=\"result-label\">Projected Yield:</span> {/* Replaced Tailwind classes */}\r\n                                <span className=\"result-value\"> {/* Replaced Tailwind classes */}\r\n                                    {isLoading ? '...' : error ? 'Error' : Number.isFinite(finalSimulatedYield) ? `${finalSimulatedYield.toFixed(2)}g` : 'N/A'}\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"result-item\"> {/* Replaced Tailwind classes */}\r\n                                <span className=\"result-label\">Initial C:N Ratio:</span> {/* Replaced Tailwind classes */}\r\n                                <span className=\"result-value\"> {/* Replaced Tailwind classes */}\r\n                                    {isLoading ? '...' : error ? 'Error' : initialCNRatio.toFixed(2)}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GrowthSimulation;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}