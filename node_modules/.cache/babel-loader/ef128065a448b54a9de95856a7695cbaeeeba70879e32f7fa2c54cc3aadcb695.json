{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\celst\\\\sds\\\\src\\\\components\\\\GrowthSimulation.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react'; // Added useMemo\nimport { useNavigate } from 'react-router-dom';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, LineElement, PointElement, Tooltip, Legend, CategoryScale, LinearScale, Title } from 'chart.js';\nimport odeRK4 from 'ode-rk4';\n\n// Assuming Tailwind CSS is setup globally\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(LineElement, PointElement, Tooltip, Legend, CategoryScale, LinearScale, Title);\n\n// --- Simulation Logic ---\n\nfunction linearInterpolate(data, x) {\n  if (!data || data.length === 0) return 0;\n  if (x <= data[0][0]) return data[0][1];\n  if (x >= data[data.length - 1][0]) return data[data.length - 1][1];\n  let i = 0;\n  while (i < data.length - 1 && x > data[i + 1][0]) i++;\n  const x0 = data[i][0],\n    y0 = data[i][1],\n    x1 = data[i + 1][0],\n    y1 = data[i + 1][1];\n  const divisor = x1 - x0;\n  if (divisor === 0) return y0;\n  const t = (x - x0) / divisor;\n  return y0 + t * (y1 - y0);\n}\nconst defaultParams = {\n  timeStart: 0,\n  timeLength: 100,\n  timeStep: 0.2,\n  'C BD Rate': 1.11,\n  'C Coeff': 0.7,\n  'C Cons. Rate': 76.39,\n  'CO2 Coeff': 0.8,\n  'CO2 Production Rate': 410000,\n  'CO2 Removal Rate': 12.6,\n  'External CO2': 428.23,\n  'External Temp': 24,\n  'Growth Coeff': 5.1,\n  'Initial C:N Ratio': 43.58,\n  'Initial Complex:Simple Ratio': 0.8054,\n  'Initial Dry Substrate Weight': 410.2,\n  'IsMush': 1,\n  'Mushroom Multiplier': 5.17,\n  'N Coeff': 68.4,\n  'N Rate': 13.03,\n  'pH': 6.91,\n  'pH Coeff': 1.4,\n  'Temp Coeff': 1.3,\n  'Temp Production Rate': 405,\n  'Temp Transfer Rate': 1.5,\n  'Effect of CO2 on Mush Growth Data': [[500, 0.9], [800, 1], [1000, 0.8], [1200, 0.25], [1400, 0]],\n  'Effect of CO2 on Myc Growth Data': [[15000, 1], [20000, 0.9], [25000, 0.25], [30000, 0]],\n  'Effect of pH on Mush Growth Data': [[5.5, 0], [6, 0.25], [6.7, 1], [7, 0.6], [7.5, 0]],\n  'Effect of pH on Myc Growth Data': [[5.8, 0], [6, 0.25], [6.7, 1], [7, 0.6], [7.5, 0]],\n  'Effect of Temp on Mush Growth Data': [[10, 0], [15, 5.37], [20, 6.36], [25, 8.63], [30, 6.37], [40, 0]],\n  'Effect of Temp on Myc Growth Data': [[10, 0], [15, 5.37], [20, 6.36], [25, 8.63], [30, 6.37], [35, 5.36], [45, 0]]\n};\n\n// *** DERIVATIVES FUNCTION - ENSURE ALL LOGIC IS IMPLEMENTED ***\nfunction derivatives(dydt, y, t, currentParams) {\n  const [currentCO2, currentComplexC, currentMushroomYield, currentMycelium, currentN, currentSimpleC, currentSpace, currentTemp] = y;\n  const initialDrySubstrateWeight = currentParams['Initial Dry Substrate Weight'] || 1;\n  const cnRatioPlusOne = currentParams['Initial C:N Ratio'] + 1 || 1;\n  const InitC = initialDrySubstrateWeight - initialDrySubstrateWeight / cnRatioPlusOne;\n  const AvailableN = currentN / initialDrySubstrateWeight;\n  const AvailableC = currentSimpleC / initialDrySubstrateWeight;\n  const NEffect = currentParams['N Coeff'] * AvailableN;\n  const CEffect = Math.sqrt(Math.max(0, currentParams['C Coeff'] * AvailableC));\n  const VolumeNormalisation = Math.sqrt(100 / initialDrySubstrateWeight);\n  const Effect_of_CO2_on_Mush_Growth = linearInterpolate(currentParams['Effect of CO2 on Mush Growth Data'], currentCO2);\n  const Effect_of_CO2_on_Myc_Growth = linearInterpolate(currentParams['Effect of CO2 on Myc Growth Data'], currentCO2);\n  const Effect_of_pH_on_Mush_Growth = linearInterpolate(currentParams['Effect of pH on Mush Growth Data'], currentParams['pH']);\n  const Effect_of_pH_on_Myc_Growth = linearInterpolate(currentParams['Effect of pH on Myc Growth Data'], currentParams['pH']);\n  const Effect_of_Temp_on_Mush_Growth = linearInterpolate(currentParams['Effect of Temp on Mush Growth Data'], currentTemp);\n  const Effect_of_Temp_on_Myc_Growth = linearInterpolate(currentParams['Effect of Temp on Myc Growth Data'], currentTemp);\n  const TempEff_ = currentParams['IsMush'] === 0 ? Effect_of_Temp_on_Myc_Growth : Effect_of_Temp_on_Mush_Growth;\n  const TempEffect = currentParams['Temp Coeff'] * TempEff_ / 10;\n  const pHEff_ = currentParams['IsMush'] === 0 ? Effect_of_pH_on_Myc_Growth : Effect_of_pH_on_Mush_Growth;\n  const pHEffect = pHEff_ * currentParams['pH Coeff'];\n  const CO2Eff_ = currentParams['IsMush'] === 0 ? Effect_of_CO2_on_Myc_Growth : Effect_of_CO2_on_Mush_Growth;\n  const CO2Effect = currentParams['CO2 Coeff'] * CO2Eff_;\n  const RawGrowthRate = TempEffect * pHEffect * NEffect * CEffect * CO2Effect;\n  const GrowthOpp = currentSpace * currentMycelium;\n  let GrowthRate = currentParams['IsMush'] === 1 ? RawGrowthRate * currentParams['Growth Coeff'] : RawGrowthRate * GrowthOpp * currentParams['Growth Coeff'];\n  let NormGrowthRate = currentParams['IsMush'] === 1 ? GrowthRate / 100 : GrowthRate;\n  // *** ADD ALL OTHER VARIABLE EQUATIONS FROM YOUR MODEL HERE ***\n  const flow_Breakdown = currentMycelium * currentParams['C BD Rate'] * currentComplexC * RawGrowthRate * VolumeNormalisation;\n  const flow_CCons = NormGrowthRate * currentParams['C Cons. Rate'];\n  const flow_CO2Prod = NormGrowthRate * currentParams['CO2 Production Rate'];\n  const flow_CO2Vent = currentParams['CO2 Removal Rate'] * (currentCO2 - currentParams['External CO2']) * VolumeNormalisation;\n  const flow_Colonisation = currentParams['IsMush'] === 0 ? GrowthRate : 0;\n  const flow_MushroomGrowth = currentParams['IsMush'] === 1 ? GrowthRate * currentParams['Mushroom Multiplier'] : 0;\n  const flow_NCons = NormGrowthRate * currentParams['N Rate'];\n  const flow_TempProd = NormGrowthRate * currentParams['Temp Production Rate'];\n  const flow_TempVent = (currentTemp - currentParams['External Temp']) * currentParams['Temp Transfer Rate'] * VolumeNormalisation;\n  dydt[0] = flow_CO2Prod - flow_CO2Vent;\n  dydt[1] = -flow_Breakdown;\n  dydt[2] = flow_MushroomGrowth;\n  dydt[3] = flow_Colonisation;\n  dydt[4] = -flow_NCons;\n  dydt[5] = flow_Breakdown - flow_CCons;\n  dydt[6] = -flow_Colonisation;\n  dydt[7] = flow_TempProd - flow_TempVent;\n  if (currentCO2 <= 0 && dydt[0] < 0) dydt[0] = 0;\n  if (currentComplexC <= 0 && dydt[1] < 0) dydt[1] = 0;\n  if (currentN <= 0 && dydt[4] < 0) dydt[4] = 0;\n  if (currentSimpleC <= 0 && dydt[5] < 0) dydt[5] = 0;\n  if (currentTemp <= 0 && dydt[7] < 0) dydt[7] = 0;\n  // Add constraint for Space and Mycelium (they represent proportions)\n  if (currentSpace <= 0 && dydt[6] < 0) dydt[6] = 0;\n  if (currentMycelium >= 1 && dydt[3] > 0) dydt[3] = 0; // Cannot exceed 100%\n  if (currentMycelium <= 0 && dydt[3] < 0) dydt[3] = 0; // Cannot be negative\n  // Ensure Space + Mycelium approx = 1 (or handle potential drift)\n  // Simple fix: if Mycelium changes, adjust Space derivative\n  if (dydt[3] !== 0) {\n    dydt[6] = -dydt[3]; // Space change is opposite of Mycelium change\n  }\n}\n\n// Initial State Calculation\nfunction getInitialState(p) {\n  const initialDrySubstrateWeight = Number(p['Initial Dry Substrate Weight']) || 1;\n  const cnRatioPlusOne = (Number(p['Initial C:N Ratio']) || 0) + 1;\n  const complexSimpleRatio = Number(p['Initial Complex:Simple Ratio']) || 0;\n  const Init_C = initialDrySubstrateWeight - initialDrySubstrateWeight / cnRatioPlusOne;\n  const initialMycelium = 0.02; // *** Start with small inoculation (e.g., 2%) ***\n  const initialSpace = 1.0 - initialMycelium; // *** Space is the remaining proportion ***\n  return [Number(p['External CO2']) || 0,\n  // initialCO2\n  Init_C * complexSimpleRatio,\n  // initialComplexC\n  0,\n  // initialMushroomYield\n  initialMycelium,\n  // initialMycelium\n  initialDrySubstrateWeight / cnRatioPlusOne,\n  // initialN\n  Init_C * (1 - complexSimpleRatio),\n  // initialSimpleC\n  initialSpace,\n  // initialSpace\n  Number(p['External Temp']) || 0 // initialTemp\n  ];\n}\n\n// Run Simulation Function\nfunction runSimulation(inputParams) {\n  const currentParams = {\n    ...defaultParams,\n    ...inputParams\n  };\n  const y0 = getInitialState(currentParams);\n  const t0 = currentParams.timeStart;\n  const dt = currentParams.timeStep;\n  const timeLength = Math.max(0, currentParams.timeLength);\n  const positiveDt = Math.max(dt, 1e-6);\n  const numSteps = Math.floor(timeLength / positiveDt);\n  const derivativeFuncForSolver = (dydt, y, t) => {\n    try {\n      derivatives(dydt, y, t, currentParams);\n    } catch (e) {\n      console.error(\"Error in derivatives:\", e);\n      dydt.fill(0);\n    }\n  };\n  const integrator = odeRK4(y0, derivativeFuncForSolver, t0, positiveDt);\n  const results = [{\n    time: integrator.t,\n    state: [...integrator.y]\n  }];\n  console.log(`Starting JS simulation for ${timeLength} days...`);\n  if (numSteps <= 0) {\n    console.warn(\"Simulation length/step results in zero steps.\");\n    return [];\n  }\n  for (let i = 0; i < numSteps; i++) {\n    try {\n      integrator.step();\n      if (integrator.y.some(val => !Number.isFinite(val))) {\n        console.error(\"Simulation unstable at t=\", integrator.t);\n        break;\n      }\n      results.push({\n        time: integrator.t,\n        state: [...integrator.y]\n      });\n    } catch (solverError) {\n      console.error(\"Error during RK4 step:\", solverError);\n      break;\n    }\n  }\n  console.log(\"JS simulation finished.\");\n  return results.map(p => ({\n    time: p.time,\n    CO2: p.state[0],\n    ComplexC: p.state[1],\n    MushroomYield: p.state[2],\n    Mycelium: p.state[3],\n    N: p.state[4],\n    SimpleC: p.state[5],\n    Space: p.state[6],\n    Temp: p.state[7]\n  }));\n}\n\n// --- React Component Definition ---\nconst GrowthSimulation = () => {\n  _s();\n  const navigate = useNavigate();\n  const [simulationResults, setSimulationResults] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [batchName, setBatchName] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [initialCNRatio, setInitialCNRatio] = useState(defaultParams['Initial C:N Ratio']);\n  const [finalSimulatedYield, setFinalSimulatedYield] = useState(null);\n  const [activeChartTab, setActiveChartTab] = useState('yield');\n  const [myceliumThresholdTime, setMyceliumThresholdTime] = useState(0); // Time when Mycelium >= 0.9\n\n  useEffect(() => {\n    let isMounted = true;\n    setIsLoading(true);\n    setError(null);\n    setFinalSimulatedYield(null);\n    setMyceliumThresholdTime(0); // Reset threshold time\n\n    const timerId = setTimeout(() => {\n      if (!isMounted) return;\n      try {\n        const savedTemperature = localStorage.getItem('temperature');\n        const savedPh = localStorage.getItem('ph');\n        const savedSubstrateJson = localStorage.getItem('substrate');\n        const savedDays = localStorage.getItem('simulationDays');\n        const savedBatchName = localStorage.getItem('batchName') || 'YourBatchName';\n        const savedStartDate = localStorage.getItem('startDate') || 'DD/MM/YYYY';\n        const savedCNRatio = localStorage.getItem('initialCNRatio');\n        setBatchName(savedBatchName);\n        setStartDate(savedStartDate);\n        if (!savedTemperature || !savedPh || !savedSubstrateJson || !savedDays) {\n          throw new Error(\"Required simulation parameters not found in localStorage.\");\n        }\n        let substrateData = {};\n        try {\n          substrateData = JSON.parse(savedSubstrateJson);\n          if (typeof substrateData !== 'object' || substrateData === null) throw new Error(\"Invalid substrate data format.\");\n        } catch (parseError) {\n          throw new Error(`Failed to parse substrate data: ${parseError.message}`);\n        }\n        const temp = parseFloat(savedTemperature);\n        const phValue = parseFloat(savedPh);\n        const days = parseInt(savedDays, 10);\n        const cnRatio = savedCNRatio ? parseFloat(savedCNRatio) : defaultParams['Initial C:N Ratio'];\n        const initialWeight = Object.values(substrateData).reduce((sum, val) => sum + (Number(val) || 0), 0);\n        setInitialCNRatio(cnRatio); // Set state for display\n\n        const simulationDuration = Number.isInteger(days) && days > 0 ? days : defaultParams.timeLength;\n        if (isNaN(temp) || isNaN(phValue) || isNaN(initialWeight) || isNaN(cnRatio)) {\n          throw new Error(\"Invalid numerical parameters loaded.\");\n        }\n        const simulationInputs = {\n          'External Temp': temp,\n          'pH': phValue,\n          'Initial Dry Substrate Weight': initialWeight > 0 ? initialWeight : defaultParams['Initial Dry Substrate Weight'],\n          'timeLength': simulationDuration,\n          'Initial C:N Ratio': cnRatio\n        };\n        console.log(\"Running simulation with inputs:\", simulationInputs);\n        const results = runSimulation(simulationInputs);\n        if (isMounted) {\n          setSimulationResults(results);\n\n          // Find Mycelium threshold time\n          let thresholdTime = 0;\n          const myceliumIndex = 3; // Index of Mycelium in state array\n          for (const point of results) {\n            if (point.state[myceliumIndex] >= 0.9) {\n              thresholdTime = point.time;\n              break; // Found the first time it reaches threshold\n            }\n          }\n          setMyceliumThresholdTime(thresholdTime);\n          console.log(`Mycelium reached >= 0.9 at time: ${thresholdTime}`);\n\n          // Extract final yield\n          if (results && results.length > 0) {\n            var _results;\n            const lastYield = (_results = results[results.length - 1]) === null || _results === void 0 ? void 0 : _results.MushroomYield;\n            setFinalSimulatedYield(Number.isFinite(lastYield) ? lastYield : null);\n          } else {\n            setFinalSimulatedYield(null);\n          }\n        }\n      } catch (err) {\n        console.error(\"Error during simulation setup or run:\", err);\n        if (isMounted) setError(err.message || \"An unexpected error occurred.\");\n      } finally {\n        if (isMounted) setIsLoading(false);\n      }\n    }, 50);\n    return () => {\n      isMounted = false;\n      clearTimeout(timerId);\n    };\n  }, []); // Run only once\n\n  const handleBackClick = () => {\n    navigate('/condition-setting');\n  };\n\n  // --- Chart Configuration using useMemo for optimization ---\n  const chartConfig = useMemo(() => {\n    var _filteredResults;\n    // Filter results based on threshold time BEFORE creating chart data\n    const filteredResults = simulationResults ? simulationResults.filter(p => p.time >= myceliumThresholdTime) : [];\n    if (!filteredResults || filteredResults.length === 0) {\n      return {\n        data: {\n          datasets: []\n        },\n        options: {}\n      };\n    }\n    let datasets = [];\n    const textColor = '#6b4f4b';\n    const gridColor = 'rgba(107, 79, 75, 0.1)';\n    const titleColor = '#8B4513';\n    const options = {\n      responsive: true,\n      maintainAspectRatio: false,\n      plugins: {\n        legend: {\n          display: true,\n          labels: {\n            color: textColor\n          }\n        },\n        tooltip: {\n          enabled: true\n        },\n        title: {\n          display: true,\n          text: '',\n          color: titleColor,\n          font: {\n            size: 16,\n            weight: 'bold'\n          }\n        }\n      },\n      scales: {\n        x: {\n          type: 'linear',\n          title: {\n            display: true,\n            text: 'Time (Days)',\n            color: textColor\n          },\n          ticks: {\n            color: textColor\n          },\n          // Auto-calculate ticks based on range\n          grid: {\n            color: gridColor\n          },\n          min: myceliumThresholdTime,\n          // Start x-axis at the threshold time\n          max: (_filteredResults = filteredResults[filteredResults.length - 1]) === null || _filteredResults === void 0 ? void 0 : _filteredResults.time // End at last time point\n        },\n        yYield: {\n          type: 'linear',\n          position: 'left',\n          title: {\n            display: true,\n            text: 'Yield (g)',\n            color: 'green'\n          },\n          ticks: {\n            color: 'green',\n            stepSize: 10\n          },\n          grid: {\n            drawOnChartArea: true,\n            color: gridColor\n          },\n          beginAtZero: true,\n          display: false\n        },\n        yTemp: {\n          type: 'linear',\n          position: 'left',\n          title: {\n            display: true,\n            text: 'Temperature (°C)',\n            color: 'red'\n          },\n          ticks: {\n            color: 'red',\n            stepSize: 2\n          },\n          grid: {\n            drawOnChartArea: false\n          },\n          beginAtZero: false,\n          display: false\n        },\n        yMycelium: {\n          // New axis for Mycelium\n          type: 'linear',\n          position: 'right',\n          // Place on right\n          title: {\n            display: true,\n            text: 'Mycelium (%)',\n            color: 'blue'\n          },\n          ticks: {\n            color: 'blue',\n            stepSize: 10\n          },\n          // Percentage steps\n          grid: {\n            drawOnChartArea: false\n          },\n          // Don't draw grid over chart\n          min: 0,\n          max: 100,\n          // Range 0-100%\n          display: false // Initially hidden\n        }\n      }\n    };\n    switch (activeChartTab) {\n      case 'yield':\n        options.plugins.title.text = 'Yield & Mycelium Over Time';\n        options.scales.yYield.display = true;\n        options.scales.yMycelium.display = true; // Show Mycelium axis too\n        datasets = [{\n          // Yield Dataset\n          label: 'Mushroom Yield (g)',\n          data: filteredResults.map(p => ({\n            x: p.time,\n            y: Number.isFinite(p.MushroomYield) ? p.MushroomYield : null\n          })),\n          borderColor: 'green',\n          backgroundColor: 'rgba(0, 128, 0, 0.1)',\n          yAxisID: 'yYield'\n        }, {\n          // Mycelium Dataset\n          label: 'Mycelium Coverage (%)',\n          data: filteredResults.map(p => ({\n            x: p.time,\n            y: Number.isFinite(p.Mycelium) ? p.Mycelium * 100 : null\n          })),\n          // Scale to %\n          borderColor: 'blue',\n          backgroundColor: 'rgba(0, 0, 255, 0.1)',\n          yAxisID: 'yMycelium' // Assign to the new axis\n        }];\n        break;\n      case 'temp':\n        options.plugins.title.text = 'Temperature Over Time';\n        options.scales.yTemp.display = true;\n        datasets = [{\n          label: 'Temperature (°C)',\n          data: filteredResults.map(p => ({\n            x: p.time,\n            y: Number.isFinite(p.Temp) ? p.Temp : null\n          })),\n          borderColor: 'red',\n          backgroundColor: 'rgba(255, 0, 0, 0.1)',\n          yAxisID: 'yTemp'\n        }];\n        break;\n      default:\n        datasets = [];\n    }\n\n    // Common dataset properties\n    datasets = datasets.map(ds => ({\n      ...ds,\n      tension: 0.1,\n      pointRadius: 1,\n      pointHoverRadius: 4,\n      spanGaps: true\n    }));\n    return {\n      data: {\n        datasets\n      },\n      options\n    };\n    // Recalculate when results or active tab change, or threshold time is set\n  }, [simulationResults, activeChartTab, myceliumThresholdTime]);\n\n  // --- Define Tailwind color classes for consistency ---\n  const bgColor = 'bg-[#f8f6ef]'; // Main page background (Creamy Beige)\n  const boxBgColor = 'bg-[#f5f2e9]'; // Content box background (Lighter Cream)\n  const textColor = 'text-[#6b4f4b]'; // Main text (Brown)\n  const titleColor = 'text-[#8B4513]'; // Logo/Batch text (Darker Brown)\n  const tabActiveBorderColor = 'border-[#8B4513]'; // Active tab underline color\n  const tabInactiveTextColor = 'text-gray-500'; // Inactive tab text color\n  const tabHoverTextColor = 'hover:text-[#8B4513]'; // Tab hover text color\n  const resultValueBg = 'bg-gray-200'; // Background for result value boxes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `growth-simulation min-h-screen ${bgColor} ${textColor} p-4 md:p-8 font-sans`,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"mb-6 md:mb-10\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-start\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `text-lg font-semibold ${titleColor} mb-1`,\n            children: \"CITY SPROUTS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `text-base font-medium ${titleColor} mb-1`,\n            children: [\"Batch: #\", batchName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `text-sm ${textColor}`,\n            children: [\"Start Date: \", startDate]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col items-end\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `bg-[#d4b996] hover:bg-[#c8a980] ${textColor} font-bold py-1 px-3 rounded-lg shadow transition duration-200 mb-2 self-end` // Back button above tabs\n            ,\n            onClick: handleBackClick,\n            children: \"\\u2190 Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-1 border-b border-gray-300\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setActiveChartTab('yield'),\n              className: `py-2 px-4 text-sm font-medium transition duration-200 ${activeChartTab === 'yield' ? `${tabActiveBorderColor} ${titleColor} border-b-2` : `${tabInactiveTextColor} ${tabHoverTextColor} border-b-2 border-transparent`}`,\n              children: \"Yield & Mycelium\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setActiveChartTab('temp'),\n              className: `py-2 px-4 text-sm font-medium transition duration-200 ${activeChartTab === 'temp' ? `${tabActiveBorderColor} ${titleColor} border-b-2` : `${tabInactiveTextColor} ${tabHoverTextColor} border-b-2 border-transparent`}`,\n              children: \"Temperature\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"grid grid-cols-1 md:grid-cols-3 gap-6 md:gap-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `md:col-span-1 ${boxBgColor} p-5 rounded-xl shadow-md border border-gray-200 flex items-center justify-center min-h-[40vh] md:min-h-[60vh]`,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-gray-400 text-lg\",\n          children: \"Animation Area\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"md:col-span-2 space-y-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${boxBgColor} p-4 rounded-lg shadow-md border border-gray-200`,\n          children: [isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-center p-10\",\n            children: \"Loading and running simulation...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 39\n          }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-center p-10 text-red-600\",\n            children: [\"Error: \", error]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 35\n          }, this), !isLoading && !error && simulationResults && (chartConfig.data.datasets.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-container relative h-[35vh] w-full\",\n            children: /*#__PURE__*/_jsxDEV(Line, {\n              options: chartConfig.options,\n              data: chartConfig.data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-center p-10 text-gray-500\",\n            children: \"No data available for this chart.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 35\n          }, this)), !isLoading && !error && !simulationResults && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-center p-10\",\n            children: \"No simulation results available.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 72\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-orange-600 italic text-center mt-3 px-4\",\n            children: \"Warning: Simulation logic may be incomplete. Ensure all equations in the 'derivatives' function are accurate.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${boxBgColor} p-5 rounded-xl shadow-md border border-gray-200`,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: `text-lg font-semibold ${textColor} mb-3 flex items-center`,\n            children: [\"Results \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ml-2 text-xs text-gray-500 cursor-help\",\n              title: \"Key simulation outputs\",\n              children: \"(i)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2 text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium mr-2\",\n                children: \"Projected Yield:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `${resultValueBg} px-3 py-1 rounded text-right min-w-[80px]`,\n                children: isLoading ? '...' : error ? 'Error' : Number.isFinite(finalSimulatedYield) ? `${finalSimulatedYield.toFixed(2)}g` : 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium mr-2\",\n                children: \"Initial C:N Ratio:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `${resultValueBg} px-3 py-1 rounded text-right min-w-[80px]`,\n                children: isLoading ? '...' : error ? 'Error' : initialCNRatio ? initialCNRatio.toFixed(2) : 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 339,\n    columnNumber: 9\n  }, this);\n};\n_s(GrowthSimulation, \"mwNVDmUtbp8mcTxn35AtEpIz9GQ=\", false, function () {\n  return [useNavigate];\n});\n_c = GrowthSimulation;\nexport default GrowthSimulation;\nvar _c;\n$RefreshReg$(_c, \"GrowthSimulation\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useNavigate","Line","Chart","ChartJS","LineElement","PointElement","Tooltip","Legend","CategoryScale","LinearScale","Title","odeRK4","jsxDEV","_jsxDEV","register","linearInterpolate","data","x","length","i","x0","y0","x1","y1","divisor","t","defaultParams","timeStart","timeLength","timeStep","derivatives","dydt","y","currentParams","currentCO2","currentComplexC","currentMushroomYield","currentMycelium","currentN","currentSimpleC","currentSpace","currentTemp","initialDrySubstrateWeight","cnRatioPlusOne","InitC","AvailableN","AvailableC","NEffect","CEffect","Math","sqrt","max","VolumeNormalisation","Effect_of_CO2_on_Mush_Growth","Effect_of_CO2_on_Myc_Growth","Effect_of_pH_on_Mush_Growth","Effect_of_pH_on_Myc_Growth","Effect_of_Temp_on_Mush_Growth","Effect_of_Temp_on_Myc_Growth","TempEff_","TempEffect","pHEff_","pHEffect","CO2Eff_","CO2Effect","RawGrowthRate","GrowthOpp","GrowthRate","NormGrowthRate","flow_Breakdown","flow_CCons","flow_CO2Prod","flow_CO2Vent","flow_Colonisation","flow_MushroomGrowth","flow_NCons","flow_TempProd","flow_TempVent","getInitialState","p","Number","complexSimpleRatio","Init_C","initialMycelium","initialSpace","runSimulation","inputParams","t0","dt","positiveDt","numSteps","floor","derivativeFuncForSolver","e","console","error","fill","integrator","results","time","state","log","warn","step","some","val","isFinite","push","solverError","map","CO2","ComplexC","MushroomYield","Mycelium","N","SimpleC","Space","Temp","GrowthSimulation","_s","navigate","simulationResults","setSimulationResults","isLoading","setIsLoading","setError","batchName","setBatchName","startDate","setStartDate","initialCNRatio","setInitialCNRatio","finalSimulatedYield","setFinalSimulatedYield","activeChartTab","setActiveChartTab","myceliumThresholdTime","setMyceliumThresholdTime","isMounted","timerId","setTimeout","savedTemperature","localStorage","getItem","savedPh","savedSubstrateJson","savedDays","savedBatchName","savedStartDate","savedCNRatio","Error","substrateData","JSON","parse","parseError","message","temp","parseFloat","phValue","days","parseInt","cnRatio","initialWeight","Object","values","reduce","sum","simulationDuration","isInteger","isNaN","simulationInputs","thresholdTime","myceliumIndex","point","_results","lastYield","err","clearTimeout","handleBackClick","chartConfig","_filteredResults","filteredResults","filter","datasets","options","textColor","gridColor","titleColor","responsive","maintainAspectRatio","plugins","legend","display","labels","color","tooltip","enabled","title","text","font","size","weight","scales","type","ticks","grid","min","yYield","position","stepSize","drawOnChartArea","beginAtZero","yTemp","yMycelium","label","borderColor","backgroundColor","yAxisID","ds","tension","pointRadius","pointHoverRadius","spanGaps","bgColor","boxBgColor","tabActiveBorderColor","tabInactiveTextColor","tabHoverTextColor","resultValueBg","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/celst/sds/src/components/GrowthSimulation.jsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react'; // Added useMemo\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, LineElement, PointElement, Tooltip, Legend, CategoryScale, LinearScale, Title } from 'chart.js';\r\nimport odeRK4 from 'ode-rk4';\r\n\r\n// Assuming Tailwind CSS is setup globally\r\n\r\nChartJS.register(LineElement, PointElement, Tooltip, Legend, CategoryScale, LinearScale, Title);\r\n\r\n// --- Simulation Logic ---\r\n\r\nfunction linearInterpolate(data, x) {\r\n    if (!data || data.length === 0) return 0;\r\n    if (x <= data[0][0]) return data[0][1];\r\n    if (x >= data[data.length - 1][0]) return data[data.length - 1][1];\r\n    let i = 0;\r\n    while (i < data.length - 1 && x > data[i + 1][0]) i++;\r\n    const x0 = data[i][0], y0 = data[i][1], x1 = data[i + 1][0], y1 = data[i + 1][1];\r\n    const divisor = (x1 - x0);\r\n    if (divisor === 0) return y0;\r\n    const t = (x - x0) / divisor;\r\n    return y0 + t * (y1 - y0);\r\n}\r\n\r\nconst defaultParams = {\r\n    timeStart: 0, timeLength: 100, timeStep: 0.2,\r\n    'C BD Rate': 1.11, 'C Coeff': 0.7, 'C Cons. Rate': 76.39, 'CO2 Coeff': 0.8,\r\n    'CO2 Production Rate': 410000, 'CO2 Removal Rate': 12.6, 'External CO2': 428.23,\r\n    'External Temp': 24, 'Growth Coeff': 5.1, 'Initial C:N Ratio': 43.58,\r\n    'Initial Complex:Simple Ratio': 0.8054, 'Initial Dry Substrate Weight': 410.2,\r\n    'IsMush': 1, 'Mushroom Multiplier': 5.17, 'N Coeff': 68.4, 'N Rate': 13.03,\r\n    'pH': 6.91, 'pH Coeff': 1.4, 'Temp Coeff': 1.3, 'Temp Production Rate': 405,\r\n    'Temp Transfer Rate': 1.5,\r\n    'Effect of CO2 on Mush Growth Data': [[500, 0.9], [800, 1], [1000, 0.8], [1200, 0.25], [1400, 0]],\r\n    'Effect of CO2 on Myc Growth Data': [[15000, 1], [20000, 0.9], [25000, 0.25], [30000, 0]],\r\n    'Effect of pH on Mush Growth Data': [[5.5, 0], [6, 0.25], [6.7, 1], [7, 0.6], [7.5, 0]],\r\n    'Effect of pH on Myc Growth Data': [[5.8, 0], [6, 0.25], [6.7, 1], [7, 0.6], [7.5, 0]],\r\n    'Effect of Temp on Mush Growth Data': [[10, 0], [15, 5.37], [20, 6.36], [25, 8.63], [30, 6.37], [40, 0]],\r\n    'Effect of Temp on Myc Growth Data': [[10, 0], [15, 5.37], [20, 6.36], [25, 8.63], [30, 6.37], [35, 5.36], [45, 0]],\r\n};\r\n\r\n// *** DERIVATIVES FUNCTION - ENSURE ALL LOGIC IS IMPLEMENTED ***\r\nfunction derivatives(dydt, y, t, currentParams) {\r\n    const [ currentCO2, currentComplexC, currentMushroomYield, currentMycelium, currentN, currentSimpleC, currentSpace, currentTemp ] = y;\r\n    const initialDrySubstrateWeight = currentParams['Initial Dry Substrate Weight'] || 1;\r\n    const cnRatioPlusOne = (currentParams['Initial C:N Ratio'] + 1) || 1;\r\n    const InitC = initialDrySubstrateWeight - (initialDrySubstrateWeight / cnRatioPlusOne);\r\n    const AvailableN = currentN / initialDrySubstrateWeight;\r\n    const AvailableC = currentSimpleC / initialDrySubstrateWeight;\r\n    const NEffect = currentParams['N Coeff'] * AvailableN;\r\n    const CEffect = Math.sqrt(Math.max(0, currentParams['C Coeff'] * AvailableC));\r\n    const VolumeNormalisation = Math.sqrt(100 / initialDrySubstrateWeight);\r\n    const Effect_of_CO2_on_Mush_Growth = linearInterpolate(currentParams['Effect of CO2 on Mush Growth Data'], currentCO2);\r\n    const Effect_of_CO2_on_Myc_Growth = linearInterpolate(currentParams['Effect of CO2 on Myc Growth Data'], currentCO2);\r\n    const Effect_of_pH_on_Mush_Growth = linearInterpolate(currentParams['Effect of pH on Mush Growth Data'], currentParams['pH']);\r\n    const Effect_of_pH_on_Myc_Growth = linearInterpolate(currentParams['Effect of pH on Myc Growth Data'], currentParams['pH']);\r\n    const Effect_of_Temp_on_Mush_Growth = linearInterpolate(currentParams['Effect of Temp on Mush Growth Data'], currentTemp);\r\n    const Effect_of_Temp_on_Myc_Growth = linearInterpolate(currentParams['Effect of Temp on Myc Growth Data'], currentTemp);\r\n    const TempEff_ = currentParams['IsMush'] === 0 ? Effect_of_Temp_on_Myc_Growth : Effect_of_Temp_on_Mush_Growth;\r\n    const TempEffect = (currentParams['Temp Coeff'] * TempEff_) / 10;\r\n    const pHEff_ = currentParams['IsMush'] === 0 ? Effect_of_pH_on_Myc_Growth : Effect_of_pH_on_Mush_Growth;\r\n    const pHEffect = pHEff_ * currentParams['pH Coeff'];\r\n    const CO2Eff_ = currentParams['IsMush'] === 0 ? Effect_of_CO2_on_Myc_Growth : Effect_of_CO2_on_Mush_Growth;\r\n    const CO2Effect = currentParams['CO2 Coeff'] * CO2Eff_;\r\n    const RawGrowthRate = TempEffect * pHEffect * NEffect * CEffect * CO2Effect;\r\n    const GrowthOpp = currentSpace * currentMycelium;\r\n    let GrowthRate = currentParams['IsMush'] === 1 ? (RawGrowthRate * currentParams['Growth Coeff']) : (RawGrowthRate * GrowthOpp * currentParams['Growth Coeff']);\r\n    let NormGrowthRate = currentParams['IsMush'] === 1 ? (GrowthRate / 100) : GrowthRate;\r\n    // *** ADD ALL OTHER VARIABLE EQUATIONS FROM YOUR MODEL HERE ***\r\n    const flow_Breakdown = currentMycelium * currentParams['C BD Rate'] * currentComplexC * RawGrowthRate * VolumeNormalisation;\r\n    const flow_CCons = NormGrowthRate * currentParams['C Cons. Rate'];\r\n    const flow_CO2Prod = NormGrowthRate * currentParams['CO2 Production Rate'];\r\n    const flow_CO2Vent = currentParams['CO2 Removal Rate'] * (currentCO2 - currentParams['External CO2']) * VolumeNormalisation;\r\n    const flow_Colonisation = currentParams['IsMush'] === 0 ? GrowthRate : 0;\r\n    const flow_MushroomGrowth = currentParams['IsMush'] === 1 ? (GrowthRate * currentParams['Mushroom Multiplier']) : 0;\r\n    const flow_NCons = NormGrowthRate * currentParams['N Rate'];\r\n    const flow_TempProd = NormGrowthRate * currentParams['Temp Production Rate'];\r\n    const flow_TempVent = (currentTemp - currentParams['External Temp']) * currentParams['Temp Transfer Rate'] * VolumeNormalisation;\r\n    dydt[0] = flow_CO2Prod - flow_CO2Vent; dydt[1] = -flow_Breakdown; dydt[2] = flow_MushroomGrowth; dydt[3] = flow_Colonisation;\r\n    dydt[4] = -flow_NCons; dydt[5] = flow_Breakdown - flow_CCons; dydt[6] = -flow_Colonisation; dydt[7] = flow_TempProd - flow_TempVent;\r\n    if (currentCO2 <= 0 && dydt[0] < 0) dydt[0] = 0; if (currentComplexC <= 0 && dydt[1] < 0) dydt[1] = 0; if (currentN <= 0 && dydt[4] < 0) dydt[4] = 0;\r\n    if (currentSimpleC <= 0 && dydt[5] < 0) dydt[5] = 0; if (currentTemp <= 0 && dydt[7] < 0) dydt[7] = 0;\r\n    // Add constraint for Space and Mycelium (they represent proportions)\r\n    if (currentSpace <= 0 && dydt[6] < 0) dydt[6] = 0;\r\n    if (currentMycelium >= 1 && dydt[3] > 0) dydt[3] = 0; // Cannot exceed 100%\r\n    if (currentMycelium <= 0 && dydt[3] < 0) dydt[3] = 0; // Cannot be negative\r\n     // Ensure Space + Mycelium approx = 1 (or handle potential drift)\r\n     // Simple fix: if Mycelium changes, adjust Space derivative\r\n     if (dydt[3] !== 0) {\r\n         dydt[6] = -dydt[3]; // Space change is opposite of Mycelium change\r\n     }\r\n\r\n}\r\n\r\n// Initial State Calculation\r\nfunction getInitialState(p) {\r\n    const initialDrySubstrateWeight = Number(p['Initial Dry Substrate Weight']) || 1;\r\n    const cnRatioPlusOne = (Number(p['Initial C:N Ratio']) || 0) + 1;\r\n    const complexSimpleRatio = Number(p['Initial Complex:Simple Ratio']) || 0;\r\n    const Init_C = initialDrySubstrateWeight - (initialDrySubstrateWeight / cnRatioPlusOne);\r\n    const initialMycelium = 0.02; // *** Start with small inoculation (e.g., 2%) ***\r\n    const initialSpace = 1.0 - initialMycelium; // *** Space is the remaining proportion ***\r\n    return [\r\n        Number(p['External CO2']) || 0,        // initialCO2\r\n        Init_C * complexSimpleRatio,            // initialComplexC\r\n        0,                                      // initialMushroomYield\r\n        initialMycelium,                        // initialMycelium\r\n        initialDrySubstrateWeight / cnRatioPlusOne, // initialN\r\n        Init_C * (1 - complexSimpleRatio),      // initialSimpleC\r\n        initialSpace,                           // initialSpace\r\n        Number(p['External Temp']) || 0         // initialTemp\r\n    ];\r\n}\r\n\r\n// Run Simulation Function\r\nfunction runSimulation(inputParams) {\r\n    const currentParams = { ...defaultParams, ...inputParams };\r\n    const y0 = getInitialState(currentParams);\r\n    const t0 = currentParams.timeStart; const dt = currentParams.timeStep; const timeLength = Math.max(0, currentParams.timeLength);\r\n    const positiveDt = Math.max(dt, 1e-6); const numSteps = Math.floor(timeLength / positiveDt);\r\n    const derivativeFuncForSolver = (dydt, y, t) => { try { derivatives(dydt, y, t, currentParams); } catch (e) { console.error(\"Error in derivatives:\", e); dydt.fill(0); } };\r\n    const integrator = odeRK4(y0, derivativeFuncForSolver, t0, positiveDt);\r\n    const results = [{ time: integrator.t, state: [...integrator.y] }];\r\n    console.log(`Starting JS simulation for ${timeLength} days...`);\r\n    if (numSteps <= 0) { console.warn(\"Simulation length/step results in zero steps.\"); return []; }\r\n    for (let i = 0; i < numSteps; i++) {\r\n        try {\r\n            integrator.step();\r\n            if (integrator.y.some(val => !Number.isFinite(val))) { console.error(\"Simulation unstable at t=\", integrator.t); break; }\r\n            results.push({ time: integrator.t, state: [...integrator.y] });\r\n        } catch (solverError) { console.error(\"Error during RK4 step:\", solverError); break; }\r\n    }\r\n    console.log(\"JS simulation finished.\");\r\n    return results.map(p => ({ time: p.time, CO2: p.state[0], ComplexC: p.state[1], MushroomYield: p.state[2], Mycelium: p.state[3], N: p.state[4], SimpleC: p.state[5], Space: p.state[6], Temp: p.state[7] }));\r\n}\r\n\r\n\r\n// --- React Component Definition ---\r\nconst GrowthSimulation = () => {\r\n    const navigate = useNavigate();\r\n    const [simulationResults, setSimulationResults] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [batchName, setBatchName] = useState('');\r\n    const [startDate, setStartDate] = useState('');\r\n    const [initialCNRatio, setInitialCNRatio] = useState(defaultParams['Initial C:N Ratio']);\r\n    const [finalSimulatedYield, setFinalSimulatedYield] = useState(null);\r\n    const [activeChartTab, setActiveChartTab] = useState('yield');\r\n    const [myceliumThresholdTime, setMyceliumThresholdTime] = useState(0); // Time when Mycelium >= 0.9\r\n\r\n    useEffect(() => {\r\n        let isMounted = true;\r\n        setIsLoading(true);\r\n        setError(null);\r\n        setFinalSimulatedYield(null);\r\n        setMyceliumThresholdTime(0); // Reset threshold time\r\n\r\n        const timerId = setTimeout(() => {\r\n            if (!isMounted) return;\r\n            try {\r\n                const savedTemperature = localStorage.getItem('temperature');\r\n                const savedPh = localStorage.getItem('ph');\r\n                const savedSubstrateJson = localStorage.getItem('substrate');\r\n                const savedDays = localStorage.getItem('simulationDays');\r\n                const savedBatchName = localStorage.getItem('batchName') || 'YourBatchName';\r\n                const savedStartDate = localStorage.getItem('startDate') || 'DD/MM/YYYY';\r\n                const savedCNRatio = localStorage.getItem('initialCNRatio');\r\n\r\n                setBatchName(savedBatchName);\r\n                setStartDate(savedStartDate);\r\n\r\n                if (!savedTemperature || !savedPh || !savedSubstrateJson || !savedDays) {\r\n                    throw new Error(\"Required simulation parameters not found in localStorage.\");\r\n                }\r\n\r\n                let substrateData = {};\r\n                try {\r\n                    substrateData = JSON.parse(savedSubstrateJson);\r\n                    if (typeof substrateData !== 'object' || substrateData === null) throw new Error(\"Invalid substrate data format.\");\r\n                } catch (parseError) {\r\n                    throw new Error(`Failed to parse substrate data: ${parseError.message}`);\r\n                }\r\n\r\n                const temp = parseFloat(savedTemperature);\r\n                const phValue = parseFloat(savedPh);\r\n                const days = parseInt(savedDays, 10);\r\n                const cnRatio = savedCNRatio ? parseFloat(savedCNRatio) : defaultParams['Initial C:N Ratio'];\r\n                const initialWeight = Object.values(substrateData).reduce((sum, val) => sum + (Number(val) || 0), 0);\r\n                setInitialCNRatio(cnRatio); // Set state for display\r\n\r\n                const simulationDuration = (Number.isInteger(days) && days > 0) ? days : defaultParams.timeLength;\r\n\r\n                if (isNaN(temp) || isNaN(phValue) || isNaN(initialWeight) || isNaN(cnRatio)) {\r\n                    throw new Error(\"Invalid numerical parameters loaded.\");\r\n                }\r\n\r\n                const simulationInputs = {\r\n                    'External Temp': temp, 'pH': phValue,\r\n                    'Initial Dry Substrate Weight': initialWeight > 0 ? initialWeight : defaultParams['Initial Dry Substrate Weight'],\r\n                    'timeLength': simulationDuration, 'Initial C:N Ratio': cnRatio\r\n                };\r\n\r\n                console.log(\"Running simulation with inputs:\", simulationInputs);\r\n                const results = runSimulation(simulationInputs);\r\n\r\n                if (isMounted) {\r\n                    setSimulationResults(results);\r\n\r\n                    // Find Mycelium threshold time\r\n                    let thresholdTime = 0;\r\n                    const myceliumIndex = 3; // Index of Mycelium in state array\r\n                    for(const point of results) {\r\n                        if (point.state[myceliumIndex] >= 0.9) {\r\n                            thresholdTime = point.time;\r\n                            break; // Found the first time it reaches threshold\r\n                        }\r\n                    }\r\n                    setMyceliumThresholdTime(thresholdTime);\r\n                    console.log(`Mycelium reached >= 0.9 at time: ${thresholdTime}`);\r\n\r\n                    // Extract final yield\r\n                    if (results && results.length > 0) {\r\n                         const lastYield = results[results.length - 1]?.MushroomYield;\r\n                         setFinalSimulatedYield(Number.isFinite(lastYield) ? lastYield : null);\r\n                    } else {\r\n                         setFinalSimulatedYield(null);\r\n                    }\r\n                }\r\n\r\n            } catch (err) {\r\n                console.error(\"Error during simulation setup or run:\", err);\r\n                 if (isMounted) setError(err.message || \"An unexpected error occurred.\");\r\n            } finally {\r\n                 if (isMounted) setIsLoading(false);\r\n            }\r\n        }, 50);\r\n\r\n        return () => { isMounted = false; clearTimeout(timerId); };\r\n    }, []); // Run only once\r\n\r\n    const handleBackClick = () => { navigate('/condition-setting'); };\r\n\r\n    // --- Chart Configuration using useMemo for optimization ---\r\n    const chartConfig = useMemo(() => {\r\n        // Filter results based on threshold time BEFORE creating chart data\r\n        const filteredResults = simulationResults\r\n            ? simulationResults.filter(p => p.time >= myceliumThresholdTime)\r\n            : [];\r\n\r\n        if (!filteredResults || filteredResults.length === 0) {\r\n            return { data: { datasets: [] }, options: {} };\r\n        }\r\n\r\n        let datasets = [];\r\n        const textColor = '#6b4f4b'; const gridColor = 'rgba(107, 79, 75, 0.1)'; const titleColor = '#8B4513';\r\n\r\n        const options = {\r\n            responsive: true, maintainAspectRatio: false,\r\n            plugins: {\r\n                legend: { display: true, labels: { color: textColor } },\r\n                tooltip: { enabled: true },\r\n                title: { display: true, text: '', color: titleColor, font: { size: 16, weight: 'bold' } }\r\n            },\r\n            scales: {\r\n                x: {\r\n                    type: 'linear',\r\n                    title: { display: true, text: 'Time (Days)', color: textColor },\r\n                    ticks: { color: textColor }, // Auto-calculate ticks based on range\r\n                    grid: { color: gridColor },\r\n                    min: myceliumThresholdTime, // Start x-axis at the threshold time\r\n                    max: filteredResults[filteredResults.length - 1]?.time // End at last time point\r\n                },\r\n                yYield: { type: 'linear', position: 'left', title: { display: true, text: 'Yield (g)', color: 'green' }, ticks: { color: 'green', stepSize: 10 }, grid: { drawOnChartArea: true, color: gridColor }, beginAtZero: true, display: false },\r\n                yTemp: { type: 'linear', position: 'left', title: { display: true, text: 'Temperature (°C)', color: 'red' }, ticks: { color: 'red', stepSize: 2 }, grid: { drawOnChartArea: false }, beginAtZero: false, display: false },\r\n                yMycelium: { // New axis for Mycelium\r\n                    type: 'linear', position: 'right', // Place on right\r\n                    title: { display: true, text: 'Mycelium (%)', color: 'blue' },\r\n                    ticks: { color: 'blue', stepSize: 10 }, // Percentage steps\r\n                    grid: { drawOnChartArea: false }, // Don't draw grid over chart\r\n                    min: 0, max: 100, // Range 0-100%\r\n                    display: false // Initially hidden\r\n                }\r\n            }\r\n        };\r\n\r\n        switch (activeChartTab) {\r\n            case 'yield':\r\n                options.plugins.title.text = 'Yield & Mycelium Over Time';\r\n                options.scales.yYield.display = true;\r\n                options.scales.yMycelium.display = true; // Show Mycelium axis too\r\n                datasets = [\r\n                    { // Yield Dataset\r\n                        label: 'Mushroom Yield (g)',\r\n                        data: filteredResults.map(p => ({ x: p.time, y: Number.isFinite(p.MushroomYield) ? p.MushroomYield : null })),\r\n                        borderColor: 'green', backgroundColor: 'rgba(0, 128, 0, 0.1)',\r\n                        yAxisID: 'yYield',\r\n                    },\r\n                    { // Mycelium Dataset\r\n                        label: 'Mycelium Coverage (%)',\r\n                        data: filteredResults.map(p => ({ x: p.time, y: Number.isFinite(p.Mycelium) ? p.Mycelium * 100 : null })), // Scale to %\r\n                        borderColor: 'blue', backgroundColor: 'rgba(0, 0, 255, 0.1)',\r\n                        yAxisID: 'yMycelium', // Assign to the new axis\r\n                    }\r\n                ];\r\n                break;\r\n            case 'temp':\r\n                 options.plugins.title.text = 'Temperature Over Time';\r\n                 options.scales.yTemp.display = true;\r\n                 datasets = [{\r\n                    label: 'Temperature (°C)',\r\n                    data: filteredResults.map(p => ({ x: p.time, y: Number.isFinite(p.Temp) ? p.Temp : null })),\r\n                    borderColor: 'red', backgroundColor: 'rgba(255, 0, 0, 0.1)',\r\n                    yAxisID: 'yTemp',\r\n                 }];\r\n                break;\r\n            default: datasets = [];\r\n        }\r\n\r\n        // Common dataset properties\r\n        datasets = datasets.map(ds => ({ ...ds, tension: 0.1, pointRadius: 1, pointHoverRadius: 4, spanGaps: true }));\r\n\r\n        return { data: { datasets }, options };\r\n    // Recalculate when results or active tab change, or threshold time is set\r\n    }, [simulationResults, activeChartTab, myceliumThresholdTime]);\r\n\r\n\r\n    // --- Define Tailwind color classes for consistency ---\r\n    const bgColor = 'bg-[#f8f6ef]'; // Main page background (Creamy Beige)\r\n    const boxBgColor = 'bg-[#f5f2e9]'; // Content box background (Lighter Cream)\r\n    const textColor = 'text-[#6b4f4b]'; // Main text (Brown)\r\n    const titleColor = 'text-[#8B4513]'; // Logo/Batch text (Darker Brown)\r\n    const tabActiveBorderColor = 'border-[#8B4513]'; // Active tab underline color\r\n    const tabInactiveTextColor = 'text-gray-500'; // Inactive tab text color\r\n    const tabHoverTextColor = 'hover:text-[#8B4513]'; // Tab hover text color\r\n    const resultValueBg = 'bg-gray-200'; // Background for result value boxes\r\n\r\n    return (\r\n        <div className={`growth-simulation min-h-screen ${bgColor} ${textColor} p-4 md:p-8 font-sans`}>\r\n            <header className=\"mb-6 md:mb-10\">\r\n                 <div className=\"flex justify-between items-start\">\r\n                     <div>\r\n                         <div className={`text-lg font-semibold ${titleColor} mb-1`}>CITY SPROUTS</div>\r\n                         <div className={`text-base font-medium ${titleColor} mb-1`}>Batch: #{batchName}</div>\r\n                         <div className={`text-sm ${textColor}`}>Start Date: {startDate}</div>\r\n                     </div>\r\n                     {/* Tabs Moved Here */}\r\n                     <div className=\"flex flex-col items-end\"> {/* Align tabs to the right */}\r\n                        <button\r\n                            className={`bg-[#d4b996] hover:bg-[#c8a980] ${textColor} font-bold py-1 px-3 rounded-lg shadow transition duration-200 mb-2 self-end`} // Back button above tabs\r\n                            onClick={handleBackClick}\r\n                         >← Back</button>\r\n                        <div className=\"flex space-x-1 border-b border-gray-300\">\r\n                            <button onClick={() => setActiveChartTab('yield')} className={`py-2 px-4 text-sm font-medium transition duration-200 ${ activeChartTab === 'yield' ? `${tabActiveBorderColor} ${titleColor} border-b-2` : `${tabInactiveTextColor} ${tabHoverTextColor} border-b-2 border-transparent` }`}>Yield & Mycelium</button>\r\n                            <button onClick={() => setActiveChartTab('temp')} className={`py-2 px-4 text-sm font-medium transition duration-200 ${ activeChartTab === 'temp' ? `${tabActiveBorderColor} ${titleColor} border-b-2` : `${tabInactiveTextColor} ${tabHoverTextColor} border-b-2 border-transparent` }`}>Temperature</button>\r\n                        </div>\r\n                     </div>\r\n                 </div>\r\n            </header>\r\n\r\n            <main className=\"grid grid-cols-1 md:grid-cols-3 gap-6 md:gap-8\">\r\n                {/* Left Column: Animation Placeholder */}\r\n                <div className={`md:col-span-1 ${boxBgColor} p-5 rounded-xl shadow-md border border-gray-200 flex items-center justify-center min-h-[40vh] md:min-h-[60vh]`}>\r\n                    <span className=\"text-gray-400 text-lg\">Animation Area</span>\r\n                </div>\r\n\r\n                {/* Right Column: Chart & Results */}\r\n                <div className=\"md:col-span-2 space-y-6\">\r\n                    {/* Chart Area */}\r\n                    <div className={`${boxBgColor} p-4 rounded-lg shadow-md border border-gray-200`}>\r\n                        {isLoading && <p className=\"text-center p-10\">Loading and running simulation...</p>}\r\n                        {error && <p className=\"text-center p-10 text-red-600\">Error: {error}</p>}\r\n                        {!isLoading && !error && simulationResults && (\r\n                             chartConfig.data.datasets.length > 0 ? (\r\n                                <div className=\"chart-container relative h-[35vh] w-full\">\r\n                                    <Line options={chartConfig.options} data={chartConfig.data} />\r\n                                </div>\r\n                            ) : ( <p className=\"text-center p-10 text-gray-500\">No data available for this chart.</p> )\r\n                        )}\r\n                        {!isLoading && !error && !simulationResults && <p className=\"text-center p-10\">No simulation results available.</p>}\r\n                        <p className=\"text-xs text-orange-600 italic text-center mt-3 px-4\">\r\n                            Warning: Simulation logic may be incomplete. Ensure all equations in the 'derivatives' function are accurate.\r\n                        </p>\r\n                    </div>\r\n\r\n                    {/* Results Section */}\r\n                    <div className={`${boxBgColor} p-5 rounded-xl shadow-md border border-gray-200`}>\r\n                        <h3 className={`text-lg font-semibold ${textColor} mb-3 flex items-center`}>\r\n                            Results <span className=\"ml-2 text-xs text-gray-500 cursor-help\" title=\"Key simulation outputs\">(i)</span>\r\n                        </h3>\r\n                        <div className=\"space-y-2 text-sm\">\r\n                            <div className=\"flex justify-between items-center\">\r\n                                <span className=\"font-medium mr-2\">Projected Yield:</span>\r\n                                <span className={`${resultValueBg} px-3 py-1 rounded text-right min-w-[80px]`}>\r\n                                    {isLoading ? '...' : error ? 'Error' : Number.isFinite(finalSimulatedYield) ? `${finalSimulatedYield.toFixed(2)}g` : 'N/A'}\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"flex justify-between items-center\">\r\n                                <span className=\"font-medium mr-2\">Initial C:N Ratio:</span>\r\n                                <span className={`${resultValueBg} px-3 py-1 rounded text-right min-w-[80px]`}>\r\n                                    {isLoading ? '...' : error ? 'Error' : initialCNRatio ? initialCNRatio.toFixed(2) : 'N/A'}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GrowthSimulation;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}