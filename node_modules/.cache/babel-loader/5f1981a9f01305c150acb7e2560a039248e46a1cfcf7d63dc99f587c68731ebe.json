{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\celst\\\\sds\\\\src\\\\components\\\\ConditionSetting.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Pie } from 'react-chartjs-2';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/ConditionSetting.css'; // Ensure CSS matches this structure\nimport logoSrc from '../assets/images/cslogo.png';\n\n// Register required chart components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\n\n// Define CONSISTENT keys for localStorage\nconst LOCAL_STORAGE_KEYS = {\n  TEMPERATURE: 'sim_temperature',\n  // Consistent key\n  PH: 'sim_ph',\n  // Consistent key\n  SUBSTRATE: 'sim_substrate',\n  // Consistent key for the substrate object\n  SIMULATION_DAYS: 'sim_duration',\n  // Consistent key\n  BATCH_NAME: 'sim_batch_name',\n  // Consistent key\n  START_DATE: 'sim_start_date' // Consistent key\n};\n\n// Default values (using original structure)\nconst DEFAULTS = {\n  TEMPERATURE: 25,\n  PH: 7.0,\n  // Or adjust as needed, e.g., 6.9\n  SUBSTRATE: {\n    riceBran: 25,\n    corn: 25,\n    sugarcane: 25,\n    sawdust: 25\n  },\n  SIMULATION_DAYS: 40,\n  BATCH_NAME: '',\n  START_DATE: ''\n};\nconst ConditionSetting = () => {\n  _s();\n  const navigate = useNavigate();\n\n  // --- State Variables ---\n  // Initialize state using a function that checks localStorage first, using CONSISTENT keys\n  const [temperature, setTemperature] = useState(() => {\n    const saved = localStorage.getItem(LOCAL_STORAGE_KEYS.TEMPERATURE);\n    return saved !== null ? parseInt(saved, 10) : DEFAULTS.TEMPERATURE;\n  });\n  const [ph, setPh] = useState(() => {\n    const saved = localStorage.getItem(LOCAL_STORAGE_KEYS.PH);\n    return saved !== null ? parseFloat(saved) : DEFAULTS.PH;\n  });\n  const [substrate, setSubstrate] = useState(() => {\n    const saved = localStorage.getItem(LOCAL_STORAGE_KEYS.SUBSTRATE); // Use consistent key\n    if (saved) {\n      try {\n        const parsed = JSON.parse(saved);\n        if (typeof parsed === 'object' && parsed !== null && 'riceBran' in parsed) {\n          // Basic validation\n          return parsed;\n        }\n      } catch (e) {\n        console.error(\"Failed to parse substrate from localStorage\", e);\n      }\n    }\n    return DEFAULTS.SUBSTRATE; // Fallback\n  });\n  const [simulationDays, setSimulationDays] = useState(() => {\n    const saved = localStorage.getItem(LOCAL_STORAGE_KEYS.SIMULATION_DAYS); // Use consistent key\n    return saved !== null ? parseInt(saved, 10) : DEFAULTS.SIMULATION_DAYS;\n  });\n  const [batchName, setBatchName] = useState(() => {\n    const saved = localStorage.getItem(LOCAL_STORAGE_KEYS.BATCH_NAME); // Use consistent key\n    return saved !== null ? saved : DEFAULTS.BATCH_NAME;\n  });\n  const [startDate, setStartDate] = useState(() => {\n    const saved = localStorage.getItem(LOCAL_STORAGE_KEYS.START_DATE); // Use consistent key\n    return saved !== null ? saved : DEFAULTS.START_DATE;\n  });\n  const [totalSubstrate, setTotalSubstrate] = useState(0);\n\n  // --- Labels --- (Keep as is)\n  const substrateLabels = {/* ... */};\n  substrateLabels.riceBran = 'Rice Bran';\n  substrateLabels.corn = 'Corn Cob';\n  substrateLabels.sugarcane = 'Sugarcane';\n  substrateLabels.sawdust = 'Sawdust';\n\n  // --- Effects ---\n  // Effect to calculate total substrate (Keep as is)\n  useEffect(() => {\n    const total = Object.values(substrate).reduce((sum, weight) => sum + (Number(weight) || 0), 0);\n    setTotalSubstrate(total);\n  }, [substrate]);\n\n  // --- Effects to save state to localStorage --- (Use consistent keys)\n  useEffect(() => {\n    if (temperature !== '' && !isNaN(temperature)) {\n      localStorage.setItem(LOCAL_STORAGE_KEYS.TEMPERATURE, temperature.toString());\n    }\n  }, [temperature]);\n  useEffect(() => {\n    if (ph !== '' && !isNaN(ph)) {\n      localStorage.setItem(LOCAL_STORAGE_KEYS.PH, ph.toString());\n    }\n  }, [ph]);\n  useEffect(() => {\n    // Save substrate object with the consistent key\n    localStorage.setItem(LOCAL_STORAGE_KEYS.SUBSTRATE, JSON.stringify(substrate));\n  }, [substrate]);\n  useEffect(() => {\n    if (simulationDays !== '' && !isNaN(simulationDays)) {\n      localStorage.setItem(LOCAL_STORAGE_KEYS.SIMULATION_DAYS, simulationDays.toString());\n    }\n  }, [simulationDays]);\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEYS.BATCH_NAME, batchName);\n  }, [batchName]);\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEYS.START_DATE, startDate);\n  }, [startDate]);\n\n  // --- Event Handlers --- (Keep as is, they use state setters which trigger useEffects)\n  const handleStartClick = () => {\n    console.log('Saving simulation inputs:', {\n      temperature,\n      ph,\n      substrate,\n      // Save the whole object\n      simulationDays,\n      batchName,\n      startDate\n    });\n    navigate('/growth-simulation');\n  };\n  const handleBackClick = () => {/* ... */};\n  handleBackClick.navigate = () => navigate('/');\n  const handleNumberChange = (setter, min, max, value, allowFloat = false) => {/* ... */};\n  handleNumberChange.setter = (setter, min, max, value, allowFloat = false) => {\n    const numericValue = allowFloat ? parseFloat(value) : parseInt(value, 10);\n    if (value === '') {\n      setter('');\n      return;\n    }\n    if (isNaN(numericValue)) {\n      return;\n    }\n    const clampedValue = Math.max(min, Math.min(max, numericValue));\n    setter(clampedValue);\n  };\n  const handleSubstrateChange = (key, value) => {/* ... */};\n  handleSubstrateChange.setSubstrate = (key, value) => {\n    const numericValue = parseInt(value, 10);\n    if (value === '') {\n      setSubstrate(prev => ({\n        ...prev,\n        [key]: ''\n      }));\n    } else if (isNaN(numericValue) || numericValue < 0) {\n      setSubstrate(prev => ({\n        ...prev,\n        [key]: prev[key] === '' ? 0 : prev[key] || 0\n      }));\n    } else {\n      setSubstrate(prev => ({\n        ...prev,\n        [key]: numericValue\n      }));\n    }\n  };\n  const handleDaysChange = e => {/* ... */};\n  handleDaysChange.setSimulationDays = e => {\n    const value = e.target.value;\n    const min = 1;\n    const max = 365;\n    if (value === '') {\n      setSimulationDays('');\n      return;\n    }\n    const numericValue = parseInt(value, 10);\n    if (isNaN(numericValue)) {\n      return;\n    }\n    if (numericValue < min) {\n      setSimulationDays(min);\n    } else if (numericValue > max) {\n      setSimulationDays(max);\n    } else {\n      setSimulationDays(numericValue);\n    }\n  };\n\n  // --- Chart Configuration --- (Keep as is)\n  const pieOptions = {/* ... */};\n  pieOptions.responsive = true;\n  pieOptions.maintainAspectRatio = false;\n  pieOptions.plugins = {\n    legend: {\n      position: 'bottom',\n      labels: {\n        color: '#6b4f4b',\n        font: {\n          size: 12,\n          family: \"'Lexend', sans-serif\"\n        },\n        boxWidth: 15,\n        padding: 15\n      }\n    },\n    tooltip: {\n      bodyFont: {\n        family: \"'Lexend', sans-serif\"\n      },\n      titleFont: {\n        family: \"'Lexend', sans-serif\"\n      }\n    }\n  };\n  const pieData = {/* ... */};\n  pieData.labels = Object.keys(substrate).map(key => substrateLabels[key]);\n  pieData.datasets = [{\n    data: totalSubstrate > 0 ? Object.values(substrate).map(v => Number(v) || 0) : [1],\n    backgroundColor: totalSubstrate > 0 ? ['#f3f2a4', '#c5e99b', '#452c0e', '#f0a008'] : ['#d3d3d3'],\n    borderColor: '#f5f2e9',\n    borderWidth: totalSubstrate > 0 ? 2 : 0\n  }];\n\n  // --- JSX --- (Keep your original JSX structure for this component)\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"condition-setting\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logobox\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBackClick,\n        className: \"back-button\",\n        title: \"Back to Home\",\n        children: \"\\u2190\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logoSrc,\n          alt: \"Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"condition-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Set Your Growing Conditions!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"condition-main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Environmental Conditions\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"info-icon\",\n              title: \"Set temperature (20-40\\xB0C) and pH (5.5-7.5) for growth\",\n              children: \"(i)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"temperature\",\n              children: \"Temperature (\\xB0C):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 32\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"temperature\",\n              type: \"number\",\n              min: \"20\",\n              max: \"40\",\n              step: \"1\",\n              value: temperature,\n              onChange: e => handleNumberChange(setTemperature, 20, 40, e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"ph\",\n              children: \"pH:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"ph\",\n              type: \"number\",\n              min: \"5.5\",\n              max: \"7.5\",\n              step: \"0.1\",\n              value: ph,\n              onChange: e => handleNumberChange(setPh, 5.5, 7.5, e.target.value, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Substrate Composition\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"info-icon\",\n              title: \"Enter weight in grams for each component\",\n              children: \"(i)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 27\n          }, this), Object.keys(substrate).map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `substrate-${key}`,\n              children: [substrateLabels[key], \" (g):\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 35\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: `substrate-${key}`,\n              type: \"number\",\n              min: \"0\",\n              value: substrate[key],\n              onChange: e => handleSubstrateChange(key, e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 35\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 31\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"total-substrate\",\n            children: [\"Total: \", totalSubstrate, \"g\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-column\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Your Substrate Composition\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pie-chart-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pie-chart\",\n              children: totalSubstrate > 0 ? /*#__PURE__*/_jsxDEV(Pie, {\n                data: pieData,\n                options: pieOptions\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 39\n              }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"pie-chart-placeholder\",\n                children: \"Enter substrate values to see chart.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 39\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"additional-inputs\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"batchName\",\n                children: \"Batch Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 36\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"batchName\",\n                type: \"text\",\n                value: batchName,\n                onChange: e => setBatchName(e.target.value),\n                placeholder: \"e.g., Spring Batch 1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 36\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 32\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"startDate\",\n                children: \"Start Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 36\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"startDate\",\n                type: \"date\",\n                value: startDate,\n                onChange: e => setStartDate(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 36\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 32\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group span-cols-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"simulationDays\",\n                children: \"Cultivation Duration (Days):\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 36\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"simulationDays\",\n                type: \"number\",\n                min: \"1\",\n                max: \"365\",\n                step: \"1\",\n                value: simulationDays,\n                onChange: handleDaysChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 36\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"footer-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"start1-button\",\n        onClick: handleStartClick,\n        children: \"Start Growing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 236,\n    columnNumber: 9\n  }, this);\n};\n_s(ConditionSetting, \"H+xHYVy1FIYqaqnFL+Iw0TuSb1U=\", false, function () {\n  return [useNavigate];\n});\n_c = ConditionSetting;\nexport default ConditionSetting;\nvar _c;\n$RefreshReg$(_c, \"ConditionSetting\");","map":{"version":3,"names":["React","useState","useEffect","Pie","Chart","ChartJS","ArcElement","Tooltip","Legend","useNavigate","logoSrc","jsxDEV","_jsxDEV","register","LOCAL_STORAGE_KEYS","TEMPERATURE","PH","SUBSTRATE","SIMULATION_DAYS","BATCH_NAME","START_DATE","DEFAULTS","riceBran","corn","sugarcane","sawdust","ConditionSetting","_s","navigate","temperature","setTemperature","saved","localStorage","getItem","parseInt","ph","setPh","parseFloat","substrate","setSubstrate","parsed","JSON","parse","e","console","error","simulationDays","setSimulationDays","batchName","setBatchName","startDate","setStartDate","totalSubstrate","setTotalSubstrate","substrateLabels","total","Object","values","reduce","sum","weight","Number","isNaN","setItem","toString","stringify","handleStartClick","log","handleBackClick","handleNumberChange","setter","min","max","value","allowFloat","numericValue","clampedValue","Math","handleSubstrateChange","key","prev","handleDaysChange","target","pieOptions","responsive","maintainAspectRatio","plugins","legend","position","labels","color","font","size","family","boxWidth","padding","tooltip","bodyFont","titleFont","pieData","keys","map","datasets","data","v","backgroundColor","borderColor","borderWidth","className","children","onClick","title","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","htmlFor","id","type","step","onChange","options","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/celst/sds/src/components/ConditionSetting.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../styles/ConditionSetting.css'; // Ensure CSS matches this structure\r\nimport logoSrc from '../assets/images/cslogo.png';\r\n\r\n// Register required chart components\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\n// Define CONSISTENT keys for localStorage\r\nconst LOCAL_STORAGE_KEYS = {\r\n    TEMPERATURE: 'sim_temperature', // Consistent key\r\n    PH: 'sim_ph',                   // Consistent key\r\n    SUBSTRATE: 'sim_substrate',         // Consistent key for the substrate object\r\n    SIMULATION_DAYS: 'sim_duration',    // Consistent key\r\n    BATCH_NAME: 'sim_batch_name',       // Consistent key\r\n    START_DATE: 'sim_start_date',       // Consistent key\r\n};\r\n\r\n// Default values (using original structure)\r\nconst DEFAULTS = {\r\n    TEMPERATURE: 25,\r\n    PH: 7.0, // Or adjust as needed, e.g., 6.9\r\n    SUBSTRATE: { riceBran: 25, corn: 25, sugarcane: 25, sawdust: 25 },\r\n    SIMULATION_DAYS: 40,\r\n    BATCH_NAME: '',\r\n    START_DATE: '',\r\n};\r\n\r\n\r\nconst ConditionSetting = () => {\r\n    const navigate = useNavigate();\r\n\r\n    // --- State Variables ---\r\n    // Initialize state using a function that checks localStorage first, using CONSISTENT keys\r\n    const [temperature, setTemperature] = useState(() => {\r\n        const saved = localStorage.getItem(LOCAL_STORAGE_KEYS.TEMPERATURE);\r\n        return saved !== null ? parseInt(saved, 10) : DEFAULTS.TEMPERATURE;\r\n    });\r\n\r\n    const [ph, setPh] = useState(() => {\r\n        const saved = localStorage.getItem(LOCAL_STORAGE_KEYS.PH);\r\n        return saved !== null ? parseFloat(saved) : DEFAULTS.PH;\r\n    });\r\n\r\n    const [substrate, setSubstrate] = useState(() => {\r\n        const saved = localStorage.getItem(LOCAL_STORAGE_KEYS.SUBSTRATE); // Use consistent key\r\n        if (saved) {\r\n            try {\r\n                const parsed = JSON.parse(saved);\r\n                if (typeof parsed === 'object' && parsed !== null && 'riceBran' in parsed) { // Basic validation\r\n                    return parsed;\r\n                }\r\n            } catch (e) {\r\n                console.error(\"Failed to parse substrate from localStorage\", e);\r\n            }\r\n        }\r\n        return DEFAULTS.SUBSTRATE; // Fallback\r\n    });\r\n\r\n    const [simulationDays, setSimulationDays] = useState(() => {\r\n        const saved = localStorage.getItem(LOCAL_STORAGE_KEYS.SIMULATION_DAYS); // Use consistent key\r\n        return saved !== null ? parseInt(saved, 10) : DEFAULTS.SIMULATION_DAYS;\r\n    });\r\n\r\n    const [batchName, setBatchName] = useState(() => {\r\n        const saved = localStorage.getItem(LOCAL_STORAGE_KEYS.BATCH_NAME); // Use consistent key\r\n        return saved !== null ? saved : DEFAULTS.BATCH_NAME;\r\n    });\r\n\r\n    const [startDate, setStartDate] = useState(() => {\r\n        const saved = localStorage.getItem(LOCAL_STORAGE_KEYS.START_DATE); // Use consistent key\r\n        return saved !== null ? saved : DEFAULTS.START_DATE;\r\n    });\r\n\r\n    const [totalSubstrate, setTotalSubstrate] = useState(0);\r\n\r\n    // --- Labels --- (Keep as is)\r\n    const substrateLabels = { /* ... */ };\r\n     substrateLabels.riceBran = 'Rice Bran';\r\n     substrateLabels.corn = 'Corn Cob';\r\n     substrateLabels.sugarcane = 'Sugarcane';\r\n     substrateLabels.sawdust = 'Sawdust';\r\n\r\n\r\n    // --- Effects ---\r\n    // Effect to calculate total substrate (Keep as is)\r\n    useEffect(() => {\r\n        const total = Object.values(substrate).reduce((sum, weight) => sum + (Number(weight) || 0), 0);\r\n        setTotalSubstrate(total);\r\n    }, [substrate]);\r\n\r\n    // --- Effects to save state to localStorage --- (Use consistent keys)\r\n    useEffect(() => {\r\n        if (temperature !== '' && !isNaN(temperature)) {\r\n            localStorage.setItem(LOCAL_STORAGE_KEYS.TEMPERATURE, temperature.toString());\r\n        }\r\n    }, [temperature]);\r\n\r\n    useEffect(() => {\r\n        if (ph !== '' && !isNaN(ph)) {\r\n            localStorage.setItem(LOCAL_STORAGE_KEYS.PH, ph.toString());\r\n        }\r\n    }, [ph]);\r\n\r\n    useEffect(() => {\r\n        // Save substrate object with the consistent key\r\n        localStorage.setItem(LOCAL_STORAGE_KEYS.SUBSTRATE, JSON.stringify(substrate));\r\n    }, [substrate]);\r\n\r\n    useEffect(() => {\r\n        if (simulationDays !== '' && !isNaN(simulationDays)) {\r\n            localStorage.setItem(LOCAL_STORAGE_KEYS.SIMULATION_DAYS, simulationDays.toString());\r\n        }\r\n    }, [simulationDays]);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(LOCAL_STORAGE_KEYS.BATCH_NAME, batchName);\r\n    }, [batchName]);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(LOCAL_STORAGE_KEYS.START_DATE, startDate);\r\n    }, [startDate]);\r\n\r\n\r\n    // --- Event Handlers --- (Keep as is, they use state setters which trigger useEffects)\r\n    const handleStartClick = () => {\r\n        console.log('Saving simulation inputs:', {\r\n             temperature,\r\n             ph,\r\n             substrate, // Save the whole object\r\n             simulationDays,\r\n             batchName,\r\n             startDate\r\n         });\r\n        navigate('/growth-simulation');\r\n    };\r\n\r\n    const handleBackClick = () => { /* ... */ };\r\n     handleBackClick.navigate = () => navigate('/');\r\n\r\n\r\n    const handleNumberChange = (setter, min, max, value, allowFloat = false) => { /* ... */ };\r\n     handleNumberChange.setter = (setter, min, max, value, allowFloat = false) => {\r\n         const numericValue = allowFloat ? parseFloat(value) : parseInt(value, 10);\r\n         if (value === '') {\r\n             setter('');\r\n             return;\r\n         }\r\n         if (isNaN(numericValue)) {\r\n             return;\r\n         }\r\n         const clampedValue = Math.max(min, Math.min(max, numericValue));\r\n         setter(clampedValue);\r\n     };\r\n\r\n\r\n    const handleSubstrateChange = (key, value) => { /* ... */ };\r\n     handleSubstrateChange.setSubstrate = (key, value) => {\r\n         const numericValue = parseInt(value, 10);\r\n         if (value === '') {\r\n             setSubstrate((prev) => ({ ...prev, [key]: '' }));\r\n         } else if (isNaN(numericValue) || numericValue < 0) {\r\n             setSubstrate((prev) => ({ ...prev, [key]: prev[key] === '' ? 0 : (prev[key] || 0) }));\r\n         } else {\r\n             setSubstrate((prev) => ({ ...prev, [key]: numericValue }));\r\n         }\r\n     };\r\n\r\n\r\n    const handleDaysChange = (e) => { /* ... */ };\r\n     handleDaysChange.setSimulationDays = (e) => {\r\n         const value = e.target.value;\r\n         const min = 1;\r\n         const max = 365;\r\n         if (value === '') {\r\n             setSimulationDays('');\r\n             return;\r\n         }\r\n         const numericValue = parseInt(value, 10);\r\n         if (isNaN(numericValue)) {\r\n             return;\r\n         }\r\n         if (numericValue < min) {\r\n             setSimulationDays(min);\r\n         } else if (numericValue > max) {\r\n             setSimulationDays(max);\r\n         } else {\r\n             setSimulationDays(numericValue);\r\n         }\r\n     };\r\n\r\n\r\n\r\n    // --- Chart Configuration --- (Keep as is)\r\n    const pieOptions = { /* ... */ };\r\n     pieOptions.responsive = true;\r\n     pieOptions.maintainAspectRatio = false;\r\n     pieOptions.plugins = {\r\n         legend: {\r\n             position: 'bottom',\r\n             labels: {\r\n                 color: '#6b4f4b',\r\n                 font: { size: 12, family: \"'Lexend', sans-serif\" },\r\n                 boxWidth: 15,\r\n                 padding: 15\r\n             }\r\n         },\r\n         tooltip: {\r\n             bodyFont: { family: \"'Lexend', sans-serif\" },\r\n             titleFont: { family: \"'Lexend', sans-serif\" }\r\n         }\r\n     };\r\n\r\n\r\n    const pieData = { /* ... */ };\r\n     pieData.labels = Object.keys(substrate).map(key => substrateLabels[key]);\r\n     pieData.datasets = [\r\n         {\r\n             data: totalSubstrate > 0\r\n                 ? Object.values(substrate).map(v => Number(v) || 0)\r\n                 : [1],\r\n             backgroundColor: totalSubstrate > 0\r\n                 ? ['#f3f2a4', '#c5e99b', '#452c0e', '#f0a008']\r\n                 : ['#d3d3d3'],\r\n             borderColor: '#f5f2e9',\r\n             borderWidth: totalSubstrate > 0 ? 2 : 0,\r\n         },\r\n     ];\r\n\r\n\r\n\r\n    // --- JSX --- (Keep your original JSX structure for this component)\r\n    return (\r\n        <div className=\"condition-setting\">\r\n            <div className=\"logobox\">\r\n                 <button onClick={handleBackClick} className=\"back-button\" title=\"Back to Home\">\r\n                     &larr;\r\n                 </button>\r\n                 <div className=\"logo\">\r\n                     <img src={logoSrc} alt=\"Logo\" />\r\n                 </div>\r\n             </div>\r\n\r\n             <header className=\"condition-header\">\r\n                 <h1>Set Your Growing Conditions!</h1>\r\n             </header>\r\n\r\n             <main className=\"condition-main-content\">\r\n                 {/* Left Column: Inputs */}\r\n                 <div className=\"left-column\">\r\n                     {/* Environmental Conditions */}\r\n                     <div className=\"input-card\">\r\n                          <h3>\r\n                              Environmental Conditions\r\n                              <span className=\"info-icon\" title=\"Set temperature (20-40°C) and pH (5.5-7.5) for growth\">(i)</span>\r\n                          </h3>\r\n                          <div className=\"input-group\">\r\n                               <label htmlFor=\"temperature\">Temperature (°C):</label>\r\n                               <input\r\n                                   id=\"temperature\" type=\"number\" min=\"20\" max=\"40\" step=\"1\"\r\n                                   value={temperature}\r\n                                   onChange={(e) => handleNumberChange(setTemperature, 20, 40, e.target.value)}\r\n                               />\r\n                          </div>\r\n                          <div className=\"input-group\">\r\n                              <label htmlFor=\"ph\">pH:</label>\r\n                              <input\r\n                                  id=\"ph\" type=\"number\" min=\"5.5\" max=\"7.5\" step=\"0.1\"\r\n                                  value={ph}\r\n                                  onChange={(e) => handleNumberChange(setPh, 5.5, 7.5, e.target.value, true)}\r\n                              />\r\n                          </div>\r\n                      </div>\r\n\r\n                      {/* Substrate Composition */}\r\n                      <div className=\"input-card\">\r\n                          <h3>\r\n                              Substrate Composition\r\n                              <span className=\"info-icon\" title=\"Enter weight in grams for each component\">(i)</span>\r\n                          </h3>\r\n                          {Object.keys(substrate).map((key) => (\r\n                              <div key={key} className=\"input-group\">\r\n                                  <label htmlFor={`substrate-${key}`}>{substrateLabels[key]} (g):</label>\r\n                                  <input\r\n                                      id={`substrate-${key}`} type=\"number\" min=\"0\"\r\n                                      value={substrate[key]}\r\n                                      onChange={(e) => handleSubstrateChange(key, e.target.value)}\r\n                                  />\r\n                              </div>\r\n                          ))}\r\n                          <div className=\"total-substrate\">\r\n                              Total: {totalSubstrate}g\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n\r\n                  {/* Right Column: Chart & Other Details */}\r\n                  <div className=\"right-column\">\r\n                      <div className=\"chart-card\">\r\n                          <h3>Your Substrate Composition</h3>\r\n                          <div className=\"pie-chart-container\">\r\n                              <div className=\"pie-chart\">\r\n                                  {totalSubstrate > 0 ? (\r\n                                      <Pie data={pieData} options={pieOptions} />\r\n                                  ) : (\r\n                                      <p className=\"pie-chart-placeholder\">\r\n                                          Enter substrate values to see chart.\r\n                                      </p>\r\n                                  )}\r\n                              </div>\r\n                          </div>\r\n\r\n                          {/* Additional Inputs */}\r\n                          <div className=\"additional-inputs\">\r\n                               <div className=\"input-group\">\r\n                                   <label htmlFor=\"batchName\">Batch Name:</label>\r\n                                   <input\r\n                                       id=\"batchName\" type=\"text\" value={batchName}\r\n                                       onChange={(e) => setBatchName(e.target.value)}\r\n                                       placeholder=\"e.g., Spring Batch 1\"\r\n                                   />\r\n                               </div>\r\n                               <div className=\"input-group\">\r\n                                   <label htmlFor=\"startDate\">Start Date:</label>\r\n                                   <input\r\n                                       id=\"startDate\" type=\"date\" value={startDate}\r\n                                       onChange={(e) => setStartDate(e.target.value)}\r\n                                   />\r\n                               </div>\r\n                               <div className=\"input-group span-cols-2\">\r\n                                   <label htmlFor=\"simulationDays\">Cultivation Duration (Days):</label>\r\n                                   <input\r\n                                       id=\"simulationDays\" type=\"number\" min=\"1\" max=\"365\" step=\"1\"\r\n                                       value={simulationDays}\r\n                                       onChange={handleDaysChange}\r\n                                   />\r\n                               </div>\r\n                           </div>\r\n                       </div>\r\n                   </div>\r\n            </main>\r\n\r\n            <footer className=\"footer-container\">\r\n                <button className=\"start1-button\" onClick={handleStartClick}>\r\n                    Start Growing\r\n                </button>\r\n            </footer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ConditionSetting;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}