{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\celst\\\\sds\\\\src\\\\components\\\\GrowthHistory.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../styles/GrowthHistory.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GrowthHistory = () => {\n  _s();\n  const navigate = useNavigate();\n  const [history, setHistory] = useState([]);\n  useEffect(() => {\n    // Retrieve growth history from localStorage\n    const savedHistory = JSON.parse(localStorage.getItem('growthHistory')) || [];\n    setHistory(savedHistory);\n  }, []);\n  const handleBackClick = () => {\n    navigate('/'); // Navigate back to the Landing Page\n  };\n\n  // Map keys to display names\n  const displayNames = {\n    riceBran: 'Rice Bran',\n    corn: 'Corn Cob',\n    sugarcane: 'Sugarcane',\n    sawdust: 'Sawdust'\n  };\n  const formatSubstrate = substrate => {\n    let parsedSubstrate;\n    try {\n      // Try to parse the substrate as JSON\n      parsedSubstrate = JSON.parse(substrate);\n    } catch (error) {\n      // If parsing fails, assume it's already formatted as a string\n      return substrate;\n    }\n\n    // Map keys to display names\n    const displayNames = {\n      riceBran: 'Rice Bran',\n      corn: 'Corn Cob',\n      sugarcane: 'Sugarcane',\n      sawdust: 'Sawdust'\n    };\n    return Object.entries(parsedSubstrate).map(([key, value]) => `${displayNames[key] || key}: ${value}g`).join(', ');\n  };\n  const handleEntryClick = entry => {\n    navigate('/growth-report', {\n      state: {\n        entry\n      }\n    }); // Navigate to GrowthReport.jsx with entry data\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"growth-history\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"history-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: handleBackClick,\n        children: \"\\u2190\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Growth History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"history-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"April\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"history-list\",\n        children: history.length > 0 ? history.map((entry, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"history-item\",\n          onClick: () => handleEntryClick(entry) // Make the entry clickable\n          ,\n          style: {\n            cursor: 'pointer'\n          } // Add a pointer cursor for better UX\n          ,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"history-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"# of Days:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 22\n              }, this), \" \", entry.days]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Yield:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 22\n              }, this), \" \", entry.yield]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [formatSubstrate(entry.substrate), \" | \", entry.conditions]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"history-date\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 22\n              }, this), \" \", entry.date]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No history available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(GrowthHistory, \"ERz2Q/oXdgRUUaYwKgxx+sVviAY=\", false, function () {\n  return [useNavigate];\n});\n_c = GrowthHistory;\nexport default GrowthHistory;\nvar _c;\n$RefreshReg$(_c, \"GrowthHistory\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","GrowthHistory","_s","navigate","history","setHistory","savedHistory","JSON","parse","localStorage","getItem","handleBackClick","displayNames","riceBran","corn","sugarcane","sawdust","formatSubstrate","substrate","parsedSubstrate","error","Object","entries","map","key","value","join","handleEntryClick","entry","state","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","index","style","cursor","days","yield","conditions","date","_c","$RefreshReg$"],"sources":["C:/Users/celst/sds/src/components/GrowthHistory.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport '../styles/GrowthHistory.css';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst GrowthHistory = () => {\r\n  const navigate = useNavigate();\r\n  const [history, setHistory] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Retrieve growth history from localStorage\r\n    const savedHistory = JSON.parse(localStorage.getItem('growthHistory')) || [];\r\n    setHistory(savedHistory);\r\n  }, []);\r\n\r\n  const handleBackClick = () => {\r\n    navigate('/'); // Navigate back to the Landing Page\r\n  };\r\n\r\n  // Map keys to display names\r\n  const displayNames = {\r\n    riceBran: 'Rice Bran',\r\n    corn: 'Corn Cob',\r\n    sugarcane: 'Sugarcane',\r\n    sawdust: 'Sawdust',\r\n  };\r\n\r\n  const formatSubstrate = (substrate) => {\r\n    let parsedSubstrate;\r\n  \r\n    try {\r\n      // Try to parse the substrate as JSON\r\n      parsedSubstrate = JSON.parse(substrate);\r\n    } catch (error) {\r\n      // If parsing fails, assume it's already formatted as a string\r\n      return substrate;\r\n    }\r\n  \r\n    // Map keys to display names\r\n    const displayNames = {\r\n      riceBran: 'Rice Bran',\r\n      corn: 'Corn Cob',\r\n      sugarcane: 'Sugarcane',\r\n      sawdust: 'Sawdust',\r\n    };\r\n  \r\n    return Object.entries(parsedSubstrate)\r\n      .map(([key, value]) => `${displayNames[key] || key}: ${value}g`)\r\n      .join(', ');\r\n  };\r\n\r\n  const handleEntryClick = (entry) => {\r\n    navigate('/growth-report', { state: { entry } }); // Navigate to GrowthReport.jsx with entry data\r\n  };\r\n\r\n  return (\r\n    <div className=\"growth-history\">\r\n      <header className=\"history-header\">\r\n        <button className=\"back-button\" onClick={handleBackClick}>\r\n          ‚Üê\r\n        </button>\r\n        <h1>Growth History</h1>\r\n      </header>\r\n      <main className=\"history-content\">\r\n        <h3>April</h3>\r\n        <div className=\"history-list\">\r\n          {history.length > 0 ? (\r\n            history.map((entry, index) => (\r\n              <div\r\n                className=\"history-item\"\r\n                key={index}\r\n                onClick={() => handleEntryClick(entry)} // Make the entry clickable\r\n                style={{ cursor: 'pointer' }} // Add a pointer cursor for better UX\r\n              >\r\n                <div className=\"history-details\">\r\n                  <p><strong># of Days:</strong> {entry.days}</p>\r\n                  <p><strong>Yield:</strong> {entry.yield}</p>\r\n                  <p>{formatSubstrate(entry.substrate)} | {entry.conditions}</p>\r\n                </div>\r\n                <div className=\"history-date\">\r\n                  <p><strong>Date:</strong> {entry.date}</p>\r\n                </div>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p>No history available.</p>\r\n          )}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GrowthHistory;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}