{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\celst\\\\sds\\\\src\\\\components\\\\GrowthSimulation.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, LineElement, PointElement, Tooltip, Legend, CategoryScale, LinearScale, Title } from 'chart.js';\nimport odeRK4 from 'ode-rk4';\nimport '../styles/GrowthSimulation.css'; // Import the CSS file\nimport logoSrc from '../assets/images/cslogo.png';\n\n// --- Simulation Logic & ChartJS Registration ---\n\n// *** Default Parameters for MUSHROOM Growth (Based on original Model.json) ***\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultParamsMushroom = {\n  timeStart: 0,\n  timeLength: 100,\n  timeStep: 0.2,\n  'C BD Rate': 1.11,\n  'C Coeff': 0.7,\n  'C Cons. Rate': 76.39,\n  'CO2 Coeff': 0.8,\n  'CO2 Production Rate': 410000,\n  'CO2 Removal Rate': 12.6,\n  'External CO2': 428.23,\n  'External Temp': 24,\n  'Growth Coeff': 5.1,\n  // 'Initial C:N Ratio': 43.58, // Overridden by FIXED_CN_RATIO\n  'Initial Complex:Simple Ratio': 0.8054,\n  'Initial Dry Substrate Weight': 410.2,\n  'IsMush': 1,\n  // <<< Key difference: Mushroom phase\n  'Mushroom Multiplier': 5.17,\n  'N Coeff': 68.4,\n  'N Rate': 13.03,\n  'pH': 6.91,\n  'pH Coeff': 1.4,\n  'Temp Coeff': 1.3,\n  'Temp Production Rate': 405,\n  'Temp Transfer Rate': 1.5,\n  // Effect Data arrays (assuming they are the same for both models)\n  'Effect of CO2 on Mush Growth Data': [[500, 0.9], [800, 1], [1000, 0.8], [1200, 0.25], [1400, 0]],\n  'Effect of CO2 on Myc Growth Data': [[15000, 1], [20000, 0.9], [25000, 0.25], [30000, 0]],\n  'Effect of pH on Mush Growth Data': [[5.5, 0], [6, 0.25], [6.7, 1], [7, 0.6], [7.5, 0]],\n  'Effect of pH on Myc Growth Data': [[5.8, 0], [6, 0.25], [6.7, 1], [7, 0.6], [7.5, 0]],\n  'Effect of Temp on Mush Growth Data': [[10, 0], [15, 5.37], [20, 6.36], [25, 8.63], [30, 6.37], [40, 0]],\n  'Effect of Temp on Myc Growth Data': [[10, 0], [15, 5.37], [20, 6.36], [25, 8.63], [30, 6.37], [35, 5.36], [45, 0]]\n};\n\n// *** Default Parameters for MYCELIUM Growth (Based on Model (1).json) ***\nconst defaultParamsMycelium = {\n  timeStart: 0,\n  timeLength: 100,\n  timeStep: 0.2,\n  'C BD Rate': 1.11,\n  'C Coeff': 0.7,\n  'C Cons. Rate': 76.39,\n  'CO2 Coeff': 0.8,\n  'CO2 Production Rate': 410000,\n  'CO2 Removal Rate': 1,\n  // Updated\n  'External CO2': 428.23,\n  'External Temp': 28,\n  // Updated\n  'Growth Coeff': 5.4,\n  // Updated\n  // 'Initial C:N Ratio': 44.3652, // Overridden by FIXED_CN_RATIO\n  'Initial Complex:Simple Ratio': 0.867,\n  // Updated\n  'Initial Dry Substrate Weight': 479.975,\n  // Updated\n  'IsMush': 0,\n  // <<< Key difference: Mycelium phase\n  'Mushroom Multiplier': 26,\n  // Updated\n  'N Coeff': 68.4,\n  'N Rate': 1.53,\n  // Updated\n  'pH': 6.91,\n  'pH Coeff': 1.4,\n  'Temp Coeff': 1.7,\n  // Updated\n  'Temp Production Rate': 255,\n  // Updated\n  'Temp Transfer Rate': 1.5,\n  // Effect Data arrays (assuming same)\n  'Effect of CO2 on Mush Growth Data': [[500, 0.9], [800, 1], [1000, 0.8], [1200, 0.25], [1400, 0]],\n  'Effect of CO2 on Myc Growth Data': [[15000, 1], [20000, 0.9], [25000, 0.25], [30000, 0]],\n  'Effect of pH on Mush Growth Data': [[5.5, 0], [6, 0.25], [6.7, 1], [7, 0.6], [7.5, 0]],\n  'Effect of pH on Myc Growth Data': [[5.8, 0], [6, 0.25], [6.7, 1], [7, 0.6], [7.5, 0]],\n  'Effect of Temp on Mush Growth Data': [[10, 0], [15, 5.37], [20, 6.36], [25, 8.63], [30, 6.37], [40, 0]],\n  'Effect of Temp on Myc Growth Data': [[10, 0], [15, 5.37], [20, 6.36], [25, 8.63], [30, 6.37], [35, 5.36], [45, 0]]\n};\n\n// FIXED C:N Ratio as previously requested\nconst FIXED_CN_RATIO = 0.96;\n\n// --- Simulation Functions ---\nfunction linearInterpolate(data, x) {/* ... (same as before) ... */}\nfunction derivatives(dydt, y, t, currentParams) {/* ... (same as before, uses currentParams) ... */}\n\n// Initial State Calculation - Modified to accept initial Mycelium/Space values\nfunction getInitialState(p, initialMycelium = 0.01) {\n  // Default initial mycelium low\n  const initialDrySubstrateWeight = Number(p['Initial Dry Substrate Weight']) || defaultParamsMushroom['Initial Dry Substrate Weight']; // Fallback to one default\n  const cnRatio = Number(p['Initial C:N Ratio']); // Uses the fixed ratio passed in p\n  const complexSimpleRatio = Number(p['Initial Complex:Simple Ratio']) || defaultParamsMushroom['Initial Complex:Simple Ratio']; // Fallback\n\n  const cnRatioPlusOne = cnRatio + 1;\n  const Init_C = initialDrySubstrateWeight - initialDrySubstrateWeight / cnRatioPlusOne;\n  const initialSpace = 1 - initialMycelium;\n\n  // Initial state vector: [CO2, ComplexC, MushroomYield, Mycelium, N, SimpleC, Space, Temp]\n  return [Number(p['External CO2']) || defaultParamsMushroom['External CO2'],\n  // Use External CO2 from params\n  Init_C * complexSimpleRatio, 0,\n  // MushroomYield always starts at 0\n  initialMycelium,\n  // << Use passed initial Mycelium\n  initialDrySubstrateWeight / cnRatioPlusOne, Init_C * (1 - complexSimpleRatio), initialSpace,\n  // << Use calculated initial Space\n  Number(p['External Temp']) || defaultParamsMushroom['External Temp'] // Temp\n  ];\n}\n\n// Run Simulation Function - Modified to accept default params set\nfunction runSimulation(inputParams, defaultParamSet) {\n  var _defaultParamsMyceliu, _defaultParamsMushroo;\n  const currentParams = {\n    ...defaultParamSet,\n    // Use the specified default set\n    ...inputParams,\n    // Override with inputs from localStorage\n    'Initial C:N Ratio': FIXED_CN_RATIO // Force the C:N Ratio\n  };\n\n  // Determine initial mycelium based on which phase we are simulating\n  // Use the specific default if available, otherwise use a sensible default (low for myc, higher for mush)\n  const initialMyceliumValue = defaultParamSet['IsMush'] === 0 ? (_defaultParamsMyceliu = defaultParamsMycelium['Initial Mycelium']) !== null && _defaultParamsMyceliu !== void 0 ? _defaultParamsMyceliu : 0.004 // From Model(1).json if specified, else 0.004\n  : (_defaultParamsMushroo = defaultParamsMushroom['Initial Mycelium']) !== null && _defaultParamsMushroo !== void 0 ? _defaultParamsMushroo : 0.9; // Higher starting point for mushroom phase assumed\n\n  const y0 = getInitialState(currentParams, initialMyceliumValue); // Pass initial mycelium\n\n  const t0 = currentParams.timeStart;\n  const dt = currentParams.timeStep;\n  const timeLength = Math.max(0, currentParams.timeLength);\n  const positiveDt = Math.max(dt, 1e-6);\n  const numSteps = Math.floor(timeLength / positiveDt);\n  const derivativeFuncForSolver = (dydt, y, t) => {\n    try {\n      derivatives(dydt, y, t, currentParams);\n    } catch (e) {\n      console.error(\"Error in derivatives:\", e);\n      dydt.fill(0);\n    }\n  };\n  const integrator = odeRK4(y0, derivativeFuncForSolver, t0, positiveDt);\n  const results = [{\n    time: integrator.t,\n    state: [...integrator.y]\n  }];\n  // console.log(`Starting simulation (${defaultParamSet['IsMush'] === 0 ? 'Mycelium' : 'Mushroom'}) for ${timeLength} days with params:`, currentParams);\n  if (numSteps <= 0) {\n    console.warn(\"Sim length/step 0.\");\n    return [];\n  }\n  for (let i = 0; i < numSteps; i++) {\n    try {\n      integrator.step();\n      if (integrator.y.some(val => !Number.isFinite(val))) {\n        console.error(\"Sim unstable t=\", integrator.t);\n      }\n      results.push({\n        time: integrator.t,\n        state: [...integrator.y]\n      });\n    } catch (solverError) {\n      console.error(\"RK4 step error:\", solverError);\n      break;\n    }\n  }\n  // console.log(`Simulation (${defaultParamSet['IsMush'] === 0 ? 'Mycelium' : 'Mushroom'}) finished.`);\n  return results.map(p => ({\n    time: p.time,\n    CO2: p.state[0],\n    ComplexC: p.state[1],\n    MushroomYield: p.state[2],\n    Mycelium: p.state[3],\n    N: p.state[4],\n    SimpleC: p.state[5],\n    Space: p.state[6],\n    Temp: p.state[7]\n  }));\n}\n// --- (End of Simulation Functions) ---\n\n// Register ChartJS components\nChartJS.register(LineElement, PointElement, Tooltip, Legend, CategoryScale, LinearScale, Title);\n\n// *** NEW: Helper function to format the date ***\nfunction formatDate_DDMMYYYY(dateString) {\n  // Input is expected to be YYYY-MM-DD or potentially empty/null/\"N/A\"\n  if (!dateString || dateString === 'N/A' || !/^\\d{4}-\\d{2}-\\d{2}$/.test(dateString)) {\n    return 'N/A'; // Return 'N/A' if input is invalid or not in expected format\n  }\n  try {\n    const [year, month, day] = dateString.split('-');\n    return `${day}-${month}-${year}`; // Rearrange to DD-MM-YYYY\n  } catch (e) {\n    console.error(\"Error formatting date:\", e);\n    return 'N/A'; // Fallback on error\n  }\n}\n\n// --- React Component ---\nconst GrowthSimulation = () => {\n  _s();\n  const navigate = useNavigate();\n  const [simulationResults, setSimulationResults] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [batchName, setBatchName] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [finalSimulatedYield, setFinalSimulatedYield] = useState(null);\n  // Add 'mycelium' to possible active tabs, default to 'yield'\n  const [activeChartTab, setActiveChartTab] = useState('yield'); // 'yield', 'temp', 'mycelium'\n\n  // Consistent localStorage keys\n  const LOCAL_STORAGE_KEYS = {\n    TEMPERATURE: 'sim_temperature',\n    PH: 'sim_ph',\n    SUBSTRATE: 'sim_substrate',\n    SIMULATION_DAYS: 'sim_duration',\n    BATCH_NAME: 'sim_batch_name',\n    START_DATE: 'sim_start_date'\n  };\n  useEffect(() => {\n    let isMounted = true;\n    setIsLoading(true);\n    setError(null);\n    setFinalSimulatedYield(null);\n    setTimeout(() => {\n      if (!isMounted) return;\n      try {\n        // Load parameters (Batch Name and Start Date are correctly loaded here)\n        const savedTemperature = localStorage.getItem(LOCAL_STORAGE_KEYS.TEMPERATURE);\n        const savedPh = localStorage.getItem(LOCAL_STORAGE_KEYS.PH);\n        const savedSubstrateJson = localStorage.getItem(LOCAL_STORAGE_KEYS.SUBSTRATE);\n        const savedDays = localStorage.getItem(LOCAL_STORAGE_KEYS.SIMULATION_DAYS);\n        const savedBatchName = localStorage.getItem(LOCAL_STORAGE_KEYS.BATCH_NAME) || 'N/A'; // Correctly reads batch name\n        const savedStartDate = localStorage.getItem(LOCAL_STORAGE_KEYS.START_DATE) || 'N/A'; // Correctly reads start date\n\n        setBatchName(savedBatchName); // State is set\n        setStartDate(savedStartDate); // State is set\n\n        // --- Parameter validation and simulation run (same as before) ---\n        if (savedTemperature === null || savedPh === null || savedSubstrateJson === null || savedDays === null) {\n          const missing = [/* ... error message construction ... */].filter(Boolean).join(', ');\n          throw new Error(`Missing required simulation parameters: ${missing}. Please set them in Condition Settings.`);\n        }\n        const temp = parseFloat(savedTemperature);\n        const phValue = parseFloat(savedPh);\n        const days = parseInt(savedDays, 10);\n        let substrateData = null;\n        let initialWeight = 0;\n        try {\n          substrateData = JSON.parse(savedSubstrateJson);\n          if (typeof substrateData !== 'object' || substrateData === null) throw new Error(\"Invalid substrate format.\");\n          initialWeight = Object.values(substrateData).reduce((sum, val) => sum + (Number(val) || 0), 0);\n        } catch (parseError) {\n          /* ... error handling ... */throw parseError;\n        }\n        if (isNaN(temp) || isNaN(phValue) || isNaN(initialWeight) || isNaN(days)) throw new Error(\"Invalid numerical parameters.\");\n        const simulationDuration = days > 0 ? days : defaultParams.timeLength;\n        const simulationInputs = {\n          'External Temp': temp,\n          'pH': phValue,\n          'Initial Dry Substrate Weight': initialWeight > 0 ? initialWeight : defaultParams['Initial Dry Substrate Weight'],\n          'timeLength': simulationDuration\n        };\n        const results = runSimulation(simulationInputs);\n        // --- (End of parameter validation and simulation run) ---\n\n        if (isMounted) {\n          setSimulationResults(results);\n          if (results && results.length > 0) {\n            const lastResult = results[results.length - 1];\n            if (lastResult && Number.isFinite(lastResult.MushroomYield)) {\n              setFinalSimulatedYield(lastResult.MushroomYield);\n            }\n            console.log(\"Simulation ended at t=\", lastResult.time, \" Final State:\", lastResult);\n          } else {\n            console.log(\"Simulation produced no results.\");\n          }\n        }\n      } catch (err) {\n        console.error(\"Error during simulation setup or run:\", err);\n        if (isMounted) setError(err.message || \"Failed to run simulation.\");\n      } finally {\n        if (isMounted) setIsLoading(false);\n      }\n    }, 50);\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n  const handleBackClick = () => {\n    navigate('/condition-setting');\n  };\n\n  // --- Chart Data & Options ---\n  const getChartConfig = () => {\n    if (!simulationResults || simulationResults.length === 0) {\n      return {\n        data: {\n          datasets: []\n        },\n        options: {}\n      };\n    }\n    const yieldColor = '#2E7D32';\n    const tempColor = '#C62828';\n    const myceliumColor = '#1976D2'; // Blue for Mycelium\n    const textColor = '#333';\n    const gridColor = 'rgba(0, 0, 0, 0.08)';\n    let datasets = [];\n    const options = {\n      responsive: true,\n      maintainAspectRatio: false,\n      plugins: {\n        /* ... legend, tooltip, title config ... */\n        legend: {\n          display: true,\n          labels: {\n            color: textColor,\n            font: {\n              family: 'Lexend'\n            }\n          }\n        },\n        tooltip: {\n          enabled: true,\n          bodyFont: {\n            family: 'Lexend'\n          },\n          titleFont: {\n            family: 'Lexend'\n          }\n        },\n        title: {\n          display: true,\n          text: '',\n          color: textColor,\n          font: {\n            size: 16,\n            family: 'Lexend'\n          }\n        }\n      },\n      scales: {\n        x: {\n          /* ... x-axis config ... */\n          type: 'linear',\n          title: {\n            display: true,\n            text: 'Time (Days)',\n            color: textColor,\n            font: {\n              family: 'Lexend'\n            }\n          },\n          ticks: {\n            color: textColor,\n            font: {\n              family: 'Lexend'\n            }\n          },\n          grid: {\n            color: gridColor\n          },\n          min: 0\n        },\n        // Define ALL potential Y axes\n        yYield: {\n          type: 'linear',\n          position: 'left',\n          title: {\n            display: true,\n            text: 'Yield (g)',\n            color: yieldColor,\n            font: {\n              family: 'Lexend'\n            }\n          },\n          ticks: {\n            color: yieldColor,\n            font: {\n              family: 'Lexend'\n            }\n          },\n          grid: {\n            drawOnChartArea: false\n          },\n          beginAtZero: true,\n          display: false\n        },\n        // Initially hidden\n        yTemp: {\n          type: 'linear',\n          position: 'left',\n          title: {\n            display: true,\n            text: 'Temperature (°C)',\n            color: tempColor,\n            font: {\n              family: 'Lexend'\n            }\n          },\n          ticks: {\n            color: tempColor,\n            font: {\n              family: 'Lexend'\n            }\n          },\n          grid: {\n            drawOnChartArea: false\n          },\n          beginAtZero: false,\n          display: false\n        },\n        // Initially hidden\n        yMycelium: {\n          type: 'linear',\n          position: 'left',\n          title: {\n            display: true,\n            text: 'Mycelium Density',\n            color: myceliumColor,\n            font: {\n              family: 'Lexend'\n            }\n          },\n          ticks: {\n            color: myceliumColor,\n            font: {\n              family: 'Lexend'\n            }\n          },\n          grid: {\n            drawOnChartArea: false\n          },\n          beginAtZero: true,\n          suggestedMax: 1,\n          display: false\n        } // Initially hidden\n      }\n    };\n\n    // Reset display for all axes before setting the active one\n    options.scales.yYield.display = false;\n    options.scales.yTemp.display = false;\n    options.scales.yMycelium.display = false;\n    switch (activeChartTab) {\n      case 'yield':\n        options.plugins.title.text = 'Yield Over Time';\n        options.scales.yYield.display = true; // Show this axis\n        datasets = [{\n          label: 'Mushroom Yield (g)',\n          data: simulationResults.map(p => ({\n            x: p.time,\n            y: Number.isFinite(p.MushroomYield) ? p.MushroomYield : null\n          })),\n          borderColor: yieldColor,\n          backgroundColor: 'rgba(46, 125, 50, 0.1)',\n          yAxisID: 'yYield'\n        }];\n        break;\n      case 'temp':\n        options.plugins.title.text = 'Temperature Over Time';\n        options.scales.yTemp.display = true; // Show this axis\n        datasets = [{\n          label: 'Temperature (°C)',\n          data: simulationResults.map(p => ({\n            x: p.time,\n            y: Number.isFinite(p.Temp) ? p.Temp : null\n          })),\n          borderColor: tempColor,\n          backgroundColor: 'rgba(198, 40, 40, 0.1)',\n          yAxisID: 'yTemp'\n        }];\n        break;\n      // *** ADD CASE FOR MYCELIUM ***\n      case 'mycelium':\n        options.plugins.title.text = 'Mycelium Growth Over Time';\n        options.scales.yMycelium.display = true; // Show this axis\n        datasets = [{\n          label: 'Mycelium Density',\n          // Or 'Mycelium Growth'\n          data: simulationResults.map(p => ({\n            x: p.time,\n            y: Number.isFinite(p.Mycelium) ? p.Mycelium : null\n          })),\n          borderColor: myceliumColor,\n          backgroundColor: 'rgba(25, 118, 210, 0.1)',\n          yAxisID: 'yMycelium'\n        }];\n        break;\n      default:\n        datasets = [];\n    }\n    return {\n      data: {\n        datasets: datasets.map(ds => ({\n          ...ds,\n          tension: 0.1,\n          pointRadius: 2,\n          spanGaps: true\n        }))\n      },\n      options: options\n    };\n  };\n  const chartConfig = getChartConfig();\n\n  // --- JSX ---\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"growth-simulation\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"simulation-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logobox\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: logoSrc,\n            alt: \"City Sprouts Logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"batch-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"batch-name\",\n          children: [\"Batch: \", batchName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"start-date\",\n          children: [\"Start Date: \", formatDate_DDMMYYYY(startDate)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animation-area content-card\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Animation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-results-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tabs-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveChartTab('yield'),\n            className: `tab-button ${activeChartTab === 'yield' ? 'tab-button-active' : ''}`,\n            children: \" Yield over Time \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveChartTab('temp'),\n            className: `tab-button ${activeChartTab === 'temp' ? 'tab-button-active' : ''}`,\n            children: \" Temperature \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveChartTab('mycelium'),\n            className: `tab-button ${activeChartTab === 'mycelium' ? 'tab-button-active' : ''}`,\n            children: \" Mycelium \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 24\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-area content-card\",\n          children: [isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"loading-message\",\n            children: \"Running simulations...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 41\n          }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-message\",\n            children: [\"Error: \", error]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 37\n          }, this), !isLoading && !error && simulationDataReady && (\n          // Check if *any* data is ready\n          chartConfig.data.datasets.length > 0 && chartConfig.data.datasets[0].data.length > 0 ?\n          /*#__PURE__*/\n          // Check if current tab has data\n          _jsxDEV(\"div\", {\n            className: \"chart-container\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(Line, {\n              options: chartConfig.options,\n              data: chartConfig.data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 70\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 36\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"no-data-message\",\n            children: \"No data available for this chart.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 38\n          }, this) // Show if specific chart has no data\n          ), !isLoading && !error && !simulationDataReady && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"no-data-message\",\n            children: \"Simulation results not available.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 76\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"results-section content-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"results-heading\",\n            children: [\" Results \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"info-icon\",\n              title: \"Key simulation outputs based on initial conditions\",\n              children: \"i\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 66\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"results-items\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"result-label\",\n                children: \"Projected Yield:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 32\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"result-value\",\n                children: isLoading ? '...' : error ? 'Error' : Number.isFinite(finalSimulatedYield) ? `${finalSimulatedYield.toFixed(1)}g` : 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 32\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"result-label\",\n                children: \"Initial C:N Ratio:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 32\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"result-value\",\n                children: FIXED_CN_RATIO.toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 32\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 24\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 325,\n    columnNumber: 8\n  }, this);\n};\n_s(GrowthSimulation, \"WujbTxsfSuLk8SGaJb8thjtor8I=\", false, function () {\n  return [useNavigate];\n});\n_c = GrowthSimulation;\nexport default GrowthSimulation;\nvar _c;\n$RefreshReg$(_c, \"GrowthSimulation\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Line","Chart","ChartJS","LineElement","PointElement","Tooltip","Legend","CategoryScale","LinearScale","Title","odeRK4","logoSrc","jsxDEV","_jsxDEV","defaultParamsMushroom","timeStart","timeLength","timeStep","defaultParamsMycelium","FIXED_CN_RATIO","linearInterpolate","data","x","derivatives","dydt","y","t","currentParams","getInitialState","p","initialMycelium","initialDrySubstrateWeight","Number","cnRatio","complexSimpleRatio","cnRatioPlusOne","Init_C","initialSpace","runSimulation","inputParams","defaultParamSet","_defaultParamsMyceliu","_defaultParamsMushroo","initialMyceliumValue","y0","t0","dt","Math","max","positiveDt","numSteps","floor","derivativeFuncForSolver","e","console","error","fill","integrator","results","time","state","warn","i","step","some","val","isFinite","push","solverError","map","CO2","ComplexC","MushroomYield","Mycelium","N","SimpleC","Space","Temp","register","formatDate_DDMMYYYY","dateString","test","year","month","day","split","GrowthSimulation","_s","navigate","simulationResults","setSimulationResults","isLoading","setIsLoading","setError","batchName","setBatchName","startDate","setStartDate","finalSimulatedYield","setFinalSimulatedYield","activeChartTab","setActiveChartTab","LOCAL_STORAGE_KEYS","TEMPERATURE","PH","SUBSTRATE","SIMULATION_DAYS","BATCH_NAME","START_DATE","isMounted","setTimeout","savedTemperature","localStorage","getItem","savedPh","savedSubstrateJson","savedDays","savedBatchName","savedStartDate","missing","filter","Boolean","join","Error","temp","parseFloat","phValue","days","parseInt","substrateData","initialWeight","JSON","parse","Object","values","reduce","sum","parseError","isNaN","simulationDuration","defaultParams","simulationInputs","length","lastResult","log","err","message","handleBackClick","getChartConfig","datasets","options","yieldColor","tempColor","myceliumColor","textColor","gridColor","responsive","maintainAspectRatio","plugins","legend","display","labels","color","font","family","tooltip","enabled","bodyFont","titleFont","title","text","size","scales","type","ticks","grid","min","yYield","position","drawOnChartArea","beginAtZero","yTemp","yMycelium","suggestedMax","label","borderColor","backgroundColor","yAxisID","ds","tension","pointRadius","spanGaps","chartConfig","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","simulationDataReady","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/celst/sds/src/components/GrowthSimulation.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, LineElement, PointElement, Tooltip, Legend, CategoryScale, LinearScale, Title } from 'chart.js';\r\nimport odeRK4 from 'ode-rk4';\r\nimport '../styles/GrowthSimulation.css'; // Import the CSS file\r\nimport logoSrc from '../assets/images/cslogo.png';\r\n\r\n// --- Simulation Logic & ChartJS Registration ---\r\n\r\n// *** Default Parameters for MUSHROOM Growth (Based on original Model.json) ***\r\nconst defaultParamsMushroom = {\r\n  timeStart: 0, timeLength: 100, timeStep: 0.2,\r\n  'C BD Rate': 1.11, 'C Coeff': 0.7, 'C Cons. Rate': 76.39, 'CO2 Coeff': 0.8,\r\n  'CO2 Production Rate': 410000, 'CO2 Removal Rate': 12.6, 'External CO2': 428.23,\r\n  'External Temp': 24, 'Growth Coeff': 5.1,\r\n  // 'Initial C:N Ratio': 43.58, // Overridden by FIXED_CN_RATIO\r\n  'Initial Complex:Simple Ratio': 0.8054,\r\n  'Initial Dry Substrate Weight': 410.2,\r\n  'IsMush': 1, // <<< Key difference: Mushroom phase\r\n  'Mushroom Multiplier': 5.17,\r\n  'N Coeff': 68.4, 'N Rate': 13.03,\r\n  'pH': 6.91, 'pH Coeff': 1.4, 'Temp Coeff': 1.3, 'Temp Production Rate': 405,\r\n  'Temp Transfer Rate': 1.5,\r\n  // Effect Data arrays (assuming they are the same for both models)\r\n  'Effect of CO2 on Mush Growth Data': [[500, 0.9], [800, 1], [1000, 0.8], [1200, 0.25], [1400, 0]],\r\n  'Effect of CO2 on Myc Growth Data': [[15000, 1], [20000, 0.9], [25000, 0.25], [30000, 0]],\r\n  'Effect of pH on Mush Growth Data': [[5.5, 0], [6, 0.25], [6.7, 1], [7, 0.6], [7.5, 0]],\r\n  'Effect of pH on Myc Growth Data': [[5.8, 0], [6, 0.25], [6.7, 1], [7, 0.6], [7.5, 0]],\r\n  'Effect of Temp on Mush Growth Data': [[10, 0], [15, 5.37], [20, 6.36], [25, 8.63], [30, 6.37], [40, 0]],\r\n  'Effect of Temp on Myc Growth Data': [[10, 0], [15, 5.37], [20, 6.36], [25, 8.63], [30, 6.37], [35, 5.36], [45, 0]],\r\n};\r\n\r\n// *** Default Parameters for MYCELIUM Growth (Based on Model (1).json) ***\r\nconst defaultParamsMycelium = {\r\n  timeStart: 0, timeLength: 100, timeStep: 0.2,\r\n  'C BD Rate': 1.11, 'C Coeff': 0.7, 'C Cons. Rate': 76.39, 'CO2 Coeff': 0.8,\r\n  'CO2 Production Rate': 410000, 'CO2 Removal Rate': 1, // Updated\r\n  'External CO2': 428.23, 'External Temp': 28, // Updated\r\n  'Growth Coeff': 5.4, // Updated\r\n  // 'Initial C:N Ratio': 44.3652, // Overridden by FIXED_CN_RATIO\r\n  'Initial Complex:Simple Ratio': 0.867, // Updated\r\n  'Initial Dry Substrate Weight': 479.975, // Updated\r\n  'IsMush': 0, // <<< Key difference: Mycelium phase\r\n  'Mushroom Multiplier': 26, // Updated\r\n  'N Coeff': 68.4, 'N Rate': 1.53, // Updated\r\n  'pH': 6.91, 'pH Coeff': 1.4, 'Temp Coeff': 1.7, // Updated\r\n  'Temp Production Rate': 255, // Updated\r\n  'Temp Transfer Rate': 1.5,\r\n  // Effect Data arrays (assuming same)\r\n  'Effect of CO2 on Mush Growth Data': [[500, 0.9], [800, 1], [1000, 0.8], [1200, 0.25], [1400, 0]],\r\n  'Effect of CO2 on Myc Growth Data': [[15000, 1], [20000, 0.9], [25000, 0.25], [30000, 0]],\r\n  'Effect of pH on Mush Growth Data': [[5.5, 0], [6, 0.25], [6.7, 1], [7, 0.6], [7.5, 0]],\r\n  'Effect of pH on Myc Growth Data': [[5.8, 0], [6, 0.25], [6.7, 1], [7, 0.6], [7.5, 0]],\r\n  'Effect of Temp on Mush Growth Data': [[10, 0], [15, 5.37], [20, 6.36], [25, 8.63], [30, 6.37], [40, 0]],\r\n  'Effect of Temp on Myc Growth Data': [[10, 0], [15, 5.37], [20, 6.36], [25, 8.63], [30, 6.37], [35, 5.36], [45, 0]],\r\n};\r\n\r\n// FIXED C:N Ratio as previously requested\r\nconst FIXED_CN_RATIO = 0.96;\r\n\r\n// --- Simulation Functions ---\r\nfunction linearInterpolate(data, x) { /* ... (same as before) ... */ }\r\nfunction derivatives(dydt, y, t, currentParams) { /* ... (same as before, uses currentParams) ... */ }\r\n\r\n// Initial State Calculation - Modified to accept initial Mycelium/Space values\r\nfunction getInitialState(p, initialMycelium = 0.01) { // Default initial mycelium low\r\n  const initialDrySubstrateWeight = Number(p['Initial Dry Substrate Weight']) || defaultParamsMushroom['Initial Dry Substrate Weight']; // Fallback to one default\r\n  const cnRatio = Number(p['Initial C:N Ratio']); // Uses the fixed ratio passed in p\r\n  const complexSimpleRatio = Number(p['Initial Complex:Simple Ratio']) || defaultParamsMushroom['Initial Complex:Simple Ratio']; // Fallback\r\n\r\n  const cnRatioPlusOne = cnRatio + 1;\r\n  const Init_C = initialDrySubstrateWeight - (initialDrySubstrateWeight / cnRatioPlusOne);\r\n  const initialSpace = 1 - initialMycelium;\r\n\r\n  // Initial state vector: [CO2, ComplexC, MushroomYield, Mycelium, N, SimpleC, Space, Temp]\r\n  return [\r\n      Number(p['External CO2']) || defaultParamsMushroom['External CO2'], // Use External CO2 from params\r\n      Init_C * complexSimpleRatio,\r\n      0,                          // MushroomYield always starts at 0\r\n      initialMycelium,            // << Use passed initial Mycelium\r\n      initialDrySubstrateWeight / cnRatioPlusOne,\r\n      Init_C * (1 - complexSimpleRatio),\r\n      initialSpace,               // << Use calculated initial Space\r\n      Number(p['External Temp']) || defaultParamsMushroom['External Temp'] // Temp\r\n  ];\r\n}\r\n\r\n// Run Simulation Function - Modified to accept default params set\r\nfunction runSimulation(inputParams, defaultParamSet) {\r\n  const currentParams = {\r\n      ...defaultParamSet, // Use the specified default set\r\n      ...inputParams,   // Override with inputs from localStorage\r\n      'Initial C:N Ratio': FIXED_CN_RATIO, // Force the C:N Ratio\r\n  };\r\n\r\n  // Determine initial mycelium based on which phase we are simulating\r\n  // Use the specific default if available, otherwise use a sensible default (low for myc, higher for mush)\r\n  const initialMyceliumValue = defaultParamSet['IsMush'] === 0\r\n      ? (defaultParamsMycelium['Initial Mycelium'] ?? 0.004) // From Model(1).json if specified, else 0.004\r\n      : (defaultParamsMushroom['Initial Mycelium'] ?? 0.9); // Higher starting point for mushroom phase assumed\r\n\r\n  const y0 = getInitialState(currentParams, initialMyceliumValue); // Pass initial mycelium\r\n\r\n  const t0 = currentParams.timeStart;\r\n  const dt = currentParams.timeStep;\r\n  const timeLength = Math.max(0, currentParams.timeLength);\r\n  const positiveDt = Math.max(dt, 1e-6);\r\n  const numSteps = Math.floor(timeLength / positiveDt);\r\n  const derivativeFuncForSolver = (dydt, y, t) => {\r\n      try { derivatives(dydt, y, t, currentParams); }\r\n      catch (e) { console.error(\"Error in derivatives:\", e); dydt.fill(0); }\r\n  };\r\n  const integrator = odeRK4(y0, derivativeFuncForSolver, t0, positiveDt);\r\n  const results = [{ time: integrator.t, state: [...integrator.y] }];\r\n  // console.log(`Starting simulation (${defaultParamSet['IsMush'] === 0 ? 'Mycelium' : 'Mushroom'}) for ${timeLength} days with params:`, currentParams);\r\n  if (numSteps <= 0) { console.warn(\"Sim length/step 0.\"); return []; }\r\n  for (let i = 0; i < numSteps; i++) {\r\n       try { integrator.step(); if (integrator.y.some(val => !Number.isFinite(val))) { console.error(\"Sim unstable t=\", integrator.t); } results.push({ time: integrator.t, state: [...integrator.y] }); }\r\n       catch (solverError) { console.error(\"RK4 step error:\", solverError); break; }\r\n  }\r\n  // console.log(`Simulation (${defaultParamSet['IsMush'] === 0 ? 'Mycelium' : 'Mushroom'}) finished.`);\r\n  return results.map(p => ({ time: p.time, CO2: p.state[0], ComplexC: p.state[1], MushroomYield: p.state[2], Mycelium: p.state[3], N: p.state[4], SimpleC: p.state[5], Space: p.state[6], Temp: p.state[7] }));\r\n}\r\n// --- (End of Simulation Functions) ---\r\n\r\n// Register ChartJS components\r\nChartJS.register(LineElement, PointElement, Tooltip, Legend, CategoryScale, LinearScale, Title);\r\n\r\n\r\n// *** NEW: Helper function to format the date ***\r\nfunction formatDate_DDMMYYYY(dateString) {\r\n  // Input is expected to be YYYY-MM-DD or potentially empty/null/\"N/A\"\r\n  if (!dateString || dateString === 'N/A' || !/^\\d{4}-\\d{2}-\\d{2}$/.test(dateString)) {\r\n      return 'N/A'; // Return 'N/A' if input is invalid or not in expected format\r\n  }\r\n  try {\r\n      const [year, month, day] = dateString.split('-');\r\n      return `${day}-${month}-${year}`; // Rearrange to DD-MM-YYYY\r\n  } catch (e) {\r\n      console.error(\"Error formatting date:\", e);\r\n      return 'N/A'; // Fallback on error\r\n  }\r\n}\r\n\r\n// --- React Component ---\r\nconst GrowthSimulation = () => {\r\n  const navigate = useNavigate();\r\n  const [simulationResults, setSimulationResults] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [batchName, setBatchName] = useState('');\r\n  const [startDate, setStartDate] = useState('');\r\n  const [finalSimulatedYield, setFinalSimulatedYield] = useState(null);\r\n  // Add 'mycelium' to possible active tabs, default to 'yield'\r\n  const [activeChartTab, setActiveChartTab] = useState('yield'); // 'yield', 'temp', 'mycelium'\r\n\r\n  // Consistent localStorage keys\r\n  const LOCAL_STORAGE_KEYS = {\r\n      TEMPERATURE: 'sim_temperature',\r\n      PH: 'sim_ph',\r\n      SUBSTRATE: 'sim_substrate',\r\n      SIMULATION_DAYS: 'sim_duration',\r\n      BATCH_NAME: 'sim_batch_name',\r\n      START_DATE: 'sim_start_date',\r\n  };\r\n\r\n  useEffect(() => {\r\n      let isMounted = true;\r\n      setIsLoading(true);\r\n      setError(null);\r\n      setFinalSimulatedYield(null);\r\n\r\n      setTimeout(() => {\r\n          if (!isMounted) return;\r\n          try {\r\n              // Load parameters (Batch Name and Start Date are correctly loaded here)\r\n              const savedTemperature = localStorage.getItem(LOCAL_STORAGE_KEYS.TEMPERATURE);\r\n              const savedPh = localStorage.getItem(LOCAL_STORAGE_KEYS.PH);\r\n              const savedSubstrateJson = localStorage.getItem(LOCAL_STORAGE_KEYS.SUBSTRATE);\r\n              const savedDays = localStorage.getItem(LOCAL_STORAGE_KEYS.SIMULATION_DAYS);\r\n              const savedBatchName = localStorage.getItem(LOCAL_STORAGE_KEYS.BATCH_NAME) || 'N/A'; // Correctly reads batch name\r\n              const savedStartDate = localStorage.getItem(LOCAL_STORAGE_KEYS.START_DATE) || 'N/A'; // Correctly reads start date\r\n\r\n              setBatchName(savedBatchName); // State is set\r\n              setStartDate(savedStartDate); // State is set\r\n\r\n              // --- Parameter validation and simulation run (same as before) ---\r\n              if (savedTemperature === null || savedPh === null || savedSubstrateJson === null || savedDays === null) {\r\n                  const missing = [ /* ... error message construction ... */ ].filter(Boolean).join(', ');\r\n                  throw new Error(`Missing required simulation parameters: ${missing}. Please set them in Condition Settings.`);\r\n              }\r\n              const temp = parseFloat(savedTemperature);\r\n              const phValue = parseFloat(savedPh);\r\n              const days = parseInt(savedDays, 10);\r\n              let substrateData = null;\r\n              let initialWeight = 0;\r\n              try {\r\n                  substrateData = JSON.parse(savedSubstrateJson);\r\n                  if (typeof substrateData !== 'object' || substrateData === null) throw new Error(\"Invalid substrate format.\");\r\n                  initialWeight = Object.values(substrateData).reduce((sum, val) => sum + (Number(val) || 0), 0);\r\n              } catch (parseError) { /* ... error handling ... */ throw parseError; }\r\n              if (isNaN(temp) || isNaN(phValue) || isNaN(initialWeight) || isNaN(days)) throw new Error(\"Invalid numerical parameters.\");\r\n              const simulationDuration = (days > 0) ? days : defaultParams.timeLength;\r\n              const simulationInputs = {\r\n                  'External Temp': temp,\r\n                  'pH': phValue,\r\n                  'Initial Dry Substrate Weight': initialWeight > 0 ? initialWeight : defaultParams['Initial Dry Substrate Weight'],\r\n                  'timeLength': simulationDuration,\r\n              };\r\n              const results = runSimulation(simulationInputs);\r\n              // --- (End of parameter validation and simulation run) ---\r\n\r\n\r\n              if (isMounted) {\r\n                   setSimulationResults(results);\r\n                   if (results && results.length > 0) {\r\n                       const lastResult = results[results.length - 1];\r\n                        if (lastResult && Number.isFinite(lastResult.MushroomYield)) {\r\n                            setFinalSimulatedYield(lastResult.MushroomYield);\r\n                        }\r\n                        console.log(\"Simulation ended at t=\", lastResult.time, \" Final State:\", lastResult);\r\n                   } else {\r\n                        console.log(\"Simulation produced no results.\");\r\n                   }\r\n               }\r\n\r\n          } catch (err) {\r\n              console.error(\"Error during simulation setup or run:\", err);\r\n              if (isMounted) setError(err.message || \"Failed to run simulation.\");\r\n          } finally {\r\n              if (isMounted) setIsLoading(false);\r\n          }\r\n      }, 50);\r\n\r\n      return () => { isMounted = false; };\r\n  }, []);\r\n\r\n  const handleBackClick = () => { navigate('/condition-setting'); };\r\n\r\n  // --- Chart Data & Options ---\r\n  const getChartConfig = () => {\r\n      if (!simulationResults || simulationResults.length === 0) {\r\n          return { data: { datasets: [] }, options: {} };\r\n      }\r\n\r\n      const yieldColor = '#2E7D32';\r\n      const tempColor = '#C62828';\r\n      const myceliumColor = '#1976D2'; // Blue for Mycelium\r\n      const textColor = '#333';\r\n      const gridColor = 'rgba(0, 0, 0, 0.08)';\r\n\r\n      let datasets = [];\r\n      const options = {\r\n          responsive: true, maintainAspectRatio: false,\r\n          plugins: { /* ... legend, tooltip, title config ... */\r\n              legend: { display: true, labels: { color: textColor, font: { family: 'Lexend'} } },\r\n              tooltip: { enabled: true, bodyFont: { family: 'Lexend'}, titleFont: { family: 'Lexend' } },\r\n              title: { display: true, text: '', color: textColor, font: { size: 16, family: 'Lexend' } }\r\n           },\r\n          scales: {\r\n              x: { /* ... x-axis config ... */\r\n                  type: 'linear', title: { display: true, text: 'Time (Days)', color: textColor, font: { family: 'Lexend'} },\r\n                  ticks: { color: textColor, font: { family: 'Lexend'} }, grid: { color: gridColor }, min: 0,\r\n               },\r\n              // Define ALL potential Y axes\r\n              yYield: { type: 'linear', position: 'left', title: { display: true, text: 'Yield (g)', color: yieldColor, font: { family: 'Lexend'} }, ticks: { color: yieldColor, font: { family: 'Lexend'} }, grid: { drawOnChartArea: false }, beginAtZero: true, display: false }, // Initially hidden\r\n              yTemp: { type: 'linear', position: 'left', title: { display: true, text: 'Temperature (°C)', color: tempColor, font: { family: 'Lexend'} }, ticks: { color: tempColor, font: { family: 'Lexend'} }, grid: { drawOnChartArea: false }, beginAtZero: false, display: false }, // Initially hidden\r\n              yMycelium: { type: 'linear', position: 'left', title: { display: true, text: 'Mycelium Density', color: myceliumColor, font: { family: 'Lexend'} }, ticks: { color: myceliumColor, font: { family: 'Lexend'} }, grid: { drawOnChartArea: false }, beginAtZero: true, suggestedMax: 1, display: false } // Initially hidden\r\n          }\r\n      };\r\n\r\n      // Reset display for all axes before setting the active one\r\n      options.scales.yYield.display = false;\r\n      options.scales.yTemp.display = false;\r\n      options.scales.yMycelium.display = false;\r\n\r\n\r\n      switch (activeChartTab) {\r\n          case 'yield':\r\n              options.plugins.title.text = 'Yield Over Time';\r\n              options.scales.yYield.display = true; // Show this axis\r\n              datasets = [{\r\n                  label: 'Mushroom Yield (g)',\r\n                  data: simulationResults.map(p => ({ x: p.time, y: Number.isFinite(p.MushroomYield) ? p.MushroomYield : null })),\r\n                  borderColor: yieldColor, backgroundColor: 'rgba(46, 125, 50, 0.1)',\r\n                  yAxisID: 'yYield',\r\n              }];\r\n              break;\r\n          case 'temp':\r\n               options.plugins.title.text = 'Temperature Over Time';\r\n               options.scales.yTemp.display = true; // Show this axis\r\n               datasets = [{\r\n                   label: 'Temperature (°C)',\r\n                   data: simulationResults.map(p => ({ x: p.time, y: Number.isFinite(p.Temp) ? p.Temp : null })),\r\n                   borderColor: tempColor, backgroundColor: 'rgba(198, 40, 40, 0.1)',\r\n                   yAxisID: 'yTemp',\r\n               }];\r\n               break;\r\n          // *** ADD CASE FOR MYCELIUM ***\r\n          case 'mycelium':\r\n               options.plugins.title.text = 'Mycelium Growth Over Time';\r\n               options.scales.yMycelium.display = true; // Show this axis\r\n               datasets = [{\r\n                   label: 'Mycelium Density', // Or 'Mycelium Growth'\r\n                   data: simulationResults.map(p => ({ x: p.time, y: Number.isFinite(p.Mycelium) ? p.Mycelium : null })),\r\n                   borderColor: myceliumColor, backgroundColor: 'rgba(25, 118, 210, 0.1)',\r\n                   yAxisID: 'yMycelium',\r\n               }];\r\n               break;\r\n          default:\r\n              datasets = [];\r\n      }\r\n\r\n      return {\r\n           data: { datasets: datasets.map(ds => ({ ...ds, tension: 0.1, pointRadius: 2, spanGaps: true })) },\r\n           options: options\r\n      };\r\n  };\r\n\r\n  const chartConfig = getChartConfig();\r\n\r\n  // --- JSX ---\r\n  return (\r\n       <div className=\"growth-simulation\">\r\n           <header className=\"simulation-header\">\r\n               <div className=\"logobox\">\r\n                   <div className=\"logo\">\r\n                       <img src={logoSrc} alt=\"City Sprouts Logo\" />\r\n                   </div>\r\n               </div>\r\n               {/* These values are correctly set from localStorage via useEffect */}\r\n               <div className=\"batch-info\">\r\n                   <span className=\"batch-name\">Batch: {batchName}</span>\r\n                   <span className=\"start-date\">Start Date: {formatDate_DDMMYYYY(startDate)}</span>\r\n               </div>\r\n           </header>\r\n\r\n           <main className=\"main-content-grid\">\r\n               <div className=\"animation-area content-card\">\r\n                   <span>Animation</span>\r\n               </div>\r\n\r\n               <div className=\"chart-results-column\">\r\n                   <div className=\"tabs-container\">\r\n                       <button\r\n                           onClick={() => setActiveChartTab('yield')}\r\n                           className={`tab-button ${activeChartTab === 'yield' ? 'tab-button-active' : ''}`}\r\n                       > Yield over Time </button>\r\n                       <button\r\n                           onClick={() => setActiveChartTab('temp')}\r\n                            className={`tab-button ${activeChartTab === 'temp' ? 'tab-button-active' : ''}`}\r\n                       > Temperature </button>\r\n                       {/* *** ADD MYCELIUM TAB BUTTON *** */}\r\n                       <button\r\n                           onClick={() => setActiveChartTab('mycelium')}\r\n                            className={`tab-button ${activeChartTab === 'mycelium' ? 'tab-button-active' : ''}`}\r\n                       > Mycelium </button>\r\n                   </div>\r\n\r\n                   <div className=\"chart-area content-card\">\r\n                          {/* Updated Loading/Error checks */}\r\n                          {isLoading && <p className=\"loading-message\">Running simulations...</p>}\r\n                          {error && <p className=\"error-message\">Error: {error}</p>}\r\n                          {!isLoading && !error && simulationDataReady && ( // Check if *any* data is ready\r\n                               chartConfig.data.datasets.length > 0 && chartConfig.data.datasets[0].data.length > 0 ? ( // Check if current tab has data\r\n                                   <div className=\"chart-container\"> <Line options={chartConfig.options} data={chartConfig.data} /> </div>\r\n                               ) : ( <p className=\"no-data-message\">No data available for this chart.</p> ) // Show if specific chart has no data\r\n                          )}\r\n                          {!isLoading && !error && !simulationDataReady && <p className=\"no-data-message\">Simulation results not available.</p>}\r\n                     </div>\r\n\r\n                   <div className=\"results-section content-card\">\r\n                        {/* Results Display Logic (no changes needed here) */}\r\n                        <h3 className=\"results-heading\"> Results <span className=\"info-icon\" title=\"Key simulation outputs based on initial conditions\">i</span> </h3>\r\n                       <div className=\"results-items\">\r\n                           <div className=\"result-item\">\r\n                               <span className=\"result-label\">Projected Yield:</span>\r\n                               <span className=\"result-value\">\r\n                                   {isLoading ? '...' : error ? 'Error' : Number.isFinite(finalSimulatedYield) ? `${finalSimulatedYield.toFixed(1)}g` : 'N/A'}\r\n                               </span>\r\n                           </div>\r\n                           <div className=\"result-item\">\r\n                               <span className=\"result-label\">Initial C:N Ratio:</span>\r\n                               <span className=\"result-value\">\r\n                                   {FIXED_CN_RATIO.toFixed(2)}\r\n                               </span>\r\n                           </div>\r\n                       </div>\r\n                   </div>\r\n               </div>\r\n           </main>\r\n       </div>\r\n   );\r\n};\r\n\r\nexport default GrowthSimulation;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}