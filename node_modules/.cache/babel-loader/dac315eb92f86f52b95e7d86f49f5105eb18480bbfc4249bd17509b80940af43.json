{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\celst\\\\sds\\\\src\\\\components\\\\ConditionSetting.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Pie } from 'react-chartjs-2';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/ConditionSetting.css'; // Import the CSS file\n// Removed logoSrc import as the navbar is removed for this page based on CSS/UI context\nimport logoSrc from '../assets/images/cslogo.png';\n\n// Register required components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\nconst ConditionSetting = () => {\n  _s();\n  const navigate = useNavigate();\n\n  // --- State Variables ---\n  const [temperature, setTemperature] = useState(25);\n  const [ph, setPh] = useState(7.0);\n  const [substrate, setSubstrate] = useState({\n    riceBran: 25,\n    corn: 25,\n    sugarcane: 25,\n    sawdust: 25\n  });\n  const [totalSubstrate, setTotalSubstrate] = useState(100);\n  const [simulationDays, setSimulationDays] = useState(40);\n  const [batchName, setBatchName] = useState('');\n  const [startDate, setStartDate] = useState('');\n\n  // --- Labels ---\n  const substrateLabels = {\n    riceBran: 'Rice Bran',\n    corn: 'Corn Cob',\n    sugarcane: 'Sugarcane',\n    sawdust: 'Sawdust'\n  };\n\n  // --- Event Handlers ---\n  const handleStartClick = () => {\n    // Save relevant parameters to localStorage\n    localStorage.setItem('substrate', JSON.stringify(substrate));\n    localStorage.setItem('temperature', temperature);\n    localStorage.setItem('ph', ph);\n    localStorage.setItem('yield', totalSubstrate);\n    localStorage.setItem('simulationDays', simulationDays);\n    localStorage.setItem('batchName', batchName);\n    localStorage.setItem('startDate', startDate);\n    console.log('Saved to localStorage:', {\n      substrate,\n      temperature,\n      ph,\n      totalSubstrate,\n      simulationDays,\n      batchName,\n      startDate\n    });\n    navigate('/growth-simulation');\n  };\n  const handleBackClick = () => {\n    navigate('/'); // Navigate back to the Landing Page\n  };\n\n  // Generic handler for number inputs (like Temp, pH)\n  const handleNumberChange = (setter, min, max, value, allowFloat = false) => {\n    const numericValue = allowFloat ? parseFloat(value) : parseInt(value, 10);\n    if (value === '') {\n      setter('');\n      return;\n    }\n    if (isNaN(numericValue)) {\n      return;\n    }\n    const clampedValue = Math.max(min, Math.min(max, numericValue));\n    setter(clampedValue);\n  };\n  const handleSubstrateChange = (key, value) => {\n    const numericValue = parseInt(value, 10);\n    if (value === '') {\n      setSubstrate(prev => ({\n        ...prev,\n        [key]: ''\n      }));\n    } else if (isNaN(numericValue) || numericValue < 0) {\n      setSubstrate(prev => ({\n        ...prev,\n        [key]: prev[key] === '' ? 0 : prev[key]\n      }));\n    } else {\n      setSubstrate(prev => ({\n        ...prev,\n        [key]: numericValue\n      }));\n    }\n  };\n  const handleDaysChange = e => {\n    const value = e.target.value;\n    if (value === '') {\n      setSimulationDays('');\n      return;\n    }\n    const numericValue = parseInt(value, 10);\n    const min = 1;\n    const max = 365;\n    if (!isNaN(numericValue) && numericValue >= min && numericValue <= max) {\n      setSimulationDays(numericValue);\n    } else if (!isNaN(numericValue) && numericValue < min) {\n      setSimulationDays(min);\n    } else if (!isNaN(numericValue) && numericValue > max) {\n      setSimulationDays(max);\n    }\n  };\n\n  // --- Effects ---\n  useEffect(() => {\n    // Calculate the total substrate weight\n    const total = Object.values(substrate).reduce((sum, weight) => sum + (Number(weight) || 0), 0);\n    setTotalSubstrate(total);\n  }, [substrate]);\n\n  // --- Chart Configuration ---\n  const pieOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'bottom',\n        labels: {\n          color: '#6b4f4b',\n          // Use CSS variable color or hardcode\n          font: {\n            size: 12,\n            family: \"'Lexend', sans-serif\"\n          },\n          // Match body font\n          boxWidth: 15,\n          padding: 15\n        }\n      }\n    }\n  };\n  const pieData = {\n    labels: Object.keys(substrate).map(key => substrateLabels[key]),\n    datasets: [{\n      data: totalSubstrate > 0 ? Object.values(substrate).map(v => Number(v) || 0) : [1],\n      backgroundColor: totalSubstrate > 0 ? ['#e1c699', '#7E9777', '#FF914D', '#8B4513'] // Example colors\n      : ['#d3d3d3'],\n      borderColor: '#f5f2e9',\n      // Match background\n      borderWidth: totalSubstrate > 0 ? 2 : 0\n    }]\n  };\n\n  // --- JSX ---\n  return (\n    /*#__PURE__*/\n    // Use the main class from your CSS\n    _jsxDEV(\"div\", {\n      className: \"condition-setting\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logoSrc,\n        alt: \"Logo\",\n        className: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"condition-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"back-button\",\n          onClick: handleBackClick,\n          children: \"\\u2190\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Set Your Growing Conditions!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"condition-main-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Environmental Conditions\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"info-icon\",\n                title: \"Set temperature (20-30\\xB0C) and pH (6.0-7.0) for growth\",\n                children: \"(i)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"temperature\",\n                children: \"Temperature (\\xB0C):\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"temperature\",\n                type: \"number\",\n                min: \"20\",\n                max: \"30\",\n                step: \"1\",\n                value: temperature,\n                onChange: e => handleNumberChange(setTemperature, 20, 30, e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"ph\",\n                children: \"pH:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"ph\",\n                type: \"number\",\n                min: \"6.0\",\n                max: \"7.0\",\n                step: \"0.1\",\n                value: ph,\n                onChange: e => handleNumberChange(setPh, 6.0, 7.0, e.target.value, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Substrate Composition\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"info-icon\",\n                title: \"Enter weight in grams for each component\",\n                children: \"(i)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 26\n            }, this), Object.keys(substrate).map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `substrate-${key}`,\n                children: [substrateLabels[key], \" (g):\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: `substrate-${key}`,\n                type: \"number\",\n                min: \"0\",\n                value: substrate[key],\n                onChange: e => handleSubstrateChange(key, e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 33\n              }, this)]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 29\n            }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"total-substrate\",\n              children: [\"Total: \", totalSubstrate, \"g\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 26\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right-column\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Your Substrate Composition\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pie-chart-container\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"pie-chart\",\n                children: totalSubstrate > 0 ? /*#__PURE__*/_jsxDEV(Pie, {\n                  data: pieData,\n                  options: pieOptions\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 36\n                }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"pie-chart-placeholder\",\n                  children: \"Enter substrate values to see chart.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"additional-inputs\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"batchName\",\n                  children: \"Batch Name:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"batchName\",\n                  type: \"text\",\n                  value: batchName,\n                  onChange: e => setBatchName(e.target.value),\n                  placeholder: \"e.g., Spring Batch 1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 30\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"startDate\",\n                  children: \"Start Date:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"startDate\",\n                  type: \"date\",\n                  value: startDate,\n                  onChange: e => setStartDate(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 30\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-group span-cols-2\",\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"simulationDays\",\n                  children: \"Cultivation Duration (Days):\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"simulationDays\",\n                  type: \"number\",\n                  min: \"1\",\n                  max: \"365\",\n                  step: \"1\",\n                  value: simulationDays,\n                  onChange: handleDaysChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 30\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"footer-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"start-button\",\n          onClick: handleStartClick,\n          children: \"Start Growing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this)\n  );\n};\n_s(ConditionSetting, \"/iPa20h2gmHtPqoYofy2nSf9w/c=\", false, function () {\n  return [useNavigate];\n});\n_c = ConditionSetting;\nexport default ConditionSetting;\nvar _c;\n$RefreshReg$(_c, \"ConditionSetting\");","map":{"version":3,"names":["React","useState","useEffect","Pie","Chart","ChartJS","ArcElement","Tooltip","Legend","useNavigate","logoSrc","jsxDEV","_jsxDEV","register","ConditionSetting","_s","navigate","temperature","setTemperature","ph","setPh","substrate","setSubstrate","riceBran","corn","sugarcane","sawdust","totalSubstrate","setTotalSubstrate","simulationDays","setSimulationDays","batchName","setBatchName","startDate","setStartDate","substrateLabels","handleStartClick","localStorage","setItem","JSON","stringify","console","log","handleBackClick","handleNumberChange","setter","min","max","value","allowFloat","numericValue","parseFloat","parseInt","isNaN","clampedValue","Math","handleSubstrateChange","key","prev","handleDaysChange","e","target","total","Object","values","reduce","sum","weight","Number","pieOptions","responsive","maintainAspectRatio","plugins","legend","position","labels","color","font","size","family","boxWidth","padding","pieData","keys","map","datasets","data","v","backgroundColor","borderColor","borderWidth","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","htmlFor","id","type","step","onChange","options","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/celst/sds/src/components/ConditionSetting.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../styles/ConditionSetting.css'; // Import the CSS file\r\n// Removed logoSrc import as the navbar is removed for this page based on CSS/UI context\r\nimport logoSrc from '../assets/images/cslogo.png';\r\n\r\n// Register required components\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\nconst ConditionSetting = () => {\r\n    const navigate = useNavigate();\r\n\r\n    // --- State Variables ---\r\n    const [temperature, setTemperature] = useState(25);\r\n    const [ph, setPh] = useState(7.0);\r\n    const [substrate, setSubstrate] = useState({\r\n        riceBran: 25,\r\n        corn: 25,\r\n        sugarcane: 25,\r\n        sawdust: 25,\r\n    });\r\n    const [totalSubstrate, setTotalSubstrate] = useState(100);\r\n    const [simulationDays, setSimulationDays] = useState(40);\r\n    const [batchName, setBatchName] = useState('');\r\n    const [startDate, setStartDate] = useState('');\r\n\r\n    // --- Labels ---\r\n    const substrateLabels = {\r\n        riceBran: 'Rice Bran',\r\n        corn: 'Corn Cob',\r\n        sugarcane: 'Sugarcane',\r\n        sawdust: 'Sawdust',\r\n    };\r\n\r\n    // --- Event Handlers ---\r\n    const handleStartClick = () => {\r\n        // Save relevant parameters to localStorage\r\n        localStorage.setItem('substrate', JSON.stringify(substrate));\r\n        localStorage.setItem('temperature', temperature);\r\n        localStorage.setItem('ph', ph);\r\n        localStorage.setItem('yield', totalSubstrate);\r\n        localStorage.setItem('simulationDays', simulationDays);\r\n        localStorage.setItem('batchName', batchName);\r\n        localStorage.setItem('startDate', startDate);\r\n        console.log('Saved to localStorage:', { substrate, temperature, ph, totalSubstrate, simulationDays, batchName, startDate });\r\n        navigate('/growth-simulation');\r\n    };\r\n\r\n    const handleBackClick = () => {\r\n        navigate('/'); // Navigate back to the Landing Page\r\n    };\r\n\r\n    // Generic handler for number inputs (like Temp, pH)\r\n    const handleNumberChange = (setter, min, max, value, allowFloat = false) => {\r\n         const numericValue = allowFloat ? parseFloat(value) : parseInt(value, 10);\r\n         if (value === '') { setter(''); return; }\r\n         if (isNaN(numericValue)) { return; }\r\n         const clampedValue = Math.max(min, Math.min(max, numericValue));\r\n         setter(clampedValue);\r\n    };\r\n\r\n     const handleSubstrateChange = (key, value) => {\r\n        const numericValue = parseInt(value, 10);\r\n         if (value === '') {\r\n             setSubstrate((prev) => ({ ...prev, [key]: '' }));\r\n         } else if (isNaN(numericValue) || numericValue < 0) {\r\n             setSubstrate((prev) => ({ ...prev, [key]: prev[key] === '' ? 0 : prev[key] }));\r\n         } else {\r\n             setSubstrate((prev) => ({ ...prev, [key]: numericValue }));\r\n         }\r\n    };\r\n\r\n    const handleDaysChange = (e) => {\r\n        const value = e.target.value;\r\n         if (value === '') { setSimulationDays(''); return; }\r\n        const numericValue = parseInt(value, 10);\r\n        const min = 1; const max = 365;\r\n        if (!isNaN(numericValue) && numericValue >= min && numericValue <= max) {\r\n             setSimulationDays(numericValue);\r\n        } else if (!isNaN(numericValue) && numericValue < min) {\r\n             setSimulationDays(min);\r\n        } else if (!isNaN(numericValue) && numericValue > max) {\r\n             setSimulationDays(max);\r\n        }\r\n    };\r\n\r\n    // --- Effects ---\r\n    useEffect(() => {\r\n        // Calculate the total substrate weight\r\n        const total = Object.values(substrate).reduce((sum, weight) => sum + (Number(weight) || 0), 0);\r\n        setTotalSubstrate(total);\r\n    }, [substrate]);\r\n\r\n    // --- Chart Configuration ---\r\n    const pieOptions = {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        plugins: {\r\n            legend: {\r\n                position: 'bottom',\r\n                labels: {\r\n                    color: '#6b4f4b', // Use CSS variable color or hardcode\r\n                    font: { size: 12, family: \"'Lexend', sans-serif\" }, // Match body font\r\n                    boxWidth: 15,\r\n                    padding: 15\r\n                }\r\n            },\r\n        },\r\n    };\r\n\r\n    const pieData = {\r\n        labels: Object.keys(substrate).map(key => substrateLabels[key]),\r\n        datasets: [\r\n            {\r\n                data: totalSubstrate > 0 ? Object.values(substrate).map(v => Number(v) || 0) : [1],\r\n                backgroundColor: totalSubstrate > 0\r\n                    ? ['#e1c699', '#7E9777', '#FF914D', '#8B4513'] // Example colors\r\n                    : ['#d3d3d3'],\r\n                borderColor: '#f5f2e9', // Match background\r\n                borderWidth: totalSubstrate > 0 ? 2 : 0,\r\n            },\r\n        ],\r\n    };\r\n\r\n    // --- JSX ---\r\n    return (\r\n\r\n        // Use the main class from your CSS\r\n        <div className=\"condition-setting\">\r\n          <img src={logoSrc} alt=\"Logo\" className=\"logo\" /> {/* Logo for the page */}\r\n            {/* Removed Navbar from this component */}\r\n            <header className=\"condition-header\">\r\n                <button className=\"back-button\" onClick={handleBackClick}>←</button>\r\n                <h1>Set Your Growing Conditions!</h1>\r\n            </header>\r\n\r\n            {/* Apply the two-column layout structure expected by the CSS */}\r\n            {/* Use the main content class from your CSS */}\r\n            <main className=\"condition-main-content\">\r\n\r\n                 {/* Left Column */}\r\n                 <div className=\"left-column\">\r\n                    {/* Environmental Conditions Card */}\r\n                    <div className=\"input-card\">\r\n                        <h3>\r\n                            Environmental Conditions\r\n                            <span className=\"info-icon\" title=\"Set temperature (20-30°C) and pH (6.0-7.0) for growth\">(i)</span>\r\n                        </h3>\r\n                        {/* Input Groups */}\r\n                        <div className=\"input-group\">\r\n                            <label htmlFor=\"temperature\">Temperature (°C):</label>\r\n                            <input\r\n                                id=\"temperature\" type=\"number\" min=\"20\" max=\"30\" step=\"1\"\r\n                                value={temperature}\r\n                                onChange={(e) => handleNumberChange(setTemperature, 20, 30, e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label htmlFor=\"ph\">pH:</label>\r\n                            <input\r\n                                id=\"ph\" type=\"number\" min=\"6.0\" max=\"7.0\" step=\"0.1\"\r\n                                value={ph}\r\n                                onChange={(e) => handleNumberChange(setPh, 6.0, 7.0, e.target.value, true)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Substrate Composition Card */}\r\n                    <div className=\"input-card\">\r\n                         <h3>\r\n                            Substrate Composition\r\n                            <span className=\"info-icon\" title=\"Enter weight in grams for each component\">(i)</span>\r\n                         </h3>\r\n                        {/* Map through substrate inputs */}\r\n                        {Object.keys(substrate).map((key) => (\r\n                            <div key={key} className=\"input-group\">\r\n                                <label htmlFor={`substrate-${key}`}>{substrateLabels[key]} (g):</label>\r\n                                <input\r\n                                    id={`substrate-${key}`} type=\"number\" min=\"0\"\r\n                                    value={substrate[key]}\r\n                                    onChange={(e) => handleSubstrateChange(key, e.target.value)}\r\n                                />\r\n                            </div>\r\n                        ))}\r\n                         {/* Display Total Substrate */}\r\n                         <div className=\"total-substrate\">\r\n                            Total: {totalSubstrate}g\r\n                         </div>\r\n                    </div>\r\n                 </div>\r\n\r\n                 {/* Right Column */}\r\n                 <div className=\"right-column\">\r\n                     {/* Chart and Other Details Card */}\r\n                     <div className=\"chart-card\">\r\n                        <h3>Your Substrate Composition</h3>\r\n                        <div className=\"pie-chart-container\">\r\n                            <div className=\"pie-chart\">\r\n                                {totalSubstrate > 0 ? (\r\n                                   <Pie data={pieData} options={pieOptions} />\r\n                                ) : (\r\n                                    <p className=\"pie-chart-placeholder\">\r\n                                        Enter substrate values to see chart.\r\n                                    </p>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Additional Inputs */}\r\n                        <div className=\"additional-inputs\">\r\n                             <div className=\"input-group\">\r\n                                <label htmlFor=\"batchName\">Batch Name:</label>\r\n                                <input\r\n                                    id=\"batchName\" type=\"text\" value={batchName}\r\n                                    onChange={(e) => setBatchName(e.target.value)}\r\n                                    placeholder=\"e.g., Spring Batch 1\"\r\n                                />\r\n                            </div>\r\n                             <div className=\"input-group\">\r\n                                <label htmlFor=\"startDate\">Start Date:</label>\r\n                                <input\r\n                                    id=\"startDate\" type=\"date\" value={startDate}\r\n                                    onChange={(e) => setStartDate(e.target.value)}\r\n                                />\r\n                            </div>\r\n                             <div className=\"input-group span-cols-2\"> {/* Ensure span-cols-2 class exists and works in your CSS if needed */}\r\n                                <label htmlFor=\"simulationDays\">Cultivation Duration (Days):</label>\r\n                                <input\r\n                                    id=\"simulationDays\" type=\"number\" min=\"1\" max=\"365\" step=\"1\"\r\n                                    value={simulationDays}\r\n                                    onChange={handleDaysChange}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                 </div>\r\n            </main>\r\n\r\n            {/* Footer / Start Button Area */}\r\n            <footer className=\"footer-container\">\r\n                 <button className=\"start-button\" onClick={handleStartClick}>\r\n                    Start Growing\r\n                </button>\r\n            </footer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ConditionSetting;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}