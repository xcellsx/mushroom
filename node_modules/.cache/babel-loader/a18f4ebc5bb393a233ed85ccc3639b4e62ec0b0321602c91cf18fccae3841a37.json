{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\celst\\\\sds\\\\src\\\\components\\\\GrowthSimulation.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, LineElement, PointElement, Tooltip, Legend, CategoryScale, LinearScale, Title } from 'chart.js';\nimport odeRK4 from 'ode-rk4';\nimport '../styles/GrowthSimulation.css'; // Import the CSS file\nimport logoSrc from '../assets/images/cslogo.png';\n\n// --- Simulation Logic & ChartJS Registration ---\n\n// Default Model Parameters\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultParams = {\n  timeStart: 0,\n  timeLength: 100,\n  timeStep: 0.2,\n  'C BD Rate': 1.11,\n  'C Coeff': 0.7,\n  'C Cons. Rate': 76.39,\n  'CO2 Coeff': 0.8,\n  'CO2 Production Rate': 410000,\n  'CO2 Removal Rate': 12.6,\n  'External CO2': 428.23,\n  'External Temp': 24,\n  'Growth Coeff': 5.1,\n  // 'Initial C:N Ratio': 43.58, // Overridden by FIXED_CN_RATIO\n  'Initial Complex:Simple Ratio': 0.8054,\n  'Initial Dry Substrate Weight': 410.2,\n  'IsMush': 1,\n  'Mushroom Multiplier': 5.17,\n  'N Coeff': 68.4,\n  'N Rate': 13.03,\n  'pH': 6.91,\n  'pH Coeff': 1.4,\n  'Temp Coeff': 1.3,\n  'Temp Production Rate': 405,\n  'Temp Transfer Rate': 1.5,\n  'Effect of CO2 on Mush Growth Data': [[500, 0.9], [800, 1], [1000, 0.8], [1200, 0.25], [1400, 0]],\n  'Effect of CO2 on Myc Growth Data': [[15000, 1], [20000, 0.9], [25000, 0.25], [30000, 0]],\n  'Effect of pH on Mush Growth Data': [[5.5, 0], [6, 0.25], [6.7, 1], [7, 0.6], [7.5, 0]],\n  'Effect of pH on Myc Growth Data': [[5.8, 0], [6, 0.25], [6.7, 1], [7, 0.6], [7.5, 0]],\n  'Effect of Temp on Mush Growth Data': [[10, 0], [15, 5.37], [20, 6.36], [25, 8.63], [30, 6.37], [40, 0]],\n  'Effect of Temp on Myc Growth Data': [[10, 0], [15, 5.37], [20, 6.36], [25, 8.63], [30, 6.37], [35, 5.36], [45, 0]]\n};\n\n// FIXED C:N Ratio as requested\nconst FIXED_CN_RATIO = 0.96;\n\n// Helper function for Linear Interpolation\nfunction linearInterpolate(data, x) {\n  if (!data || data.length === 0) return 0;\n  if (x <= data[0][0]) return data[0][1];\n  if (x >= data[data.length - 1][0]) return data[data.length - 1][1];\n  let i = 0;\n  while (i < data.length - 1 && x > data[i + 1][0]) i++;\n  const x0 = data[i][0],\n    y0 = data[i][1],\n    x1 = data[i + 1][0],\n    y1 = data[i + 1][1];\n  const divisor = x1 - x0;\n  if (divisor === 0) return y0;\n  const t = (x - x0) / divisor;\n  return y0 + t * (y1 - y0);\n}\n\n// Derivative Function\nfunction derivatives(dydt, y, t, currentParams) {\n  const [currentCO2, currentComplexC, currentMushroomYield, currentMycelium, currentN, currentSimpleC, currentSpace, currentTemp] = y;\n  const initialDrySubstrateWeight = currentParams['Initial Dry Substrate Weight'] || 1;\n  const cnRatio = currentParams['Initial C:N Ratio'];\n  const cnRatioPlusOne = cnRatio + 1;\n  const InitC = initialDrySubstrateWeight - initialDrySubstrateWeight / cnRatioPlusOne;\n  const AvailableN = currentN / initialDrySubstrateWeight;\n  const AvailableC = currentSimpleC / initialDrySubstrateWeight;\n  const NEffect = currentParams['N Coeff'] * AvailableN;\n  const CEffect = Math.sqrt(Math.max(0, currentParams['C Coeff'] * AvailableC));\n  const VolumeNormalisation = Math.sqrt(100 / initialDrySubstrateWeight);\n  const Effect_of_CO2_on_Mush_Growth = linearInterpolate(currentParams['Effect of CO2 on Mush Growth Data'], currentCO2);\n  const Effect_of_CO2_on_Myc_Growth = linearInterpolate(currentParams['Effect of CO2 on Myc Growth Data'], currentCO2);\n  const Effect_of_pH_on_Mush_Growth = linearInterpolate(currentParams['Effect of pH on Mush Growth Data'], currentParams['pH']);\n  const Effect_of_pH_on_Myc_Growth = linearInterpolate(currentParams['Effect of pH on Myc Growth Data'], currentParams['pH']);\n  const Effect_of_Temp_on_Mush_Growth = linearInterpolate(currentParams['Effect of Temp on Mush Growth Data'], currentTemp);\n  const Effect_of_Temp_on_Myc_Growth = linearInterpolate(currentParams['Effect of Temp on Myc Growth Data'], currentTemp);\n  const TempEff_ = currentParams['IsMush'] === 0 ? Effect_of_Temp_on_Myc_Growth : Effect_of_Temp_on_Mush_Growth;\n  const TempEffect = currentParams['Temp Coeff'] * TempEff_ / 10;\n  const pHEff_ = currentParams['IsMush'] === 0 ? Effect_of_pH_on_Myc_Growth : Effect_of_pH_on_Mush_Growth;\n  const pHEffect = pHEff_ * currentParams['pH Coeff'];\n  const CO2Eff_ = currentParams['IsMush'] === 0 ? Effect_of_CO2_on_Myc_Growth : Effect_of_CO2_on_Mush_Growth;\n  const CO2Effect = currentParams['CO2 Coeff'] * CO2Eff_;\n  const RawGrowthRate = TempEffect * pHEffect * NEffect * CEffect * CO2Effect;\n  const GrowthOpp = currentSpace * currentMycelium;\n  let GrowthRate = currentParams['IsMush'] === 1 ? RawGrowthRate * currentParams['Growth Coeff'] : RawGrowthRate * GrowthOpp * currentParams['Growth Coeff'];\n  GrowthRate = Math.max(0, GrowthRate);\n  let NormGrowthRate = currentParams['IsMush'] === 1 ? GrowthRate / 100 : GrowthRate;\n  const flow_Breakdown = currentMycelium * currentParams['C BD Rate'] * currentComplexC * RawGrowthRate * VolumeNormalisation;\n  const flow_CCons = NormGrowthRate * currentParams['C Cons. Rate'];\n  const flow_CO2Prod = NormGrowthRate * currentParams['CO2 Production Rate'];\n  const flow_CO2Vent = currentParams['CO2 Removal Rate'] * (currentCO2 - currentParams['External CO2']) * VolumeNormalisation;\n  const flow_Colonisation = currentParams['IsMush'] === 0 ? GrowthRate : 0;\n  const flow_MushroomGrowth = currentParams['IsMush'] === 1 ? GrowthRate * currentParams['Mushroom Multiplier'] : 0;\n  const flow_NCons = NormGrowthRate * currentParams['N Rate'];\n  const flow_TempProd = NormGrowthRate * currentParams['Temp Production Rate'];\n  const flow_TempVent = (currentTemp - currentParams['External Temp']) * currentParams['Temp Transfer Rate'] * VolumeNormalisation;\n  dydt[0] = flow_CO2Prod - flow_CO2Vent;\n  dydt[1] = -flow_Breakdown;\n  dydt[2] = flow_MushroomGrowth;\n  dydt[3] = flow_Colonisation;\n  dydt[4] = -flow_NCons;\n  dydt[5] = flow_Breakdown - flow_CCons;\n  dydt[6] = -flow_Colonisation;\n  dydt[7] = flow_TempProd - flow_TempVent;\n  if (currentCO2 <= 0 && dydt[0] < 0) dydt[0] = 0;\n  if (currentComplexC <= 0 && dydt[1] < 0) dydt[1] = 0;\n  if (currentMushroomYield <= 0 && dydt[2] < 0) dydt[2] = 0;\n  if (currentMycelium <= 0 && dydt[3] < 0) dydt[3] = 0;\n  if (currentN <= 0 && dydt[4] < 0) dydt[4] = 0;\n  if (currentSimpleC <= 0 && dydt[5] < 0) dydt[5] = 0;\n  if (currentSpace <= 0 && dydt[6] < 0) dydt[6] = 0;\n  if (currentTemp <= 0 && dydt[7] < 0) dydt[7] = 0;\n}\n\n// Initial State Calculation\nfunction getInitialState(p) {\n  const initialDrySubstrateWeight = Number(p['Initial Dry Substrate Weight']) || defaultParams['Initial Dry Substrate Weight'];\n  const cnRatio = Number(p['Initial C:N Ratio']);\n  const complexSimpleRatio = Number(p['Initial Complex:Simple Ratio']) || defaultParams['Initial Complex:Simple Ratio'];\n  const cnRatioPlusOne = cnRatio + 1;\n  const Init_C = initialDrySubstrateWeight - initialDrySubstrateWeight / cnRatioPlusOne;\n  return [Number(p['External CO2']) || defaultParams['External CO2'], Init_C * complexSimpleRatio, 0, 0.01,\n  // Start Mycelium low\n  initialDrySubstrateWeight / cnRatioPlusOne, Init_C * (1 - complexSimpleRatio), 1 - 0.01,\n  // Start Space high\n  Number(p['External Temp']) || defaultParams['External Temp']];\n}\n\n// Run Simulation Function\nfunction runSimulation(inputParams) {\n  const currentParams = {\n    ...defaultParams,\n    ...inputParams,\n    'Initial C:N Ratio': FIXED_CN_RATIO // Force the C:N Ratio\n  };\n  const y0 = getInitialState(currentParams);\n  const t0 = currentParams.timeStart;\n  const dt = currentParams.timeStep;\n  const timeLength = Math.max(0, currentParams.timeLength);\n  const positiveDt = Math.max(dt, 1e-6);\n  const numSteps = Math.floor(timeLength / positiveDt);\n  const derivativeFuncForSolver = (dydt, y, t) => {\n    try {\n      derivatives(dydt, y, t, currentParams);\n    } catch (e) {\n      console.error(\"Error in derivatives function:\", e);\n      dydt.fill(0);\n    }\n  };\n  const integrator = odeRK4(y0, derivativeFuncForSolver, t0, positiveDt);\n  const results = [{\n    time: integrator.t,\n    state: [...integrator.y]\n  }];\n  console.log(`Starting JS simulation for ${timeLength} days with params:`, currentParams);\n  if (numSteps <= 0) {\n    console.warn(\"Simulation length/step results in zero steps.\");\n    return [];\n  }\n  for (let i = 0; i < numSteps; i++) {\n    try {\n      integrator.step();\n      if (integrator.y.some(val => !Number.isFinite(val))) {\n        console.error(\"Simulation became unstable at t=\", integrator.t, \" State:\", integrator.y);\n      }\n      results.push({\n        time: integrator.t,\n        state: [...integrator.y]\n      });\n    } catch (solverError) {\n      console.error(\"Error during RK4 step:\", solverError);\n      break;\n    }\n  }\n  console.log(\"JS simulation finished.\");\n  return results.map(p => ({\n    time: p.time,\n    CO2: p.state[0],\n    ComplexC: p.state[1],\n    MushroomYield: p.state[2],\n    Mycelium: p.state[3],\n    N: p.state[4],\n    SimpleC: p.state[5],\n    Space: p.state[6],\n    Temp: p.state[7]\n  }));\n}\n\n// Register ChartJS components\nChartJS.register(LineElement, PointElement, Tooltip, Legend, CategoryScale, LinearScale, Title);\n\n// --- React Component ---\nconst GrowthSimulation = () => {\n  _s();\n  const navigate = useNavigate();\n  const [simulationResults, setSimulationResults] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [batchName, setBatchName] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [finalSimulatedYield, setFinalSimulatedYield] = useState(null);\n  // Add 'mycelium' to possible active tabs, default to 'yield'\n  const [activeChartTab, setActiveChartTab] = useState('yield'); // 'yield', 'temp', 'mycelium'\n\n  // Consistent localStorage keys\n  const LOCAL_STORAGE_KEYS = {\n    TEMPERATURE: 'sim_temperature',\n    PH: 'sim_ph',\n    SUBSTRATE: 'sim_substrate',\n    SIMULATION_DAYS: 'sim_duration',\n    BATCH_NAME: 'sim_batch_name',\n    START_DATE: 'sim_start_date'\n  };\n  useEffect(() => {\n    let isMounted = true;\n    setIsLoading(true);\n    setError(null);\n    setFinalSimulatedYield(null);\n    setTimeout(() => {\n      if (!isMounted) return;\n      try {\n        // Load parameters (Batch Name and Start Date are correctly loaded here)\n        const savedTemperature = localStorage.getItem(LOCAL_STORAGE_KEYS.TEMPERATURE);\n        const savedPh = localStorage.getItem(LOCAL_STORAGE_KEYS.PH);\n        const savedSubstrateJson = localStorage.getItem(LOCAL_STORAGE_KEYS.SUBSTRATE);\n        const savedDays = localStorage.getItem(LOCAL_STORAGE_KEYS.SIMULATION_DAYS);\n        const savedBatchName = localStorage.getItem(LOCAL_STORAGE_KEYS.BATCH_NAME) || 'N/A'; // Correctly reads batch name\n        const savedStartDate = localStorage.getItem(LOCAL_STORAGE_KEYS.START_DATE) || 'N/A'; // Correctly reads start date\n\n        setBatchName(savedBatchName); // State is set\n        setStartDate(savedStartDate); // State is set\n\n        // --- Parameter validation and simulation run (same as before) ---\n        if (savedTemperature === null || savedPh === null || savedSubstrateJson === null || savedDays === null) {\n          const missing = [/* ... error message construction ... */].filter(Boolean).join(', ');\n          throw new Error(`Missing required simulation parameters: ${missing}. Please set them in Condition Settings.`);\n        }\n        const temp = parseFloat(savedTemperature);\n        const phValue = parseFloat(savedPh);\n        const days = parseInt(savedDays, 10);\n        let substrateData = null;\n        let initialWeight = 0;\n        try {\n          substrateData = JSON.parse(savedSubstrateJson);\n          if (typeof substrateData !== 'object' || substrateData === null) throw new Error(\"Invalid substrate format.\");\n          initialWeight = Object.values(substrateData).reduce((sum, val) => sum + (Number(val) || 0), 0);\n        } catch (parseError) {\n          /* ... error handling ... */throw parseError;\n        }\n        if (isNaN(temp) || isNaN(phValue) || isNaN(initialWeight) || isNaN(days)) throw new Error(\"Invalid numerical parameters.\");\n        const simulationDuration = days > 0 ? days : defaultParams.timeLength;\n        const simulationInputs = {\n          'External Temp': temp,\n          'pH': phValue,\n          'Initial Dry Substrate Weight': initialWeight > 0 ? initialWeight : defaultParams['Initial Dry Substrate Weight'],\n          'timeLength': simulationDuration\n        };\n        const results = runSimulation(simulationInputs);\n        // --- (End of parameter validation and simulation run) ---\n\n        if (isMounted) {\n          setSimulationResults(results);\n          if (results && results.length > 0) {\n            const lastResult = results[results.length - 1];\n            if (lastResult && Number.isFinite(lastResult.MushroomYield)) {\n              setFinalSimulatedYield(lastResult.MushroomYield);\n            }\n            console.log(\"Simulation ended at t=\", lastResult.time, \" Final State:\", lastResult);\n          } else {\n            console.log(\"Simulation produced no results.\");\n          }\n        }\n      } catch (err) {\n        console.error(\"Error during simulation setup or run:\", err);\n        if (isMounted) setError(err.message || \"Failed to run simulation.\");\n      } finally {\n        if (isMounted) setIsLoading(false);\n      }\n    }, 50);\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n  const handleBackClick = () => {\n    navigate('/condition-setting');\n  };\n\n  // --- Chart Data & Options ---\n  const getChartConfig = () => {\n    if (!simulationResults || simulationResults.length === 0) {\n      return {\n        data: {\n          datasets: []\n        },\n        options: {}\n      };\n    }\n    const yieldColor = '#2E7D32';\n    const tempColor = '#C62828';\n    const myceliumColor = '#1976D2'; // Blue for Mycelium\n    const textColor = '#333';\n    const gridColor = 'rgba(0, 0, 0, 0.08)';\n    let datasets = [];\n    const options = {\n      responsive: true,\n      maintainAspectRatio: false,\n      plugins: {\n        /* ... legend, tooltip, title config ... */\n        legend: {\n          display: true,\n          labels: {\n            color: textColor,\n            font: {\n              family: 'Lexend'\n            }\n          }\n        },\n        tooltip: {\n          enabled: true,\n          bodyFont: {\n            family: 'Lexend'\n          },\n          titleFont: {\n            family: 'Lexend'\n          }\n        },\n        title: {\n          display: true,\n          text: '',\n          color: textColor,\n          font: {\n            size: 16,\n            family: 'Lexend'\n          }\n        }\n      },\n      scales: {\n        x: {\n          /* ... x-axis config ... */\n          type: 'linear',\n          title: {\n            display: true,\n            text: 'Time (Days)',\n            color: textColor,\n            font: {\n              family: 'Lexend'\n            }\n          },\n          ticks: {\n            color: textColor,\n            font: {\n              family: 'Lexend'\n            }\n          },\n          grid: {\n            color: gridColor\n          },\n          min: 0\n        },\n        // Define ALL potential Y axes\n        yYield: {\n          type: 'linear',\n          position: 'left',\n          title: {\n            display: true,\n            text: 'Yield (g)',\n            color: yieldColor,\n            font: {\n              family: 'Lexend'\n            }\n          },\n          ticks: {\n            color: yieldColor,\n            font: {\n              family: 'Lexend'\n            }\n          },\n          grid: {\n            drawOnChartArea: false\n          },\n          beginAtZero: true,\n          display: false\n        },\n        // Initially hidden\n        yTemp: {\n          type: 'linear',\n          position: 'left',\n          title: {\n            display: true,\n            text: 'Temperature (°C)',\n            color: tempColor,\n            font: {\n              family: 'Lexend'\n            }\n          },\n          ticks: {\n            color: tempColor,\n            font: {\n              family: 'Lexend'\n            }\n          },\n          grid: {\n            drawOnChartArea: false\n          },\n          beginAtZero: false,\n          display: false\n        },\n        // Initially hidden\n        yMycelium: {\n          type: 'linear',\n          position: 'left',\n          title: {\n            display: true,\n            text: 'Mycelium Density',\n            color: myceliumColor,\n            font: {\n              family: 'Lexend'\n            }\n          },\n          ticks: {\n            color: myceliumColor,\n            font: {\n              family: 'Lexend'\n            }\n          },\n          grid: {\n            drawOnChartArea: false\n          },\n          beginAtZero: true,\n          suggestedMax: 1,\n          display: false\n        } // Initially hidden\n      }\n    };\n\n    // Reset display for all axes before setting the active one\n    options.scales.yYield.display = false;\n    options.scales.yTemp.display = false;\n    options.scales.yMycelium.display = false;\n    switch (activeChartTab) {\n      case 'yield':\n        options.plugins.title.text = 'Yield Over Time';\n        options.scales.yYield.display = true; // Show this axis\n        datasets = [{\n          label: 'Mushroom Yield (g)',\n          data: simulationResults.map(p => ({\n            x: p.time,\n            y: Number.isFinite(p.MushroomYield) ? p.MushroomYield : null\n          })),\n          borderColor: yieldColor,\n          backgroundColor: 'rgba(46, 125, 50, 0.1)',\n          yAxisID: 'yYield'\n        }];\n        break;\n      case 'temp':\n        options.plugins.title.text = 'Temperature Over Time';\n        options.scales.yTemp.display = true; // Show this axis\n        datasets = [{\n          label: 'Temperature (°C)',\n          data: simulationResults.map(p => ({\n            x: p.time,\n            y: Number.isFinite(p.Temp) ? p.Temp : null\n          })),\n          borderColor: tempColor,\n          backgroundColor: 'rgba(198, 40, 40, 0.1)',\n          yAxisID: 'yTemp'\n        }];\n        break;\n      // *** ADD CASE FOR MYCELIUM ***\n      case 'mycelium':\n        options.plugins.title.text = 'Mycelium Growth Over Time';\n        options.scales.yMycelium.display = true; // Show this axis\n        datasets = [{\n          label: 'Mycelium Density',\n          // Or 'Mycelium Growth'\n          data: simulationResults.map(p => ({\n            x: p.time,\n            y: Number.isFinite(p.Mycelium) ? p.Mycelium : null\n          })),\n          borderColor: myceliumColor,\n          backgroundColor: 'rgba(25, 118, 210, 0.1)',\n          yAxisID: 'yMycelium'\n        }];\n        break;\n      default:\n        datasets = [];\n    }\n    return {\n      data: {\n        datasets: datasets.map(ds => ({\n          ...ds,\n          tension: 0.1,\n          pointRadius: 2,\n          spanGaps: true\n        }))\n      },\n      options: options\n    };\n  };\n  const chartConfig = getChartConfig();\n\n  // --- JSX ---\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"growth-simulation\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"simulation-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logobox\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleBackClick,\n          className: \"back-button\",\n          title: \"Back to Settings\",\n          children: \"\\u2190\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: logoSrc,\n            alt: \"City Sprouts Logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"batch-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"batch-name\",\n          children: [\"Batch: \", batchName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"start-date\",\n          children: [\"Start Date: \", startDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animation-area content-card\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Animation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-results-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tabs-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveChartTab('yield'),\n            className: `tab-button ${activeChartTab === 'yield' ? 'tab-button-active' : ''}`,\n            children: \" Yield over Time \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveChartTab('temp'),\n            className: `tab-button ${activeChartTab === 'temp' ? 'tab-button-active' : ''}`,\n            children: \" Temperature \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveChartTab('mycelium'),\n            className: `tab-button ${activeChartTab === 'mycelium' ? 'tab-button-active' : ''}`,\n            children: \" Mycelium \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 24\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-area content-card\",\n          children: [isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"loading-message\",\n            children: \"Loading simulation data...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 39\n          }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-message\",\n            children: [\"Error: \", error]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 35\n          }, this), !isLoading && !error && simulationResults && (chartConfig.data.datasets.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-container\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(Line, {\n              options: chartConfig.options,\n              data: chartConfig.data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 68\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 34\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"no-data-message\",\n            children: \"No data available for this chart.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 36\n          }, this)), !isLoading && !error && !simulationResults && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"no-data-message\",\n            children: \"No simulation results available.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 72\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"results-section content-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"results-heading\",\n            children: [\" Results \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"info-icon\",\n              title: \"Key simulation outputs based on initial conditions\",\n              children: \"i\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 66\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"results-items\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"result-label\",\n                children: \"Projected Yield:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 32\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"result-value\",\n                children: isLoading ? '...' : error ? 'Error' : Number.isFinite(finalSimulatedYield) ? `${finalSimulatedYield.toFixed(1)}g` : 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 32\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"result-label\",\n                children: \"Initial C:N Ratio:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 32\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"result-value\",\n                children: FIXED_CN_RATIO.toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 32\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 24\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 340,\n    columnNumber: 8\n  }, this);\n};\n_s(GrowthSimulation, \"WujbTxsfSuLk8SGaJb8thjtor8I=\", false, function () {\n  return [useNavigate];\n});\n_c = GrowthSimulation;\nexport default GrowthSimulation;\nvar _c;\n$RefreshReg$(_c, \"GrowthSimulation\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Line","Chart","ChartJS","LineElement","PointElement","Tooltip","Legend","CategoryScale","LinearScale","Title","odeRK4","logoSrc","jsxDEV","_jsxDEV","defaultParams","timeStart","timeLength","timeStep","FIXED_CN_RATIO","linearInterpolate","data","x","length","i","x0","y0","x1","y1","divisor","t","derivatives","dydt","y","currentParams","currentCO2","currentComplexC","currentMushroomYield","currentMycelium","currentN","currentSimpleC","currentSpace","currentTemp","initialDrySubstrateWeight","cnRatio","cnRatioPlusOne","InitC","AvailableN","AvailableC","NEffect","CEffect","Math","sqrt","max","VolumeNormalisation","Effect_of_CO2_on_Mush_Growth","Effect_of_CO2_on_Myc_Growth","Effect_of_pH_on_Mush_Growth","Effect_of_pH_on_Myc_Growth","Effect_of_Temp_on_Mush_Growth","Effect_of_Temp_on_Myc_Growth","TempEff_","TempEffect","pHEff_","pHEffect","CO2Eff_","CO2Effect","RawGrowthRate","GrowthOpp","GrowthRate","NormGrowthRate","flow_Breakdown","flow_CCons","flow_CO2Prod","flow_CO2Vent","flow_Colonisation","flow_MushroomGrowth","flow_NCons","flow_TempProd","flow_TempVent","getInitialState","p","Number","complexSimpleRatio","Init_C","runSimulation","inputParams","t0","dt","positiveDt","numSteps","floor","derivativeFuncForSolver","e","console","error","fill","integrator","results","time","state","log","warn","step","some","val","isFinite","push","solverError","map","CO2","ComplexC","MushroomYield","Mycelium","N","SimpleC","Space","Temp","register","GrowthSimulation","_s","navigate","simulationResults","setSimulationResults","isLoading","setIsLoading","setError","batchName","setBatchName","startDate","setStartDate","finalSimulatedYield","setFinalSimulatedYield","activeChartTab","setActiveChartTab","LOCAL_STORAGE_KEYS","TEMPERATURE","PH","SUBSTRATE","SIMULATION_DAYS","BATCH_NAME","START_DATE","isMounted","setTimeout","savedTemperature","localStorage","getItem","savedPh","savedSubstrateJson","savedDays","savedBatchName","savedStartDate","missing","filter","Boolean","join","Error","temp","parseFloat","phValue","days","parseInt","substrateData","initialWeight","JSON","parse","Object","values","reduce","sum","parseError","isNaN","simulationDuration","simulationInputs","lastResult","err","message","handleBackClick","getChartConfig","datasets","options","yieldColor","tempColor","myceliumColor","textColor","gridColor","responsive","maintainAspectRatio","plugins","legend","display","labels","color","font","family","tooltip","enabled","bodyFont","titleFont","title","text","size","scales","type","ticks","grid","min","yYield","position","drawOnChartArea","beginAtZero","yTemp","yMycelium","suggestedMax","label","borderColor","backgroundColor","yAxisID","ds","tension","pointRadius","spanGaps","chartConfig","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/celst/sds/src/components/GrowthSimulation.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, LineElement, PointElement, Tooltip, Legend, CategoryScale, LinearScale, Title } from 'chart.js';\r\nimport odeRK4 from 'ode-rk4';\r\nimport '../styles/GrowthSimulation.css'; // Import the CSS file\r\nimport logoSrc from '../assets/images/cslogo.png';\r\n\r\n// --- Simulation Logic & ChartJS Registration ---\r\n\r\n// Default Model Parameters\r\nconst defaultParams = {\r\n    timeStart: 0, timeLength: 100, timeStep: 0.2,\r\n    'C BD Rate': 1.11, 'C Coeff': 0.7, 'C Cons. Rate': 76.39, 'CO2 Coeff': 0.8,\r\n    'CO2 Production Rate': 410000, 'CO2 Removal Rate': 12.6, 'External CO2': 428.23,\r\n    'External Temp': 24, 'Growth Coeff': 5.1,\r\n    // 'Initial C:N Ratio': 43.58, // Overridden by FIXED_CN_RATIO\r\n    'Initial Complex:Simple Ratio': 0.8054,\r\n    'Initial Dry Substrate Weight': 410.2,\r\n    'IsMush': 1, 'Mushroom Multiplier': 5.17, 'N Coeff': 68.4, 'N Rate': 13.03,\r\n    'pH': 6.91,\r\n    'pH Coeff': 1.4, 'Temp Coeff': 1.3, 'Temp Production Rate': 405,\r\n    'Temp Transfer Rate': 1.5,\r\n    'Effect of CO2 on Mush Growth Data': [[500, 0.9], [800, 1], [1000, 0.8], [1200, 0.25], [1400, 0]],\r\n    'Effect of CO2 on Myc Growth Data': [[15000, 1], [20000, 0.9], [25000, 0.25], [30000, 0]],\r\n    'Effect of pH on Mush Growth Data': [[5.5, 0], [6, 0.25], [6.7, 1], [7, 0.6], [7.5, 0]],\r\n    'Effect of pH on Myc Growth Data': [[5.8, 0], [6, 0.25], [6.7, 1], [7, 0.6], [7.5, 0]],\r\n    'Effect of Temp on Mush Growth Data': [[10, 0], [15, 5.37], [20, 6.36], [25, 8.63], [30, 6.37], [40, 0]],\r\n    'Effect of Temp on Myc Growth Data': [[10, 0], [15, 5.37], [20, 6.36], [25, 8.63], [30, 6.37], [35, 5.36], [45, 0]],\r\n};\r\n\r\n// FIXED C:N Ratio as requested\r\nconst FIXED_CN_RATIO = 0.96;\r\n\r\n// Helper function for Linear Interpolation\r\nfunction linearInterpolate(data, x) {\r\n    if (!data || data.length === 0) return 0;\r\n    if (x <= data[0][0]) return data[0][1];\r\n    if (x >= data[data.length - 1][0]) return data[data.length - 1][1];\r\n    let i = 0;\r\n    while (i < data.length - 1 && x > data[i + 1][0]) i++;\r\n    const x0 = data[i][0], y0 = data[i][1], x1 = data[i + 1][0], y1 = data[i + 1][1];\r\n    const divisor = (x1 - x0);\r\n    if (divisor === 0) return y0;\r\n    const t = (x - x0) / divisor;\r\n    return y0 + t * (y1 - y0);\r\n}\r\n\r\n// Derivative Function\r\nfunction derivatives(dydt, y, t, currentParams) {\r\n    const [ currentCO2, currentComplexC, currentMushroomYield, currentMycelium, currentN, currentSimpleC, currentSpace, currentTemp ] = y;\r\n    const initialDrySubstrateWeight = currentParams['Initial Dry Substrate Weight'] || 1;\r\n    const cnRatio = currentParams['Initial C:N Ratio'];\r\n    const cnRatioPlusOne = cnRatio + 1;\r\n    const InitC = initialDrySubstrateWeight - (initialDrySubstrateWeight / cnRatioPlusOne);\r\n    const AvailableN = currentN / initialDrySubstrateWeight;\r\n    const AvailableC = currentSimpleC / initialDrySubstrateWeight;\r\n    const NEffect = currentParams['N Coeff'] * AvailableN;\r\n    const CEffect = Math.sqrt(Math.max(0, currentParams['C Coeff'] * AvailableC));\r\n    const VolumeNormalisation = Math.sqrt(100 / initialDrySubstrateWeight);\r\n    const Effect_of_CO2_on_Mush_Growth = linearInterpolate(currentParams['Effect of CO2 on Mush Growth Data'], currentCO2);\r\n    const Effect_of_CO2_on_Myc_Growth = linearInterpolate(currentParams['Effect of CO2 on Myc Growth Data'], currentCO2);\r\n    const Effect_of_pH_on_Mush_Growth = linearInterpolate(currentParams['Effect of pH on Mush Growth Data'], currentParams['pH']);\r\n    const Effect_of_pH_on_Myc_Growth = linearInterpolate(currentParams['Effect of pH on Myc Growth Data'], currentParams['pH']);\r\n    const Effect_of_Temp_on_Mush_Growth = linearInterpolate(currentParams['Effect of Temp on Mush Growth Data'], currentTemp);\r\n    const Effect_of_Temp_on_Myc_Growth = linearInterpolate(currentParams['Effect of Temp on Myc Growth Data'], currentTemp);\r\n    const TempEff_ = currentParams['IsMush'] === 0 ? Effect_of_Temp_on_Myc_Growth : Effect_of_Temp_on_Mush_Growth;\r\n    const TempEffect = (currentParams['Temp Coeff'] * TempEff_) / 10;\r\n    const pHEff_ = currentParams['IsMush'] === 0 ? Effect_of_pH_on_Myc_Growth : Effect_of_pH_on_Mush_Growth;\r\n    const pHEffect = pHEff_ * currentParams['pH Coeff'];\r\n    const CO2Eff_ = currentParams['IsMush'] === 0 ? Effect_of_CO2_on_Myc_Growth : Effect_of_CO2_on_Mush_Growth;\r\n    const CO2Effect = currentParams['CO2 Coeff'] * CO2Eff_;\r\n    const RawGrowthRate = TempEffect * pHEffect * NEffect * CEffect * CO2Effect;\r\n    const GrowthOpp = currentSpace * currentMycelium;\r\n    let GrowthRate = currentParams['IsMush'] === 1 ? (RawGrowthRate * currentParams['Growth Coeff']) : (RawGrowthRate * GrowthOpp * currentParams['Growth Coeff']);\r\n    GrowthRate = Math.max(0, GrowthRate);\r\n    let NormGrowthRate = currentParams['IsMush'] === 1 ? (GrowthRate / 100) : GrowthRate;\r\n    const flow_Breakdown = currentMycelium * currentParams['C BD Rate'] * currentComplexC * RawGrowthRate * VolumeNormalisation;\r\n    const flow_CCons = NormGrowthRate * currentParams['C Cons. Rate'];\r\n    const flow_CO2Prod = NormGrowthRate * currentParams['CO2 Production Rate'];\r\n    const flow_CO2Vent = currentParams['CO2 Removal Rate'] * (currentCO2 - currentParams['External CO2']) * VolumeNormalisation;\r\n    const flow_Colonisation = currentParams['IsMush'] === 0 ? GrowthRate : 0;\r\n    const flow_MushroomGrowth = currentParams['IsMush'] === 1 ? (GrowthRate * currentParams['Mushroom Multiplier']) : 0;\r\n    const flow_NCons = NormGrowthRate * currentParams['N Rate'];\r\n    const flow_TempProd = NormGrowthRate * currentParams['Temp Production Rate'];\r\n    const flow_TempVent = (currentTemp - currentParams['External Temp']) * currentParams['Temp Transfer Rate'] * VolumeNormalisation;\r\n    dydt[0] = flow_CO2Prod - flow_CO2Vent; dydt[1] = -flow_Breakdown; dydt[2] = flow_MushroomGrowth; dydt[3] = flow_Colonisation;\r\n    dydt[4] = -flow_NCons; dydt[5] = flow_Breakdown - flow_CCons; dydt[6] = -flow_Colonisation; dydt[7] = flow_TempProd - flow_TempVent;\r\n    if (currentCO2 <= 0 && dydt[0] < 0) dydt[0] = 0; if (currentComplexC <= 0 && dydt[1] < 0) dydt[1] = 0; if (currentMushroomYield <= 0 && dydt[2] < 0) dydt[2] = 0; if (currentMycelium <= 0 && dydt[3] < 0) dydt[3] = 0; if (currentN <= 0 && dydt[4] < 0) dydt[4] = 0; if (currentSimpleC <= 0 && dydt[5] < 0) dydt[5] = 0; if (currentSpace <= 0 && dydt[6] < 0) dydt[6] = 0; if (currentTemp <= 0 && dydt[7] < 0) dydt[7] = 0;\r\n}\r\n\r\n// Initial State Calculation\r\nfunction getInitialState(p) {\r\n    const initialDrySubstrateWeight = Number(p['Initial Dry Substrate Weight']) || defaultParams['Initial Dry Substrate Weight'];\r\n    const cnRatio = Number(p['Initial C:N Ratio']);\r\n    const complexSimpleRatio = Number(p['Initial Complex:Simple Ratio']) || defaultParams['Initial Complex:Simple Ratio'];\r\n    const cnRatioPlusOne = cnRatio + 1;\r\n    const Init_C = initialDrySubstrateWeight - (initialDrySubstrateWeight / cnRatioPlusOne);\r\n    return [\r\n        Number(p['External CO2']) || defaultParams['External CO2'],\r\n        Init_C * complexSimpleRatio,\r\n        0,\r\n        0.01, // Start Mycelium low\r\n        initialDrySubstrateWeight / cnRatioPlusOne,\r\n        Init_C * (1 - complexSimpleRatio),\r\n        1 - 0.01, // Start Space high\r\n        Number(p['External Temp']) || defaultParams['External Temp']\r\n    ];\r\n}\r\n\r\n// Run Simulation Function\r\nfunction runSimulation(inputParams) {\r\n    const currentParams = {\r\n        ...defaultParams,\r\n        ...inputParams,\r\n        'Initial C:N Ratio': FIXED_CN_RATIO, // Force the C:N Ratio\r\n    };\r\n    const y0 = getInitialState(currentParams);\r\n    const t0 = currentParams.timeStart;\r\n    const dt = currentParams.timeStep;\r\n    const timeLength = Math.max(0, currentParams.timeLength);\r\n    const positiveDt = Math.max(dt, 1e-6);\r\n    const numSteps = Math.floor(timeLength / positiveDt);\r\n    const derivativeFuncForSolver = (dydt, y, t) => {\r\n        try {\r\n            derivatives(dydt, y, t, currentParams);\r\n        } catch (e) {\r\n            console.error(\"Error in derivatives function:\", e);\r\n            dydt.fill(0);\r\n        }\r\n    };\r\n    const integrator = odeRK4(y0, derivativeFuncForSolver, t0, positiveDt);\r\n    const results = [{ time: integrator.t, state: [...integrator.y] }];\r\n    console.log(`Starting JS simulation for ${timeLength} days with params:`, currentParams);\r\n    if (numSteps <= 0) {\r\n        console.warn(\"Simulation length/step results in zero steps.\");\r\n        return [];\r\n    }\r\n    for (let i = 0; i < numSteps; i++) {\r\n        try {\r\n            integrator.step();\r\n            if (integrator.y.some(val => !Number.isFinite(val))) {\r\n                console.error(\"Simulation became unstable at t=\", integrator.t, \" State:\", integrator.y);\r\n            }\r\n            results.push({ time: integrator.t, state: [...integrator.y] });\r\n        } catch (solverError) {\r\n            console.error(\"Error during RK4 step:\", solverError);\r\n            break;\r\n        }\r\n    }\r\n    console.log(\"JS simulation finished.\");\r\n    return results.map(p => ({\r\n        time: p.time, CO2: p.state[0], ComplexC: p.state[1], MushroomYield: p.state[2], Mycelium: p.state[3], N: p.state[4], SimpleC: p.state[5], Space: p.state[6], Temp: p.state[7]\r\n    }));\r\n}\r\n\r\n// Register ChartJS components\r\nChartJS.register(LineElement, PointElement, Tooltip, Legend, CategoryScale, LinearScale, Title);\r\n\r\n\r\n// --- React Component ---\r\nconst GrowthSimulation = () => {\r\n  const navigate = useNavigate();\r\n  const [simulationResults, setSimulationResults] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [batchName, setBatchName] = useState('');\r\n  const [startDate, setStartDate] = useState('');\r\n  const [finalSimulatedYield, setFinalSimulatedYield] = useState(null);\r\n  // Add 'mycelium' to possible active tabs, default to 'yield'\r\n  const [activeChartTab, setActiveChartTab] = useState('yield'); // 'yield', 'temp', 'mycelium'\r\n\r\n  // Consistent localStorage keys\r\n  const LOCAL_STORAGE_KEYS = {\r\n      TEMPERATURE: 'sim_temperature',\r\n      PH: 'sim_ph',\r\n      SUBSTRATE: 'sim_substrate',\r\n      SIMULATION_DAYS: 'sim_duration',\r\n      BATCH_NAME: 'sim_batch_name',\r\n      START_DATE: 'sim_start_date',\r\n  };\r\n\r\n  useEffect(() => {\r\n      let isMounted = true;\r\n      setIsLoading(true);\r\n      setError(null);\r\n      setFinalSimulatedYield(null);\r\n\r\n      setTimeout(() => {\r\n          if (!isMounted) return;\r\n          try {\r\n              // Load parameters (Batch Name and Start Date are correctly loaded here)\r\n              const savedTemperature = localStorage.getItem(LOCAL_STORAGE_KEYS.TEMPERATURE);\r\n              const savedPh = localStorage.getItem(LOCAL_STORAGE_KEYS.PH);\r\n              const savedSubstrateJson = localStorage.getItem(LOCAL_STORAGE_KEYS.SUBSTRATE);\r\n              const savedDays = localStorage.getItem(LOCAL_STORAGE_KEYS.SIMULATION_DAYS);\r\n              const savedBatchName = localStorage.getItem(LOCAL_STORAGE_KEYS.BATCH_NAME) || 'N/A'; // Correctly reads batch name\r\n              const savedStartDate = localStorage.getItem(LOCAL_STORAGE_KEYS.START_DATE) || 'N/A'; // Correctly reads start date\r\n\r\n              setBatchName(savedBatchName); // State is set\r\n              setStartDate(savedStartDate); // State is set\r\n\r\n              // --- Parameter validation and simulation run (same as before) ---\r\n              if (savedTemperature === null || savedPh === null || savedSubstrateJson === null || savedDays === null) {\r\n                  const missing = [ /* ... error message construction ... */ ].filter(Boolean).join(', ');\r\n                  throw new Error(`Missing required simulation parameters: ${missing}. Please set them in Condition Settings.`);\r\n              }\r\n              const temp = parseFloat(savedTemperature);\r\n              const phValue = parseFloat(savedPh);\r\n              const days = parseInt(savedDays, 10);\r\n              let substrateData = null;\r\n              let initialWeight = 0;\r\n              try {\r\n                  substrateData = JSON.parse(savedSubstrateJson);\r\n                  if (typeof substrateData !== 'object' || substrateData === null) throw new Error(\"Invalid substrate format.\");\r\n                  initialWeight = Object.values(substrateData).reduce((sum, val) => sum + (Number(val) || 0), 0);\r\n              } catch (parseError) { /* ... error handling ... */ throw parseError; }\r\n              if (isNaN(temp) || isNaN(phValue) || isNaN(initialWeight) || isNaN(days)) throw new Error(\"Invalid numerical parameters.\");\r\n              const simulationDuration = (days > 0) ? days : defaultParams.timeLength;\r\n              const simulationInputs = {\r\n                  'External Temp': temp,\r\n                  'pH': phValue,\r\n                  'Initial Dry Substrate Weight': initialWeight > 0 ? initialWeight : defaultParams['Initial Dry Substrate Weight'],\r\n                  'timeLength': simulationDuration,\r\n              };\r\n              const results = runSimulation(simulationInputs);\r\n              // --- (End of parameter validation and simulation run) ---\r\n\r\n\r\n              if (isMounted) {\r\n                   setSimulationResults(results);\r\n                   if (results && results.length > 0) {\r\n                       const lastResult = results[results.length - 1];\r\n                        if (lastResult && Number.isFinite(lastResult.MushroomYield)) {\r\n                            setFinalSimulatedYield(lastResult.MushroomYield);\r\n                        }\r\n                        console.log(\"Simulation ended at t=\", lastResult.time, \" Final State:\", lastResult);\r\n                   } else {\r\n                        console.log(\"Simulation produced no results.\");\r\n                   }\r\n               }\r\n\r\n          } catch (err) {\r\n              console.error(\"Error during simulation setup or run:\", err);\r\n              if (isMounted) setError(err.message || \"Failed to run simulation.\");\r\n          } finally {\r\n              if (isMounted) setIsLoading(false);\r\n          }\r\n      }, 50);\r\n\r\n      return () => { isMounted = false; };\r\n  }, []);\r\n\r\n  const handleBackClick = () => { navigate('/condition-setting'); };\r\n\r\n  // --- Chart Data & Options ---\r\n  const getChartConfig = () => {\r\n      if (!simulationResults || simulationResults.length === 0) {\r\n          return { data: { datasets: [] }, options: {} };\r\n      }\r\n\r\n      const yieldColor = '#2E7D32';\r\n      const tempColor = '#C62828';\r\n      const myceliumColor = '#1976D2'; // Blue for Mycelium\r\n      const textColor = '#333';\r\n      const gridColor = 'rgba(0, 0, 0, 0.08)';\r\n\r\n      let datasets = [];\r\n      const options = {\r\n          responsive: true, maintainAspectRatio: false,\r\n          plugins: { /* ... legend, tooltip, title config ... */\r\n              legend: { display: true, labels: { color: textColor, font: { family: 'Lexend'} } },\r\n              tooltip: { enabled: true, bodyFont: { family: 'Lexend'}, titleFont: { family: 'Lexend' } },\r\n              title: { display: true, text: '', color: textColor, font: { size: 16, family: 'Lexend' } }\r\n           },\r\n          scales: {\r\n              x: { /* ... x-axis config ... */\r\n                  type: 'linear', title: { display: true, text: 'Time (Days)', color: textColor, font: { family: 'Lexend'} },\r\n                  ticks: { color: textColor, font: { family: 'Lexend'} }, grid: { color: gridColor }, min: 0,\r\n               },\r\n              // Define ALL potential Y axes\r\n              yYield: { type: 'linear', position: 'left', title: { display: true, text: 'Yield (g)', color: yieldColor, font: { family: 'Lexend'} }, ticks: { color: yieldColor, font: { family: 'Lexend'} }, grid: { drawOnChartArea: false }, beginAtZero: true, display: false }, // Initially hidden\r\n              yTemp: { type: 'linear', position: 'left', title: { display: true, text: 'Temperature (°C)', color: tempColor, font: { family: 'Lexend'} }, ticks: { color: tempColor, font: { family: 'Lexend'} }, grid: { drawOnChartArea: false }, beginAtZero: false, display: false }, // Initially hidden\r\n              yMycelium: { type: 'linear', position: 'left', title: { display: true, text: 'Mycelium Density', color: myceliumColor, font: { family: 'Lexend'} }, ticks: { color: myceliumColor, font: { family: 'Lexend'} }, grid: { drawOnChartArea: false }, beginAtZero: true, suggestedMax: 1, display: false } // Initially hidden\r\n          }\r\n      };\r\n\r\n      // Reset display for all axes before setting the active one\r\n      options.scales.yYield.display = false;\r\n      options.scales.yTemp.display = false;\r\n      options.scales.yMycelium.display = false;\r\n\r\n\r\n      switch (activeChartTab) {\r\n          case 'yield':\r\n              options.plugins.title.text = 'Yield Over Time';\r\n              options.scales.yYield.display = true; // Show this axis\r\n              datasets = [{\r\n                  label: 'Mushroom Yield (g)',\r\n                  data: simulationResults.map(p => ({ x: p.time, y: Number.isFinite(p.MushroomYield) ? p.MushroomYield : null })),\r\n                  borderColor: yieldColor, backgroundColor: 'rgba(46, 125, 50, 0.1)',\r\n                  yAxisID: 'yYield',\r\n              }];\r\n              break;\r\n          case 'temp':\r\n               options.plugins.title.text = 'Temperature Over Time';\r\n               options.scales.yTemp.display = true; // Show this axis\r\n               datasets = [{\r\n                   label: 'Temperature (°C)',\r\n                   data: simulationResults.map(p => ({ x: p.time, y: Number.isFinite(p.Temp) ? p.Temp : null })),\r\n                   borderColor: tempColor, backgroundColor: 'rgba(198, 40, 40, 0.1)',\r\n                   yAxisID: 'yTemp',\r\n               }];\r\n               break;\r\n          // *** ADD CASE FOR MYCELIUM ***\r\n          case 'mycelium':\r\n               options.plugins.title.text = 'Mycelium Growth Over Time';\r\n               options.scales.yMycelium.display = true; // Show this axis\r\n               datasets = [{\r\n                   label: 'Mycelium Density', // Or 'Mycelium Growth'\r\n                   data: simulationResults.map(p => ({ x: p.time, y: Number.isFinite(p.Mycelium) ? p.Mycelium : null })),\r\n                   borderColor: myceliumColor, backgroundColor: 'rgba(25, 118, 210, 0.1)',\r\n                   yAxisID: 'yMycelium',\r\n               }];\r\n               break;\r\n          default:\r\n              datasets = [];\r\n      }\r\n\r\n      return {\r\n           data: { datasets: datasets.map(ds => ({ ...ds, tension: 0.1, pointRadius: 2, spanGaps: true })) },\r\n           options: options\r\n      };\r\n  };\r\n\r\n  const chartConfig = getChartConfig();\r\n\r\n  // --- JSX ---\r\n  return (\r\n       <div className=\"growth-simulation\">\r\n           <header className=\"simulation-header\">\r\n               <div className=\"logobox\">\r\n                    <button onClick={handleBackClick} className=\"back-button\" title=\"Back to Settings\">\r\n                        &larr;\r\n                    </button>\r\n                   <div className=\"logo\">\r\n                       <img src={logoSrc} alt=\"City Sprouts Logo\" />\r\n                   </div>\r\n               </div>\r\n               {/* These values are correctly set from localStorage via useEffect */}\r\n               <div className=\"batch-info\">\r\n                   <span className=\"batch-name\">Batch: {batchName}</span>\r\n                   <span className=\"start-date\">Start Date: {startDate}</span>\r\n               </div>\r\n           </header>\r\n\r\n           <main className=\"main-content-grid\">\r\n               <div className=\"animation-area content-card\">\r\n                   <span>Animation</span>\r\n               </div>\r\n\r\n               <div className=\"chart-results-column\">\r\n                   <div className=\"tabs-container\">\r\n                       <button\r\n                           onClick={() => setActiveChartTab('yield')}\r\n                           className={`tab-button ${activeChartTab === 'yield' ? 'tab-button-active' : ''}`}\r\n                       > Yield over Time </button>\r\n                       <button\r\n                           onClick={() => setActiveChartTab('temp')}\r\n                            className={`tab-button ${activeChartTab === 'temp' ? 'tab-button-active' : ''}`}\r\n                       > Temperature </button>\r\n                       {/* *** ADD MYCELIUM TAB BUTTON *** */}\r\n                       <button\r\n                           onClick={() => setActiveChartTab('mycelium')}\r\n                            className={`tab-button ${activeChartTab === 'mycelium' ? 'tab-button-active' : ''}`}\r\n                       > Mycelium </button>\r\n                   </div>\r\n\r\n                   <div className=\"chart-area content-card\">\r\n                        {/* Loading/Error/Chart Display Logic (no changes needed here) */}\r\n                        {isLoading && <p className=\"loading-message\">Loading simulation data...</p>}\r\n                        {error && <p className=\"error-message\">Error: {error}</p>}\r\n                        {!isLoading && !error && simulationResults && (\r\n                             chartConfig.data.datasets.length > 0 ? (\r\n                                 <div className=\"chart-container\"> <Line options={chartConfig.options} data={chartConfig.data} /> </div>\r\n                             ) : ( <p className=\"no-data-message\">No data available for this chart.</p> )\r\n                        )}\r\n                        {!isLoading && !error && !simulationResults && <p className=\"no-data-message\">No simulation results available.</p>}\r\n                   </div>\r\n\r\n                   <div className=\"results-section content-card\">\r\n                        {/* Results Display Logic (no changes needed here) */}\r\n                        <h3 className=\"results-heading\"> Results <span className=\"info-icon\" title=\"Key simulation outputs based on initial conditions\">i</span> </h3>\r\n                       <div className=\"results-items\">\r\n                           <div className=\"result-item\">\r\n                               <span className=\"result-label\">Projected Yield:</span>\r\n                               <span className=\"result-value\">\r\n                                   {isLoading ? '...' : error ? 'Error' : Number.isFinite(finalSimulatedYield) ? `${finalSimulatedYield.toFixed(1)}g` : 'N/A'}\r\n                               </span>\r\n                           </div>\r\n                           <div className=\"result-item\">\r\n                               <span className=\"result-label\">Initial C:N Ratio:</span>\r\n                               <span className=\"result-value\">\r\n                                   {FIXED_CN_RATIO.toFixed(2)}\r\n                               </span>\r\n                           </div>\r\n                       </div>\r\n                   </div>\r\n               </div>\r\n           </main>\r\n       </div>\r\n   );\r\n};\r\n\r\nexport default GrowthSimulation;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}